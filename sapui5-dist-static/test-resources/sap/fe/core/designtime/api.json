{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.88.0","library":"sap.fe.core","symbols":[{"kind":"namespace","name":"sap.fe","basename":"fe","resource":"sap/fe/core/library.js","module":"sap/fe/core/library","static":true,"visibility":"public","description":"Root namespace for all the SAP Fiori elements-related libraries."},{"kind":"namespace","name":"sap.fe.core","basename":"core","resource":"sap/fe/core/library.js","module":"sap/fe/core/library","export":"","static":true,"visibility":"public","description":"Library providing the core functionality of the runtime for SAP Fiori Elements for OData V4."},{"kind":"class","name":"sap.fe.core.AppComponent","basename":"AppComponent","resource":"sap/fe/core/AppComponent.js","module":"sap/fe/core/AppComponent","export":"","static":true,"visibility":"public","extends":"sap.ui.core.UIComponent","description":"Main class for components used for an application in SAP Fiori elements.\n\nApplication developers using the templates and macros provided by SAP Fiori elements should create their apps by extending this component. This ensures that all the necessary services that you need for the macros and templates to work properly are started.\n\nWhen you use sap.fe.core.AppComponent as the base component, you also need to use a rootView. SAP Fiori elements provides two options: <br/> - sap.fe.templates.RootContainer.view.NavContainer when using sap.m.routing.Router <br/> - sap.fe.templates.RootContainer.view.Fcl when using sap.f.routing.Router (FCL use case) <br/>","ui5-metadata":{"stereotype":"component","designtime":"sap/fe/core/designtime/AppComponent.designtime"},"methods":[{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.fe.core.AppComponent with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.UIComponent.extend}."},{"name":"getAppStateHandler","visibility":"restricted","returnValue":{"type":"oObject","description":"reference to the AppStateHandler"},"description":"Get a reference to the AppStateHandler."},{"name":"getRootContainer","visibility":"restricted","returnValue":{"type":"oObject","description":"reference to NavContainer control or the FCL control"},"description":"Get the NavContainer control or the FCL control."},{"name":"getRootViewController","visibility":"restricted","returnValue":{"type":"oObject","description":"reference to the FCL Controller"},"description":"Get a reference to the nav/FCL Controller."},{"name":"getRouterProxy","visibility":"restricted","returnValue":{"type":"oObject","description":"reference to the outerProxy"},"description":"Get a reference to the RouterProxy."}]},{"kind":"namespace","name":"sap.fe.core.controllerextensions","basename":"controllerextensions","resource":"sap/fe/core/library.js","module":"sap/fe/core/library","export":"controllerextensions","static":true,"visibility":"public","description":"Collection of controller extensions used internally in SAP Fiori Elements exposing a method that you can override to allow more flexibility."},{"kind":"class","name":"sap.fe.core.controllerextensions.IntentBasedNavigation","basename":"IntentBasedNavigation","resource":"sap/fe/core/controllerextensions/IntentBasedNavigation.js","module":"sap/fe/core/controllerextensions/IntentBasedNavigation","export":"","static":true,"visibility":"public","since":"1.86.0","extends":"sap.ui.core.mvc.ControllerExtension","description":"A generic IntentBasedNavigation controller extension to be consumed by controllers for navigating to the external application","ui5-metadata":{"stereotype":"object"},"methods":[{"name":"adaptNavigationContext","visibility":"public","since":"1.86.0","parameters":[{"name":"oSelectionVariant","type":"sap.fe.navigation.SelectionVariant","optional":false,"description":"SelectionVariant that the template has prepared"},{"name":"oTargetInfo","type":"object","optional":false,"description":"SemanticObject and action of the target app"}],"description":"Customize the {@link sap.fe.navigation.SelectionVariant} being passed to this navigation."}]},{"kind":"class","name":"sap.fe.core.controllerextensions.Routing","basename":"Routing","resource":"sap/fe/core/controllerextensions/Routing.js","module":"sap/fe/core/controllerextensions/Routing","export":"","static":true,"visibility":"public","since":"1.86.0","extends":"sap.ui.core.mvc.ControllerExtension","description":"A controller extension offering hooks into the routing flow of the application","ui5-metadata":{"stereotype":"object"},"methods":[{"name":"onBeforeNavigation","visibility":"public","since":"1.86.0","returnValue":{"type":"boolean","description":"true to prevent the default execution, false to keep the standard behavior"},"parameters":[{"name":"oContextInfo","type":"object","optional":false,"description":"Object containing row context and page context"}],"description":"This function can be used to intercept the routing event happening during the normal process of navigating from one page to another.\n\nIf declared as an extension, it allows you to intercept and change the normal navigation flow. If you decide to do your own navigation processing, you can return `true` to prevent the default routing behavior.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."}]},{"kind":"class","name":"sap.fe.core.controllerextensions.ViewState","basename":"ViewState","resource":"sap/fe/core/controllerextensions/ViewState.js","module":"sap/fe/core/controllerextensions/ViewState","export":"","static":true,"visibility":"public","since":"1.85.0","extends":"sap.ui.core.mvc.ControllerExtension","description":"A controller extension offering hooks for state handling\n\nIf you need to maintain a specific state for your application, you can use the controller extension.","ui5-metadata":{"stereotype":"object"},"methods":[{"name":"adaptControlStateHandler","visibility":"protected","parameters":[{"name":"oControl","type":"sap.ui.base.ManagedObject","optional":false,"description":"the control to get state handler for"},{"name":"aControlHandler","type":"object[]","optional":false,"description":"a list of plain objects with two functions: <code>retrieve</code> and <code>apply</code>"}],"description":"Customize the <code>retrieve</code> and <code>apply</code> functions for a certain control.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"adaptStateControls","visibility":"protected","parameters":[{"name":"aCollectedControls","type":"sap.ui.base.ManagedObject[]","optional":false,"description":"the collected controls"}],"description":"This function should add all controls for given view that should be considered for the state handling to the provided control array.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"applyAdditionalStates","visibility":"protected","parameters":[{"name":"oViewState","type":"object","optional":false,"description":"the current view state"},{"name":"aPromises","type":"Promise","optional":false,"description":"extensible array of promises to be resolved before continuing"}],"description":"Applying additional, not control related, states - is called only if navigation type is iAppState.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"applyInitialStateOnly","visibility":"protected","returnValue":{"type":"boolean","description":"whether applyViewState calls should be performed for current view"},"description":"Returns whether view state should only applied once initially.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.Instead}."},{"name":"applyNavigationParameters","visibility":"protected","parameters":[{"name":"oNavParameter","type":"object","optional":false,"parameterProperties":{"navigationType":{"name":"navigationType","type":"sap.fe.navigation.NavType","optional":false,"description":"the actual navigation type"},"selectionVariant":{"name":"selectionVariant","type":"object","optional":true,"description":"the selectionVariant from the navigation"},"selectionVariantDefaults":{"name":"selectionVariantDefaults","type":"object","optional":true,"description":"the selectionVariant defaults from the navigation"},"requiresStandardVariant":{"name":"requiresStandardVariant","type":"boolean","optional":true,"description":"defines whether standard variant must be used in VM"}},"description":"the current navigation parameter"},{"name":"aPromises","type":"Promise","optional":false,"description":"extensible array of promises to be resolved before continuing"}],"description":"Apply navigation parameters - is called only if navigation type is not iAppState.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"applyViewState","visibility":"public","returnValue":{"type":"Promise","description":"promise for async state handling"},"parameters":[{"name":"oViewState","type":"object","optional":false,"description":"the view state to apply (can be undefined)"},{"name":"oNavParameter","type":"object","optional":false,"parameterProperties":{"navigationType":{"name":"navigationType","type":"sap.fe.navigation.NavType","optional":false,"description":"the actual navigation type"},"selectionVariant":{"name":"selectionVariant","type":"object","optional":true,"description":"the selectionVariant from the navigation"},"selectionVariantDefaults":{"name":"selectionVariantDefaults","type":"object","optional":true,"description":"the selectionVariant defaults from the navigation"},"requiresStandardVariant":{"name":"requiresStandardVariant","type":"boolean","optional":true,"description":"defines whether standard variant must be used in VM"}},"description":"the current navigation parameter"}],"description":"Applies the given view state to this extensions view."},{"name":"onAfterStateApplied","visibility":"protected","parameters":[{"name":"aPromises","type":"Promise","optional":false,"description":"extensible array of promises to be resolved before continuing"}],"description":"Hook to react when state for given view was applied.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"onBeforeStateApplied","visibility":"protected","parameters":[{"name":"aPromises","type":"Promise","optional":false,"description":"extensible array of promises to be resolved before continuing"}],"description":"Hook to react before a state for given view is applied.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"retrieveAdditionalStates","visibility":"protected","parameters":[{"name":"mAdditionalStates","type":"object","optional":false,"description":"the additional state"}],"description":"Extend the map of additional states (not control bound) to be added to the current view state of the given view.\n\nThis function is meant to be individually overridden by consuming controllers, but not to be called directly. The override execution is: {@link sap.ui.core.mvc.OverrideExecution.After}."},{"name":"retrieveViewState","visibility":"public","returnValue":{"type":"Promise","description":"a promise resolving the view state"},"description":"Retrieve the view state of this extensions view. When this function is called more than once before finishing, all but the final response will resolve to <code>undefined</code>."}]},{"kind":"enum","name":"sap.fe.core.InitialLoadMode","basename":"InitialLoadMode","resource":"sap/fe/core/library.js","module":"sap/fe/core/library","export":"InitialLoadMode","static":true,"visibility":"public","since":"1.86.0","description":"Possible initial load (first app startup) modes for a ListReport.","properties":[{"name":"Auto","visibility":"public","static":true,"type":"undefined","description":"Data will be loaded initially if filters are set."},{"name":"Disabled","visibility":"public","static":true,"type":"undefined","description":"Data will not be loaded initially."},{"name":"Enabled","visibility":"public","static":true,"type":"undefined","description":"Data will be loaded initially."}]},{"kind":"class","name":"sap.fe.core.PageController","basename":"PageController","resource":"sap/fe/core/PageController.js","module":"sap/fe/core/PageController","export":"","static":true,"visibility":"public","since":"1.88.0","extends":"sap.fe.core.BaseController","description":"Base controller class for your custom page used inside a SAP Fiori elements application.\n\nThis controller provides preconfigured extensions that will ensure you have the basic functionalities required to use the macro."}]}