sap.ui.define(["sap/fe/test/JestTemplatingHelper", "path"], function (JestTemplatingHelper, path) {
  "use strict";

  var compileCDS = JestTemplatingHelper.compileCDS;
  var getControlAttribute = JestTemplatingHelper.getControlAttribute;
  var getTemplatingResult = JestTemplatingHelper.getTemplatingResult;
  describe("MacroField", function () {
    var sMetadataUrl = compileCDS(path.join(__dirname, "./data/simpleFieldMacro.cds"));
    var mBindingContexts = {
      "entitySet": "/Items"
    };
    describe("- with annotations on the dataField's Value property (except semantic) ", function () {
      it("Image identified by IsImageURL ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/2\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FormElementWrapper/m:Avatar");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Image identified by imageURLStream ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/3\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FormElementWrapper/m:Avatar");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Image identified by isMediaType ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/4\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FormElementWrapper/m:Avatar");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on an email address property", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/11\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Link");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on a phone number property", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/12\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Link");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on a Quantity with currency property ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/16\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/u:Currency");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on a Quantity with currency property for Analytics", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/16\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions isAnalytics=\"true\" />\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper/control:contentTrue/u:Currency");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper/control:contentFalse/u:Currency");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper", "condition", domResult)).toEqual("{= !!%{unit1} || !%{amount1}}");
            var currencyContentTrue = getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper/control:contentTrue/u:Currency", "currency", domResult);
            expect(currencyContentTrue).not.toEqual("*");
            expect(currencyContentTrue).not.toBeFalsy();
            var currencyContentFalse = getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper/control:contentFalse/u:Currency", "currency", domResult);
            expect(currencyContentFalse).toEqual("*");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/control:ConditionalWrapper/control:contentFalse/u:Currency", "stringValue", domResult)).toEqual("");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on a Quantity with unit of measure (text) property for analytics", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/14\"\n\t\t\t\t\t\t\t\tparentControl=\"Table\">\n\t\t\t\t\t\t\t\t<internalMacro:formatOptions isAnalytics=\"true\" />\n\t\t\t\t\t\t\t</internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:ConditionalWrapper/control:contentTrue/m:Text");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:ConditionalWrapper/control:contentFalse/m:Text");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:ConditionalWrapper", "condition", domResult)).toEqual("{= !!%{unit1} || !%{quantity1}}");
            var unitContentTrue = getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:ConditionalWrapper/control:contentTrue/m:Text", "text", domResult);
            expect(unitContentTrue).not.toEqual("*");
            expect(unitContentTrue).not.toBeFalsy();
            var unitContentFalse = getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:ConditionalWrapper/control:contentFalse/m:Text", "text", domResult);
            expect(unitContentFalse).toEqual("*");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Simple DataField on a Multi Line text property ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem#bis/0\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions textLinesDisplay=\"42\" textLinesEdit=\"31\"/>\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "maxLines", domResult)).toEqual("42");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:TextArea");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:TextArea", "rows", domResult)).toEqual("31");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("DataField with hardcode string Value ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem#bis/2\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t>\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("DataField with hardcoded string");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
    });
    describe("- when it uses directly a property - ", function () {
      it("Property with text arrangement ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"propWithText\">\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("{parts:[{value: 'formatWithBrackets'},{path:'propWithTextText', targetType : 'any'},{path:'propWithText', type : 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}], formatter: 'sap.fe.core.formatters.ValueFormatter'}");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "value", domResult)).toEqual("{path:'propWithText', type: 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Property with text arrangement and override ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"propWithText\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions displayMode=\"Value\"/>\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("{path:'propWithText', type: 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "value", domResult)).toEqual("{path:'propWithText', type: 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("Boolean property", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"preferredItem\"\n\t\t\t\t\t\t\t\t\t/>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:CheckBox");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
    });
    describe("- check control templating for basic types and input alignment- ", function () {
      describe("- for table - ", function () {
        it("Simple DataField on a string property ", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/1\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("Begin");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a boolean property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/5\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:CheckBox");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Timestamp property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/6\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DateTimePicker");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DateTimePicker", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Decimal property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/7\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Time property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/8\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:TimePicker");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:TimePicker", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Double property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/9\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Integer property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/10\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Date property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/13\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions valueFormat=\"long\"/>\n                              </internalMacro:Field>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("{path:'headerDate', type: 'sap.ui.model.odata.type.Date', formatOptions: {style: 'long'}}");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DatePicker");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DatePicker", "textAlign", domResult)).toEqual("End");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Quantity with unit property where unit is also editable", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/14\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("{mode:'TwoWay', parts:[{path:'quantity1', type : 'sap.ui.model.odata.type.Int64'},{path:'unit1', type : 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}},{mode:'OneTime',path:'/##@@requestUnitsOfMeasure',targetType:'any'}],type:'sap.ui.model.odata.type.Unit'}");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "width", domResult)).toEqual("70%");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "description", domResult)).toBeFalsy();
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]", "width", domResult)).toEqual("30%");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Quantity with unit property where unit is readonly", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/15\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text", "text", domResult)).toEqual("{mode:'TwoWay', parts:[{path:'quantity2', type : 'sap.ui.model.odata.type.Decimal', constraints: {scale: 2, precision: 10}},{path:'unit2', type : 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}},{mode:'OneTime',path:'/##@@requestUnitsOfMeasure',targetType:'any'}],type:'sap.ui.model.odata.type.Unit'}");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "width", domResult)).toEqual("100%");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "description", domResult)).toEqual("{unit2}");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "value", domResult)).toEqual("{mode:'TwoWay', parts:[{path:'quantity2', type : 'sap.ui.model.odata.type.Decimal', constraints: {scale: 2, precision: 10}},{path:'unit2', type : 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}},{mode:'OneTime',path:'/##@@requestUnitsOfMeasure',targetType:'any'}],type:'sap.ui.model.odata.type.Unit', formatOptions: {showMeasure: false}}");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]", "visible", domResult)).toEqual("false");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Quantity with currency property ", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/16\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/control:FormElementWrapper/u:Currency");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "width", domResult)).toEqual("70%");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "description", domResult)).toBeFalsy();
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]", "width", domResult)).toEqual("30%");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Quantity with static unit annotation", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/17\"\n\t\t\t\t\t\t\t\t\tparentControl=\"Table\"\n\t\t\t\t\t\t\t\t\t/>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "width", domResult)).toEqual("100%");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[1]", "description", domResult)).toEqual("mol");
              expect(domResult).toNotHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input[2]");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
      });
      describe("- for form - ", function () {
        it("Simple DataField on a string property ", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/1\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions textAlignMode=\"Form\"/>\n                              </internalMacro:Field>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("Begin");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Integer property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/10\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions textAlignMode=\"Form\"/>\n                              </internalMacro:Field>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:Input", "textAlign", domResult)).toEqual("{= %{ui>/isEditable} ? 'End' : 'Begin'}");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
        it("Simple DataField on a Date property", function () {
          try {
            var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/13\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions textAlignMode=\"Form\"/>\n\t\t\t\t\t\t\t\t</internalMacro:Field>";
            return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:Text");
              expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DatePicker");
              expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentEdit/m:DatePicker", "textAlign", domResult)).toEqual("Begin");
            });
          } catch (e) {
            return Promise.reject(e);
          }
        });
      });
    });
    describe("- check control templating for empty placeHolder trigger- ", function () {
      it("when there is no formatOptions/showEmptyIndicator ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/1\">\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper", "emptyIndicatorTrigger", domResult)).toEqual("inactive");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("when there is formatOptions/showEmptyIndicator for a Datafield ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem/1\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions showEmptyIndicator=\"true\"/>\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper", "emptyIndicatorTrigger", domResult)).toEqual("{path:'name', type: 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
      it("when there is formatOptions/showEmptyIndicator for a property ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"propWithText\">\n\t\t\t\t\t\t\t\t\t<internalMacro:formatOptions showEmptyIndicator=\"true\"/>\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper", "emptyIndicatorTrigger", domResult)).toEqual("{parts:[{value: 'formatWithBrackets'},{path:'propWithTextText', targetType : 'any'},{path:'propWithText', type : 'sap.ui.model.odata.type.String', formatOptions: {parseKeepsEmptyString: true}}], formatter: 'sap.fe.core.formatters.ValueFormatter'}");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
    });
    describe("- dataField annotation- ", function () {
      it("criticality ", function () {
        try {
          var xmlField = "<internalMacro:Field xmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\t\t\t\t\t\t\tentitySet=\"{entitySet>}\"\n\t\t\t\t\t\t\t\t\tdataField=\"@com.sap.vocabularies.UI.v1.LineItem#DataFields/0\">\n                              </internalMacro:Field>";
          return Promise.resolve(getTemplatingResult(xmlField, sMetadataUrl, mBindingContexts, {})).then(function (domResult) {
            expect(domResult).toHaveControl("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:ObjectStatus");
            expect(getControlAttribute("/macros:FieldAPI/control:FieldWrapper/control:contentDisplay/m:ObjectStatus", "icon", domResult)).toEqual("{= (${usageCounter} === 'com.sap.vocabularies.UI.v1.CriticalityType/Negative') || (${usageCounter} === '1') || (${usageCounter} === 1) ? 'sap-icon://message-error' : (${usageCounter} === 'com.sap.vocabularies.UI.v1.CriticalityType/Critical') || (${usageCounter} === '2') || (${usageCounter} === 2) ? 'sap-icon://message-warning' : (${usageCounter} === 'com.sap.vocabularies.UI.v1.CriticalityType/Positive') || (${usageCounter} === '3') || (${usageCounter} === 3) ? 'sap-icon://message-success' : (${usageCounter} === 'com.sap.vocabularies.UI.v1.CriticalityType/Information') || (${usageCounter} === '5') || (${usageCounter} === 5) ? 'sap-icon://message-information' : '' }");
          });
        } catch (e) {
          return Promise.reject(e);
        }
      });
    });
  });
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,