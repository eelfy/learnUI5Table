{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.88.0","library":"sap.ui.integration","symbols":[{"kind":"function","name":"module:sap/ui/integration/designtime/baseEditor/util/unset","basename":"module:sap/ui/integration/designtime/baseEditor/util/unset","resource":"sap/ui/integration/designtime/baseEditor/util/unset.js","module":"sap/ui/integration/designtime/baseEditor/util/unset","export":"","visibility":"restricted","since":"1.76","description":"Removes a specified key from an object or an array and recursively cleans up the hierarchy. The passed object or array is mutated.","examples":[{"caption":"Unsetting an Object Key","text":"unset({\n  a: {\n    b: \"Hello World\"\n  }\n}, [\"a\", \"b\"]);\n\n// Result:\n// {}"},{"caption":"Unsetting an Object Key with a Maximum Cleanup Depth","text":"unset({\n  a: {\n    b: \"Hello World\"\n  }\n}, [\"a\", \"b\"], 0);\n\n// Result:\n// {\n//   a: {}\n// }"},{"caption":"Unsetting an Array Item","text":"unset({\n  a: [\"foo\", \"bar\"]\n}, [\"a\", \"0\"]);\n\n// Result:\n// {\n//   a: [\"Bar\"]\n// }"}],"experimental":{"text":"1.76"},"returnValue":{"type":"object|array","description":"The modified object or array"},"parameters":[{"name":"oObject","type":"object|array","optional":false,"description":"Plain object or array to modify"},{"name":"aParts","type":"string[]","optional":false,"description":"Path to property to remove"},{"name":"iMaxCleanupDepth","type":"int","optional":true,"description":"Maximum depth for recursive cleanup of empty parents. By default, there is no limit."}]},{"kind":"namespace","name":"sap.ui.integration","basename":"integration","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"","static":true,"visibility":"public","description":"SAPUI5 library with controls specialized for SAP Fiori apps."},{"kind":"class","name":"sap.ui.integration.ActionDefinition","basename":"ActionDefinition","resource":"sap/ui/integration/ActionDefinition.js","module":"sap/ui/integration/ActionDefinition","export":"","static":true,"visibility":"public","since":"1.85","extends":"sap.ui.core.Element","description":"Represents an action, which appears in the header of {@link sap.ui.integration.widgets.Card}. Useful in <code>Component</code> card and <code>Extension</code>.","experimental":{"since":"1.85","text":"Disclaimer: this class is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"ui5-metamodel":true,"ui5-metadata":{"stereotype":"element","properties":[{"name":"type","type":"sap.ui.integration.CardActionType","defaultValue":null,"group":"Misc","visibility":"public","description":"The type of the action.","methods":["getType","setType"]},{"name":"text","type":"string","defaultValue":"","group":"Misc","visibility":"public","description":"The text of the action button.","methods":["getText","setText"]},{"name":"icon","type":"sap.ui.core.URI","defaultValue":null,"group":"Misc","visibility":"public","description":"The icon of the action button.","methods":["getIcon","setIcon"]},{"name":"buttonType","type":"sap.m.ButtonType","defaultValue":"Transparent","group":"Misc","visibility":"public","description":"The type of the action button.","methods":["getButtonType","setButtonType"]},{"name":"enabled","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"Indicates whether the user can interact with the action button or not. <b>Note</b>: Disabled controls cannot be focused and they are out of the navigation tab-chain.","methods":["getEnabled","setEnabled"]},{"name":"visible","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","description":"Whether the action button should be visible on the screen.","methods":["getVisible","setVisible"]},{"name":"parameters","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"The parameters of the action.","methods":["getParameters","setParameters"]}],"associations":[{"name":"_menuButton","singularName":"_menuButton","type":"sap.m.Button","cardinality":"0..1","visibility":"hidden","description":"The button in the actions menu, which is related to this action.","methods":["get_menuButton","set_menuButton"]}],"events":[{"name":"press","visibility":"public","description":"Fired when the action button is pressed.","methods":["attachPress","detachPress","firePress"]}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","type":"string","optional":true,"description":"ID for the new ActionDefinition, generated automatically if no ID is given."},{"name":"mSettings","type":"object","optional":true,"description":"Initial settings for the new ActionDefinition."}],"description":"Constructor for a new <code>ActionDefinition</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"press","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fired when the action button is pressed."}],"methods":[{"name":"attachPress","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.ActionDefinition</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.integration.ActionDefinition</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.ActionDefinition</code> itself.\n\nFired when the action button is pressed."},{"name":"detachPress","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.integration.ActionDefinition</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.ActionDefinition with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."},{"name":"firePress","visibility":"protected","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:press press} to attached listeners."},{"name":"getButtonType","visibility":"public","returnValue":{"type":"sap.m.ButtonType","description":"Value of property <code>buttonType</code>"},"description":"Gets current value of property {@link #getButtonType buttonType}.\n\nThe type of the action button.\n\nDefault value is <code>Transparent</code>."},{"name":"getEnabled","visibility":"public","returnValue":{"type":"boolean","description":"Value of property <code>enabled</code>"},"description":"Gets current value of property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the action button or not. <b>Note</b>: Disabled controls cannot be focused and they are out of the navigation tab-chain.\n\nDefault value is <code>true</code>."},{"name":"getIcon","visibility":"public","returnValue":{"type":"sap.ui.core.URI","description":"Value of property <code>icon</code>"},"description":"Gets current value of property {@link #getIcon icon}.\n\nThe icon of the action button."},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.ActionDefinition."},{"name":"getParameters","visibility":"public","returnValue":{"type":"object","description":"Value of property <code>parameters</code>"},"description":"Gets current value of property {@link #getParameters parameters}.\n\nThe parameters of the action."},{"name":"getText","visibility":"public","returnValue":{"type":"string","description":"Value of property <code>text</code>"},"description":"Gets current value of property {@link #getText text}.\n\nThe text of the action button.\n\nDefault value is <code>empty string</code>."},{"name":"getType","visibility":"public","returnValue":{"type":"sap.ui.integration.CardActionType","description":"Value of property <code>type</code>"},"description":"Gets current value of property {@link #getType type}.\n\nThe type of the action."},{"name":"getVisible","visibility":"public","returnValue":{"type":"boolean","description":"Value of property <code>visible</code>"},"description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the action button should be visible on the screen.\n\nDefault value is <code>true</code>."},{"name":"setButtonType","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sButtonType","type":"sap.m.ButtonType","optional":true,"defaultValue":"Transparent","description":"New value for property <code>buttonType</code>"}],"description":"Sets a new value for property {@link #getButtonType buttonType}.\n\nThe type of the action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent</code>."},{"name":"setEnabled","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bEnabled","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>enabled</code>"}],"description":"Sets a new value for property {@link #getEnabled enabled}.\n\nIndicates whether the user can interact with the action button or not. <b>Note</b>: Disabled controls cannot be focused and they are out of the navigation tab-chain.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setIcon","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sIcon","type":"sap.ui.core.URI","optional":false,"description":"New value for property <code>icon</code>"}],"description":"Sets a new value for property {@link #getIcon icon}.\n\nThe icon of the action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setParameters","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oParameters","type":"object","optional":false,"description":"New value for property <code>parameters</code>"}],"description":"Sets a new value for property {@link #getParameters parameters}.\n\nThe parameters of the action.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setText","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sText","type":"string","optional":true,"defaultValue":"\"\"","description":"New value for property <code>text</code>"}],"description":"Sets a new value for property {@link #getText text}.\n\nThe text of the action button.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."},{"name":"setType","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sType","type":"sap.ui.integration.CardActionType","optional":false,"description":"New value for property <code>type</code>"}],"description":"Sets a new value for property {@link #getType type}.\n\nThe type of the action.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setVisible","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bVisible","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>visible</code>"}],"description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the action button should be visible on the screen.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."}]},{"kind":"enum","name":"sap.ui.integration.CardActionType","basename":"CardActionType","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"CardActionType","static":true,"visibility":"public","description":"Enumeration of possible card action types.","experimental":{"since":"1.64","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"ui5-metamodel":true,"ui5-metadata":{"stereotype":"enum"},"properties":[{"name":"Custom","visibility":"public","static":true,"type":"string","description":"Used for custom actions","experimental":{"since":"1.76"}},{"name":"Navigation","visibility":"public","static":true,"type":"string","description":"Used for navigation actions"},{"name":"Submit","visibility":"public","static":true,"type":"string","description":"Used for submit actions"}]},{"kind":"enum","name":"sap.ui.integration.CardArea","basename":"CardArea","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"CardArea","static":true,"visibility":"public","since":"1.86","description":"Defines the areas in a card.","ui5-metamodel":true,"ui5-metadata":{"stereotype":"enum"},"properties":[{"name":"Content","visibility":"public","static":true,"type":"string","description":"The content area."},{"name":"Filters","visibility":"public","static":true,"type":"string","description":"The filters area."},{"name":"Header","visibility":"public","static":true,"type":"string","description":"The header."}]},{"kind":"enum","name":"sap.ui.integration.CardDataMode","basename":"CardDataMode","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"CardDataMode","static":true,"visibility":"public","since":"1.65","description":"Possible data modes for <code>{@link sap.ui.integration.widgets.Card}</code>.","experimental":{"since":"1.65"},"ui5-metamodel":true,"ui5-metadata":{"stereotype":"enum"},"properties":[{"name":"Active","visibility":"public","static":true,"type":"string","description":"When in this mode, the card can make requests."},{"name":"Auto","visibility":"public","static":true,"type":"string","description":"When in this mode, the card starts processing the manifest when the card is in the viewport."},{"name":"Inactive","visibility":"public","static":true,"type":"string","description":"When in this mode, the card cannot make requests."}]},{"kind":"typedef","name":"sap.ui.integration.CardMenuAction","basename":"CardMenuAction","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","static":true,"visibility":"public","description":"An object type that represents card menu action properties.","experimental":{"since":"1.79"},"ui5-metamodel":true,"properties":[{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"visibility":"public","description":"The type of the action."},{"name":"text","type":"string","optional":false,"visibility":"public","description":"The text of the action button."},{"name":"icon","type":"sap.ui.core.URI","optional":false,"visibility":"public","description":"The icon of the action button."},{"name":"tooltip","type":"string","optional":false,"visibility":"public","description":"The tooltip of the action button."},{"name":"buttonType","type":"sap.m.ButtonType","optional":false,"visibility":"public","description":"The type of the action button."},{"name":"enabled","type":"boolean|function","optional":false,"visibility":"public","description":"If the action is enabled. Default value is <code>true</code>."},{"name":"visible","type":"boolean|function","optional":false,"visibility":"public","description":"If the action is visible. Default value is <code>true</code>."},{"name":"action","type":"function","optional":false,"visibility":"public","description":"The action function."},{"name":"parameters","type":"object","optional":false,"visibility":"public","description":"The parameters of the action."}]},{"kind":"class","name":"sap.ui.integration.Designtime","basename":"Designtime","resource":"sap/ui/integration/Designtime.js","module":"sap/ui/integration/Designtime","export":"","static":true,"visibility":"public","since":"1.75","extends":"sap.ui.base.ManagedObject","description":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","experimental":{"since":"1.75"},"ui5-metadata":{"stereotype":"object"},"constructor":{"visibility":"public","parameters":[{"name":"sId","type":"string","optional":true,"description":"ID for the new Designtime, generated automatically if no ID is given."},{"name":"mSettings","type":"object","optional":true,"description":"Initial settings for the new Designtime."}],"description":"Constructor for a new <code>Designtime</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used."},"methods":[{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.Designtime with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."},{"name":"getCard","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.CardFacade","description":"An interface to the card."},"description":"Returns an interface to the card, which uses this extension."},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.ManagedObjectMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.Designtime."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.BaseEditor","basename":"BaseEditor","resource":"sap/ui/integration/designtime/baseEditor/BaseEditor.js","module":"sap/ui/integration/designtime/baseEditor/BaseEditor","export":"","static":true,"visibility":"restricted","since":"1.70.0","extends":"sap.ui.core.Control","description":"<h3>Overview</h3> Configurable JSON editor <h4>Example</h4> <pre>\nsap.ui.require([\"sap/ui/integration/designtime/baseEditor/BaseEditor\"], function (Editor) {\n    var oJson = {\n        root: {\n            context: {\n                id: \"404\",\n                name: \"Kate\",\n                role: \"End User\"\n            },\n            foo: {\n                bar: true\n            }\n        }\n    };\n    var oEditor = new Editor();\n    oEditor.setJson(oJson);\n    oEditor.setConfig({\n        \"context\": \"root/context\",\n        \"properties\" : {\n            \"name\": {\n                \"label\": \"Name\",\n                \"path\": \"name\",\n                \"type\": \"string\"\n            },\n            \"role\": {\n                \"label\": \"Role\",\n                \"path\": \"role\",\n                \"type\": \"enum\",\n                \"enum\": [\"Developer\", \"Key User\", \"End User\"]\n            },\n            \"department\": {\n                \"label\": \"Department\",\n                \"path\": \"department\",\n                \"type\": \"enum\",\n                \"enum\": [\"Sales\", \"HR\", \"Development\"],\n                \"visible\": \"{= ${context>/role} === 'Key User'}\"\n            }\n        },\n        \"propertyEditors\": {\n            \"enum\" : \"sap/ui/integration/designtime/baseEditor/propertyEditors/enumStringEditor/EnumStringEditor\",\n            \"string\" : \"sap/ui/integration/designtime/baseEditor/propertyEditors/stringEditor/StringEditor\"\n        }\n    });\n    oEditor.attachJsonChange(function(oEvent) {\n        var oJson = oEvent.getParameter(\"json\");\n        // live change\n    })\n    oEditor.placeAt(\"content\");\n})\n</pre>","experimental":{"since":"1.70.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"json","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"JSON to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getJson()</code> or <code>.attachJsonChange()</code> should be used instead to get the changed object.","methods":["getJson","setJson"]},{"name":"config","type":"object","defaultValue":"...see text or source","group":"Misc","visibility":"public","description":"Configuration Map config.context {string} Path in the JSON that will be edited e.g. <code>\"path/subpath\"</code> for <code>json.path.subpath</code> config.properties {Object<string,object>} Defines which fields in the context are editable config.properties.<key>.label {string} of the property to show on the UI config.properties.<key>.type {string} of the property (property editor for this type will be shown) config.properties.<key>.path {string} that will be changed, relative to the context. Example: If the context is <code>root</code> and the path is <code>header/name</code>, the <code>json.root.header.name</code> field is to be changed config.properties.<key>.value {string|boolean} (Optional) value of the property. A binding relative to the context (model name) should be used. Example: <code>{context>header/name}</code> will create a binding <code>json.root.header.name</code> config.properties.<key>.tags {array} Strings to categorize the property config.properties.<key>.visible {string|boolean} Should be used as a binding relative to the context to define the conditions under which this property should be changeable, e.g. <code>{= ${context>anotherProperty} === 'someValue'}</code> config.properties.<key>.<other configurations> {any} It is possible to define additional configurations in this namespace. These configurations will be passed to the dedicated property editor. Binding strings relative to context model are supported as well, e.g. <code>{= ${context>someProperty} + ${context>anotherProperty}}</code> config.propertyEditors {Object<string,string>} Defines which property editors should be loaded. Key is the property type and value is the editor module path. Example: <code>propertyEditors: {\"string\": \"sap/ui/integration/designtime/controls/propertyEditors/StringEditor\"}</code> defines the module responsible for all properties with the type <code>string</code> config.i18n {string|array} Module path or array of paths for i18n property files. i18n binding, for example, <code>{i18n>key}</code> is available in the <code>/properties<code> section, e.g. for <code>label</code>","methods":["getConfig","setConfig"]},{"name":"designtimeMetadata","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"Designtime-specific metadata to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getDesigntimeMetadata()</code> or <code>.attachDesigntimeMetadataChange()</code> should be used instead to get the changed object.","methods":["getDesigntimeMetadata","setDesigntimeMetadata"]},{"name":"layout","type":"string","defaultValue":"list","group":"Misc","visibility":"public","description":"Layout name. Standard layout types: list | form","methods":["getLayout","setLayout"]}],"aggregations":[{"name":"content","singularName":"content","type":"sap.ui.core.Control","cardinality":"0..n","visibility":"public","methods":["getContent","destroyContent","insertContent","addContent","removeContent","indexOfContent","removeAllContent"]}],"defaultAggregation":"content","events":[{"name":"jsonChange","visibility":"public","description":"Fired when any property has been changed by the <code>propertyEditor</code>.","parameters":{"json":{"name":"json","type":"object"}},"methods":["attachJsonChange","detachJsonChange","fireJsonChange"]},{"name":"designtimeMetadataChange","visibility":"public","description":"Fired when designtime metadata has been changed by a <code>propertyEditor</code>.","parameters":{"designtimeMetadata":{"name":"designtimeMetadata","type":"object"}},"methods":["attachDesigntimeMetadataChange","detachDesigntimeMetadataChange","fireDesigntimeMetadataChange"]},{"name":"configChange","visibility":"public","description":"Fired when config has been changed.","parameters":{"config":{"name":"config","type":"object"}},"methods":["attachConfigChange","detachConfigChange","fireConfigChange"]},{"name":"propertyEditorsReady","visibility":"public","description":"Fired when all property editors for the given JSON and configuration are created. TODO: remove this public event.","parameters":{"propertyEditors":{"name":"propertyEditors","type":"array"}},"methods":["attachPropertyEditorsReady","detachPropertyEditorsReady","firePropertyEditorsReady"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"configChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"config":{"name":"config","type":"object","optional":false}}}}}],"description":"Fired when config has been changed."},{"name":"designtimeMetadataChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"designtimeMetadata":{"name":"designtimeMetadata","type":"object","optional":false}}}}}],"description":"Fired when designtime metadata has been changed by a <code>propertyEditor</code>."},{"name":"jsonChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"json":{"name":"json","type":"object","optional":false}}}}}],"description":"Fired when any property has been changed by the <code>propertyEditor</code>."},{"name":"propertyEditorsReady","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"propertyEditors":{"name":"propertyEditors","type":"array","optional":false}}}}}],"description":"Fired when all property editors for the given JSON and configuration are created. TODO: remove this public event."}],"methods":[{"name":"addContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oContent","type":"sap.ui.core.Control","optional":false,"description":"The content to add; if empty, nothing is inserted"}],"description":"Adds some content to the aggregation {@link #getContent content}."},{"name":"attachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself.\n\nFired when config has been changed."},{"name":"attachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself.\n\nFired when designtime metadata has been changed by a <code>propertyEditor</code>."},{"name":"attachJsonChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:jsonChange jsonChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself.\n\nFired when any property has been changed by the <code>propertyEditor</code>."},{"name":"attachPropertyEditorsReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:propertyEditorsReady propertyEditorsReady} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code> itself.\n\nFired when all property editors for the given JSON and configuration are created. TODO: remove this public event."},{"name":"destroyContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"description":"Destroys all the content in the aggregation {@link #getContent content}."},{"name":"detachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachJsonChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:jsonChange jsonChange} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachPropertyEditorsReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:propertyEditorsReady propertyEditorsReady} event of this <code>sap.ui.integration.designtime.baseEditor.BaseEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.BaseEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"fireConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"config":{"name":"config","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:configChange configChange} to attached listeners."},{"name":"fireDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"designtimeMetadata":{"name":"designtimeMetadata","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:designtimeMetadataChange designtimeMetadataChange} to attached listeners."},{"name":"fireJsonChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"json":{"name":"json","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:jsonChange jsonChange} to attached listeners."},{"name":"firePropertyEditorsReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"propertyEditors":{"name":"propertyEditors","type":"array","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:propertyEditorsReady propertyEditorsReady} to attached listeners."},{"name":"getConfig","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>config</code>"},"description":"Gets current value of property {@link #getConfig config}.\n\nConfiguration Map config.context {string} Path in the JSON that will be edited e.g. <code>\"path/subpath\"</code> for <code>json.path.subpath</code> config.properties {Object<string,object>} Defines which fields in the context are editable config.properties.<key>.label {string} of the property to show on the UI config.properties.<key>.type {string} of the property (property editor for this type will be shown) config.properties.<key>.path {string} that will be changed, relative to the context. Example: If the context is <code>root</code> and the path is <code>header/name</code>, the <code>json.root.header.name</code> field is to be changed config.properties.<key>.value {string|boolean} (Optional) value of the property. A binding relative to the context (model name) should be used. Example: <code>{context>header/name}</code> will create a binding <code>json.root.header.name</code> config.properties.<key>.tags {array} Strings to categorize the property config.properties.<key>.visible {string|boolean} Should be used as a binding relative to the context to define the conditions under which this property should be changeable, e.g. <code>{= ${context>anotherProperty} === 'someValue'}</code> config.properties.<key>.<other configurations> {any} It is possible to define additional configurations in this namespace. These configurations will be passed to the dedicated property editor. Binding strings relative to context model are supported as well, e.g. <code>{= ${context>someProperty} + ${context>anotherProperty}}</code> config.propertyEditors {Object<string,string>} Defines which property editors should be loaded. Key is the property type and value is the editor module path. Example: <code>propertyEditors: {\"string\": \"sap/ui/integration/designtime/controls/propertyEditors/StringEditor\"}</code> defines the module responsible for all properties with the type <code>string</code> config.i18n {string|array} Module path or array of paths for i18n property files. i18n binding, for example, <code>{i18n>key}</code> is available in the <code>/properties<code> section, e.g. for <code>label</code>\n\nDefault value is <code>...see text or source</code>."},{"name":"getContent","visibility":"restricted","returnValue":{"type":"sap.ui.core.Control[]"},"description":"Gets content of aggregation {@link #getContent content}."},{"name":"getDesigntimeMetadata","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>designtimeMetadata</code>"},"description":"Gets current value of property {@link #getDesigntimeMetadata designtimeMetadata}.\n\nDesigntime-specific metadata to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getDesigntimeMetadata()</code> or <code>.attachDesigntimeMetadataChange()</code> should be used instead to get the changed object."},{"name":"getJson","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>json</code>"},"description":"Gets current value of property {@link #getJson json}.\n\nJSON to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getJson()</code> or <code>.attachJsonChange()</code> should be used instead to get the changed object."},{"name":"getLayout","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>layout</code>"},"description":"Gets current value of property {@link #getLayout layout}.\n\nLayout name. Standard layout types: list | form\n\nDefault value is <code>\"list\"</code>."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.BaseEditor."},{"name":"indexOfContent","visibility":"restricted","returnValue":{"type":"int","description":"The index of the provided control in the aggregation if found, or -1 otherwise"},"parameters":[{"name":"oContent","type":"sap.ui.core.Control","optional":false,"description":"The content whose index is looked for"}],"description":"Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."},{"name":"insertContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oContent","type":"sap.ui.core.Control","optional":false,"description":"The content to insert; if empty, nothing is inserted"},{"name":"iIndex","type":"int","optional":false,"description":"The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}],"description":"Inserts a content into the aggregation {@link #getContent content}."},{"name":"removeAllContent","visibility":"restricted","returnValue":{"type":"sap.ui.core.Control[]","description":"An array of the removed elements (might be empty)"},"description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."},{"name":"removeContent","visibility":"restricted","returnValue":{"type":"sap.ui.core.Control","description":"The removed content or <code>null</code>"},"parameters":[{"name":"vContent","type":"int|string|sap.ui.core.Control","optional":false,"description":"The content to remove or its index or id"}],"description":"Removes a content from the aggregation {@link #getContent content}."},{"name":"setConfig","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oConfig","type":"object","optional":true,"defaultValue":"...see text or source","description":"New value for property <code>config</code>"}],"description":"Sets a new value for property {@link #getConfig config}.\n\nConfiguration Map config.context {string} Path in the JSON that will be edited e.g. <code>\"path/subpath\"</code> for <code>json.path.subpath</code> config.properties {Object<string,object>} Defines which fields in the context are editable config.properties.<key>.label {string} of the property to show on the UI config.properties.<key>.type {string} of the property (property editor for this type will be shown) config.properties.<key>.path {string} that will be changed, relative to the context. Example: If the context is <code>root</code> and the path is <code>header/name</code>, the <code>json.root.header.name</code> field is to be changed config.properties.<key>.value {string|boolean} (Optional) value of the property. A binding relative to the context (model name) should be used. Example: <code>{context>header/name}</code> will create a binding <code>json.root.header.name</code> config.properties.<key>.tags {array} Strings to categorize the property config.properties.<key>.visible {string|boolean} Should be used as a binding relative to the context to define the conditions under which this property should be changeable, e.g. <code>{= ${context>anotherProperty} === 'someValue'}</code> config.properties.<key>.<other configurations> {any} It is possible to define additional configurations in this namespace. These configurations will be passed to the dedicated property editor. Binding strings relative to context model are supported as well, e.g. <code>{= ${context>someProperty} + ${context>anotherProperty}}</code> config.propertyEditors {Object<string,string>} Defines which property editors should be loaded. Key is the property type and value is the editor module path. Example: <code>propertyEditors: {\"string\": \"sap/ui/integration/designtime/controls/propertyEditors/StringEditor\"}</code> defines the module responsible for all properties with the type <code>string</code> config.i18n {string|array} Module path or array of paths for i18n property files. i18n binding, for example, <code>{i18n>key}</code> is available in the <code>/properties<code> section, e.g. for <code>label</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source</code>."},{"name":"setDesigntimeMetadata","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oDesigntimeMetadata","type":"object","optional":false,"description":"New value for property <code>designtimeMetadata</code>"}],"description":"Sets a new value for property {@link #getDesigntimeMetadata designtimeMetadata}.\n\nDesigntime-specific metadata to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getDesigntimeMetadata()</code> or <code>.attachDesigntimeMetadataChange()</code> should be used instead to get the changed object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setJson","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oJson","type":"object","optional":false,"description":"New value for property <code>json</code>"}],"description":"Sets a new value for property {@link #getJson json}.\n\nJSON to be changed in the editor. Note: If an object is passed as a parameter, it won't be mutated. <code>.getJson()</code> or <code>.attachJsonChange()</code> should be used instead to get the changed object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setLayout","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sLayout","type":"string","optional":true,"defaultValue":"\"list\"","description":"New value for property <code>layout</code>"}],"description":"Sets a new value for property {@link #getLayout layout}.\n\nLayout name. Standard layout types: list | form\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>\"list\"</code>."}]},{"kind":"typedef","name":"sap.ui.integration.designtime.baseEditor.layout.Form.Group","basename":"Group","resource":"sap/ui/integration/designtime/baseEditor/layout/Form.js","module":"sap/ui/integration/designtime/baseEditor/layout/Form","static":true,"visibility":"restricted","since":"1.77","description":"Group definition. Defines list of fields (property editors) which should be included in the group.","properties":[{"name":"label","type":"string","optional":false,"visibility":"restricted","description":"Label of the group. Can be i18n binding string."},{"name":"items","type":"sap.ui.integration.designtime.baseEditor.layout.Form.GroupItem[]","optional":false,"visibility":"restricted","description":"List of configuration items"}]},{"kind":"typedef","name":"sap.ui.integration.designtime.baseEditor.layout.Form.GroupItem","basename":"GroupItem","resource":"sap/ui/integration/designtime/baseEditor/layout/Form.js","module":"sap/ui/integration/designtime/baseEditor/layout/Form","static":true,"visibility":"restricted","since":"1.77","description":"Group Item definition.","properties":[{"name":"type","type":"'tag'|'propertyName'","optional":false,"visibility":"restricted","description":"Item type; can be tag or propertyName"},{"name":"value","type":"string|string[]","optional":false,"visibility":"restricted","description":"Value of the item"}]},{"kind":"typedef","name":"sap.ui.integration.designtime.baseEditor.layout.Form.PropertyEditorConfig","basename":"PropertyEditorConfig","resource":"sap/ui/integration/designtime/baseEditor/layout/Form.js","module":"sap/ui/integration/designtime/baseEditor/layout/Form","static":true,"visibility":"restricted","since":"1.77","description":"Object declaration for property editor configuration.","properties":[{"name":"tags","type":"string[]","optional":false,"visibility":"restricted","description":"List of tags"},{"name":"path","type":"string","optional":false,"visibility":"restricted","description":"Path where to get value from"},{"name":"__propertyName","type":"string","optional":true,"visibility":"restricted","description":"Configuration name of the property"},{"name":"value","type":"any","optional":true,"visibility":"restricted","description":"Current value of the property editor if any"}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.PropertyEditor","basename":"PropertyEditor","resource":"sap/ui/integration/designtime/baseEditor/PropertyEditor.js","module":"sap/ui/integration/designtime/baseEditor/PropertyEditor","export":"","static":true,"visibility":"restricted","since":"1.73.0","extends":"sap.ui.core.Control","implements":["sap.ui.core.IFormContent"],"description":"Renders one of the {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on a specified <code>propertyName</code> or custom <code>config</code>.","experimental":{"since":"1.73.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"propertyName","type":"string","defaultValue":null,"group":"Misc","visibility":"public","description":"Property name for which the configuration should be retrieved. The configuration for a specified name will be taken from the {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor} directly.","methods":["getPropertyName","setPropertyName"]},{"name":"renderLabel","type":"boolean","defaultValue":null,"group":"Misc","visibility":"public","description":"Indicates whether the embedded <code>BasePropertyEditor</code> should render its label.","methods":["getRenderLabel","setRenderLabel"]},{"name":"value","type":"any","defaultValue":null,"group":"Misc","visibility":"public","description":"Nested editor value","methods":["getValue","setValue"]},{"name":"config","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"Custom configuration object. If set, it has priority over <code>propertyName</code>. Example: <pre>\n{\n    \"label\": \"My property\",\n    \"type\": \"string\",\n    \"path\": \"header/status/text\"\n}\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editor types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>","methods":["getConfig","setConfig"]}],"aggregations":[{"name":"propertyEditor","singularName":"propertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","cardinality":"0..1","visibility":"hidden","methods":["getPropertyEditor","destroyPropertyEditor","setPropertyEditor"]}],"associations":[{"name":"editor","singularName":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","cardinality":"0..1","visibility":"public","methods":["getEditor","setEditor"]}],"events":[{"name":"editorChange","visibility":"public","description":"Fires when the new editor changes.","parameters":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor"},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor"}},"methods":["attachEditorChange","detachEditorChange","fireEditorChange"]},{"name":"propertyEditorChange","visibility":"public","description":"Fires when the internal property editor changes, e.g. called after the initial initialization or after changing the <code>propertyName</code> or <code>config</code> properties.","parameters":{"previousPropertyEditor":{"name":"previousPropertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor"},"propertyEditor":{"name":"propertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor"}},"methods":["attachPropertyEditorChange","detachPropertyEditorChange","firePropertyEditorChange"]},{"name":"configChange","visibility":"public","description":"Fires when <code>config</code> changes.","parameters":{"previousConfig":{"name":"previousConfig","type":"object"},"config":{"name":"config","type":"object"}},"methods":["attachConfigChange","detachConfigChange","fireConfigChange"]},{"name":"propertyNameChange","visibility":"public","description":"Fires when <code>propertyName</code> changes.","parameters":{"previousPropertyName":{"name":"previousPropertyName","type":"string"},"propertyName":{"name":"propertyName","type":"string"}},"methods":["attachPropertyNameChange","detachPropertyNameChange","firePropertyNameChange"]},{"name":"ready","visibility":"public","description":"Fires when nested property editor is ready.","methods":["attachReady","detachReady","fireReady"]},{"name":"beforeValueChange","visibility":"public","description":"Fires before the value of the nested property editor changes","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"nextValue":{"name":"nextValue","type":"any"}},"methods":["attachBeforeValueChange","detachBeforeValueChange","fireBeforeValueChange"]},{"name":"valueChange","visibility":"public","description":"Fires when the value of the nested property editor changes","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"previousValue":{"name":"previousValue","type":"any"}},"methods":["attachValueChange","detachValueChange","fireValueChange"]},{"name":"designtimeMetadataChange","visibility":"public","description":"Fires when the designtime metadata of the nested property editor changes","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"previousValue":{"name":"previousValue","type":"any"}},"methods":["attachDesigntimeMetadataChange","detachDesigntimeMetadataChange","fireDesigntimeMetadataChange"]},{"name":"init","visibility":"public","description":"Fires when the wrapper is initialized.","methods":["attachInit","detachInit","fireInit"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"beforeValueChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"nextValue":{"name":"nextValue","type":"any","optional":false}}}}}],"description":"Fires before the value of the nested property editor changes"},{"name":"configChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"object","optional":false},"config":{"name":"config","type":"object","optional":false}}}}}],"description":"Fires when <code>config</code> changes."},{"name":"designtimeMetadataChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"previousValue":{"name":"previousValue","type":"any","optional":false}}}}}],"description":"Fires when the designtime metadata of the nested property editor changes"},{"name":"editorChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false}}}}}],"description":"Fires when the new editor changes."},{"name":"init","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fires when the wrapper is initialized."},{"name":"propertyEditorChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousPropertyEditor":{"name":"previousPropertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","optional":false},"propertyEditor":{"name":"propertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","optional":false}}}}}],"description":"Fires when the internal property editor changes, e.g. called after the initial initialization or after changing the <code>propertyName</code> or <code>config</code> properties."},{"name":"propertyNameChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousPropertyName":{"name":"previousPropertyName","type":"string","optional":false},"propertyName":{"name":"propertyName","type":"string","optional":false}}}}}],"description":"Fires when <code>propertyName</code> changes."},{"name":"ready","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fires when nested property editor is ready."},{"name":"valueChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"previousValue":{"name":"previousValue","type":"any","optional":false}}}}}],"description":"Fires when the value of the nested property editor changes"}],"methods":[{"name":"attachBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:beforeValueChange beforeValueChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires before the value of the nested property editor changes"},{"name":"attachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when <code>config</code> changes."},{"name":"attachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when the designtime metadata of the nested property editor changes"},{"name":"attachEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:editorChange editorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when the new editor changes."},{"name":"attachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when the wrapper is initialized."},{"name":"attachPropertyEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:propertyEditorChange propertyEditorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when the internal property editor changes, e.g. called after the initial initialization or after changing the <code>propertyName</code> or <code>config</code> properties."},{"name":"attachPropertyNameChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:propertyNameChange propertyNameChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when <code>propertyName</code> changes."},{"name":"attachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when nested property editor is ready."},{"name":"attachValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:valueChange valueChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code> itself.\n\nFires when the value of the nested property editor changes"},{"name":"detachBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:beforeValueChange beforeValueChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:editorChange editorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachPropertyEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:propertyEditorChange propertyEditorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachPropertyNameChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:propertyNameChange propertyNameChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:valueChange valueChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.PropertyEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"fireBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"nextValue":{"name":"nextValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:beforeValueChange beforeValueChange} to attached listeners."},{"name":"fireConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"object","optional":true},"config":{"name":"config","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:configChange configChange} to attached listeners."},{"name":"fireDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"previousValue":{"name":"previousValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:designtimeMetadataChange designtimeMetadataChange} to attached listeners."},{"name":"fireEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":true},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:editorChange editorChange} to attached listeners."},{"name":"fireInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:init init} to attached listeners."},{"name":"firePropertyEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousPropertyEditor":{"name":"previousPropertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","optional":true},"propertyEditor":{"name":"propertyEditor","type":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:propertyEditorChange propertyEditorChange} to attached listeners."},{"name":"firePropertyNameChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousPropertyName":{"name":"previousPropertyName","type":"string","optional":true},"propertyName":{"name":"propertyName","type":"string","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:propertyNameChange propertyNameChange} to attached listeners."},{"name":"fireReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:ready ready} to attached listeners."},{"name":"fireValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"previousValue":{"name":"previousValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:valueChange valueChange} to attached listeners."},{"name":"getConfig","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>config</code>"},"description":"Gets current value of property {@link #getConfig config}.\n\nCustom configuration object. If set, it has priority over <code>propertyName</code>. Example: <pre>\n{\n    \"label\": \"My property\",\n    \"type\": \"string\",\n    \"path\": \"header/status/text\"\n}\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editor types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>"},{"name":"getEditor","visibility":"restricted","returnValue":{"type":"sap.ui.core.ID"},"description":"ID of the element which is the current target of the association {@link #getEditor editor}, or <code>null</code>."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.PropertyEditor."},{"name":"getPropertyName","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>propertyName</code>"},"description":"Gets current value of property {@link #getPropertyName propertyName}.\n\nProperty name for which the configuration should be retrieved. The configuration for a specified name will be taken from the {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor} directly."},{"name":"getRenderLabel","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>renderLabel</code>"},"description":"Gets current value of property {@link #getRenderLabel renderLabel}.\n\nIndicates whether the embedded <code>BasePropertyEditor</code> should render its label."},{"name":"getValue","visibility":"restricted","returnValue":{"type":"any","description":"Value of property <code>value</code>"},"description":"Gets current value of property {@link #getValue value}.\n\nNested editor value"},{"name":"setConfig","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oConfig","type":"object","optional":false,"description":"New value for property <code>config</code>"}],"description":"Sets a new value for property {@link #getConfig config}.\n\nCustom configuration object. If set, it has priority over <code>propertyName</code>. Example: <pre>\n{\n    \"label\": \"My property\",\n    \"type\": \"string\",\n    \"path\": \"header/status/text\"\n}\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editor types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setEditor","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oEditor","type":"sap.ui.core.ID|sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false,"description":"ID of an element which becomes the new target of this editor association; alternatively, an element instance may be given"}],"description":"Sets the associated {@link #getEditor editor}."},{"name":"setPropertyName","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sPropertyName","type":"string","optional":false,"description":"New value for property <code>propertyName</code>"}],"description":"Sets a new value for property {@link #getPropertyName propertyName}.\n\nProperty name for which the configuration should be retrieved. The configuration for a specified name will be taken from the {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor} directly.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setRenderLabel","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bRenderLabel","type":"boolean","optional":false,"description":"New value for property <code>renderLabel</code>"}],"description":"Sets a new value for property {@link #getRenderLabel renderLabel}.\n\nIndicates whether the embedded <code>BasePropertyEditor</code> should render its label.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oValue","type":"any","optional":false,"description":"New value for property <code>value</code>"}],"description":"Sets a new value for property {@link #getValue value}.\n\nNested editor value\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor","basename":"ArrayEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/arrayEditor/ArrayEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/arrayEditor/ArrayEditor","export":"","static":true,"visibility":"restricted","since":"1.72","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>ArrayEditor</code>.\n\nThis property editor allows you to edit arrays in a flat way. To get notified about changes made with the editor, you can use the <code>valueChange</code> event.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowAddAndRemove</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow adding and removing array items</td> </tr> <tr> <td><code>allowSorting</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow changing the order of array items</td> </tr> <tr> <td><code>collapsibleItems</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to render collapsible groups for array items or the plain array editor style</td> </tr> <tr> <td><code>showItemLabel</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to show the item label in the plain array editor</td> </tr> <tr> <td><code>template</code></td> <td><code>object</code></td> <td><code>{}</code></td> <td>Editor configurations for the nested editors of each item</td> </tr> </table>","experimental":{"text":"1.72"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"value","type":"any","defaultValue":null,"group":"Misc","visibility":"public","methods":["getValue","setValue"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.arrayEditor.ArrayEditor."},{"name":"getValue","visibility":"restricted","returnValue":{"type":"any","description":"Value of property <code>value</code>"},"description":"Gets current value of property {@link #getValue value}."},{"name":"setValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oValue","type":"any","optional":false,"description":"New value for property <code>value</code>"}],"description":"Sets a new value for property {@link #getValue value}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","basename":"BasePropertyEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/BasePropertyEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/BasePropertyEditor","export":"","static":true,"visibility":"restricted","since":"1.70","extends":"sap.ui.core.Control","implements":["sap.ui.core.IFormContent"],"description":"Base class for property editor implementations.","experimental":{"text":"1.70"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"renderLabel","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getRenderLabel","setRenderLabel"]},{"name":"value","type":"any","defaultValue":null,"group":"Misc","visibility":"public","methods":["getValue","setValue"]},{"name":"config","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getConfig","setConfig"]}],"aggregations":[{"name":"_label","singularName":"_label","type":"sap.m.Label","cardinality":"0..1","visibility":"hidden","methods":["get_label","destroy_label","set_label"]},{"name":"content","singularName":"content","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"public","methods":["getContent","destroyContent","setContent"]}],"events":[{"name":"beforeValueChange","visibility":"public","description":"Fires before value is changed","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"nextValue":{"name":"nextValue","type":"any"}},"methods":["attachBeforeValueChange","detachBeforeValueChange","fireBeforeValueChange"]},{"name":"valueChange","visibility":"public","description":"Fires when value is changed","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"previousValue":{"name":"previousValue","type":"any"}},"methods":["attachValueChange","detachValueChange","fireValueChange"]},{"name":"designtimeMetadataChange","visibility":"public","description":"Fires when designtime metadata is changed","parameters":{"path":{"name":"path","type":"string"},"value":{"name":"value","type":"any"},"previousValue":{"name":"previousValue","type":"any"}},"methods":["attachDesigntimeMetadataChange","detachDesigntimeMetadataChange","fireDesigntimeMetadataChange"]},{"name":"configChange","visibility":"public","description":"Fires when config is changed","parameters":{"previousConfig":{"name":"previousConfig","type":"object"},"config":{"name":"config","type":"object"}},"methods":["attachConfigChange","detachConfigChange","fireConfigChange"]},{"name":"fragmentChange","visibility":"public","description":"Fires when fragment is changed","parameters":{"previousFragment":{"name":"previousFragment","type":"string"},"fragment":{"name":"fragment","type":"string"}},"methods":["attachFragmentChange","detachFragmentChange","fireFragmentChange"]},{"name":"ready","visibility":"public","description":"Fired when the editor fragment was loaded and the <code>asyncInit</code> method was executed","methods":["attachReady","detachReady","fireReady"]},{"name":"init","visibility":"public","description":"Fires when init is finished","methods":["attachInit","detachInit","fireInit"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"beforeValueChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"nextValue":{"name":"nextValue","type":"any","optional":false}}}}}],"description":"Fires before value is changed"},{"name":"configChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"object","optional":false},"config":{"name":"config","type":"object","optional":false}}}}}],"description":"Fires when config is changed"},{"name":"designtimeMetadataChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"previousValue":{"name":"previousValue","type":"any","optional":false}}}}}],"description":"Fires when designtime metadata is changed"},{"name":"fragmentChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousFragment":{"name":"previousFragment","type":"string","optional":false},"fragment":{"name":"fragment","type":"string","optional":false}}}}}],"description":"Fires when fragment is changed"},{"name":"init","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fires when init is finished"},{"name":"ready","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fired when the editor fragment was loaded and the <code>asyncInit</code> method was executed"},{"name":"valueChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"path":{"name":"path","type":"string","optional":false},"value":{"name":"value","type":"any","optional":false},"previousValue":{"name":"previousValue","type":"any","optional":false}}}}}],"description":"Fires when value is changed"}],"methods":[{"name":"attachBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:beforeValueChange beforeValueChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires before value is changed"},{"name":"attachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires when config is changed"},{"name":"attachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires when designtime metadata is changed"},{"name":"attachFragmentChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:fragmentChange fragmentChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires when fragment is changed"},{"name":"attachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires when init is finished"},{"name":"attachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFired when the editor fragment was loaded and the <code>asyncInit</code> method was executed"},{"name":"attachValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:valueChange valueChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code> itself.\n\nFires when value is changed"},{"name":"destroyContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"description":"Destroys the content in the aggregation {@link #getContent content}."},{"name":"detachBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:beforeValueChange beforeValueChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:designtimeMetadataChange designtimeMetadataChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachFragmentChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:fragmentChange fragmentChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:valueChange valueChange} event of this <code>sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"fireBeforeValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"nextValue":{"name":"nextValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:beforeValueChange beforeValueChange} to attached listeners."},{"name":"fireConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"object","optional":true},"config":{"name":"config","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:configChange configChange} to attached listeners."},{"name":"fireDesigntimeMetadataChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"previousValue":{"name":"previousValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:designtimeMetadataChange designtimeMetadataChange} to attached listeners."},{"name":"fireFragmentChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousFragment":{"name":"previousFragment","type":"string","optional":true},"fragment":{"name":"fragment","type":"string","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:fragmentChange fragmentChange} to attached listeners."},{"name":"fireInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:init init} to attached listeners."},{"name":"fireReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:ready ready} to attached listeners."},{"name":"fireValueChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"path":{"name":"path","type":"string","optional":true},"value":{"name":"value","type":"any","optional":true},"previousValue":{"name":"previousValue","type":"any","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:valueChange valueChange} to attached listeners."},{"name":"getConfig","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>config</code>"},"description":"Gets current value of property {@link #getConfig config}."},{"name":"getContent","visibility":"restricted","returnValue":{"type":"sap.ui.core.Control"},"description":"Gets content of aggregation {@link #getContent content}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor."},{"name":"getRenderLabel","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>renderLabel</code>"},"description":"Gets current value of property {@link #getRenderLabel renderLabel}.\n\nDefault value is <code>true</code>."},{"name":"getValue","visibility":"restricted","returnValue":{"type":"any","description":"Value of property <code>value</code>"},"description":"Gets current value of property {@link #getValue value}."},{"name":"setConfig","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oConfig","type":"object","optional":false,"description":"New value for property <code>config</code>"}],"description":"Sets a new value for property {@link #getConfig config}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oContent","type":"sap.ui.core.Control","optional":false,"description":"The content to set"}],"description":"Sets the aggregated {@link #getContent content}."},{"name":"setRenderLabel","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bRenderLabel","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>renderLabel</code>"}],"description":"Sets a new value for property {@link #getRenderLabel renderLabel}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setValue","visibility":"public","parameters":[{"name":"vValue","type":"any","optional":false,"description":"Editor value that was already processed by a custom setValue implementation"},{"name":"bSuppressValidation","type":"boolean","optional":false,"description":"Whether to set the value regardless of the validation result, false by default"}],"description":"Sets the editor value. If no value is provided, the default value provided in the config will be used instead. This method triggers the ready check, therefore it should also be called when overridden in complex editors."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor","basename":"BooleanEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/booleanEditor/BooleanEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/booleanEditor/BooleanEditor","export":"","static":true,"visibility":"restricted","since":"1.72","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>BooleanEditor</code>. This allows you to set boolean values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as a boolean or binding string to the provided callback function when the state changes.","experimental":{"text":"1.72"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.booleanEditor.BooleanEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor","basename":"DateEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateEditor/DateEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateEditor/DateEditor","export":"","static":true,"visibility":"restricted","since":"1.76","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>DateEditor</code>. This allows to set date values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.DatePicker}.","experimental":{"text":"1.76"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor","basename":"DateTimeEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateTimeEditor/DateTimeEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/dateTimeEditor/DateTimeEditor","export":"","static":true,"visibility":"restricted","since":"1.76","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor","description":"Constructor for a new <code>DateTimeEditor</code>. This allows to set datetime values for a specified property of a JSON object. The editor is rendered as a {@link sap.m.DateTimePicker}.","experimental":{"text":"1.76"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.dateEditor.DateEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.dateTimeEditor.DateTimeEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor","basename":"EnumStringEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/enumStringEditor/EnumStringEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/enumStringEditor/EnumStringEditor","export":"","static":true,"visibility":"restricted","since":"1.70","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>EnumStringEditor</code>. This allows to select from predefined string values or to provide binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowCustomValues</code></td> <td><code>boolean</code></td> <td><code>false</code></td> <td>Whether custom values can be set instead of selecting items</td> </tr> <tr> <td><code>allowBindings</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether binding strings can be set instead of selecting items</td> </tr> </table>","experimental":{"text":"1.70"},"deprecated":{"since":"1.81","text":"Use the {@link sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor} instead"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.enumStringEditor.EnumStringEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor","basename":"GroupEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/groupEditor/GroupEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/groupEditor/GroupEditor","export":"","static":true,"visibility":"restricted","since":"1.85","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>GroupEditor</code>. This allows to set a group title or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Title}.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowBindings</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether binding strings can be set instead of selecting items</td> </tr> <tr> <td><code>maxLength</code></td> <td><code>number</code></td> <td></td> <td>Maximum number of characters</td> </tr> </table>","experimental":{"text":"1.85"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.groupEditor.GroupEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor","basename":"IconEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/iconEditor/IconEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/iconEditor/IconEditor","export":"","static":true,"visibility":"restricted","since":"1.70","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a <code>IconEditor</code>. This allows to set icon URIs or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input} with a {@link sap.m.SelectDialog} value help. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as a string containing an icon URI or as a binding string to the provided callback function when the user edits the input or selects an item in the dialog.","experimental":{"text":"1.70"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IconEditor."}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.iconEditor.IsInIconPool","basename":"IsInIconPool","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/iconEditor/IsInIconPool.validator.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/iconEditor/IsInIconPool.validator","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value belongs to the icon pool.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"vValue","type":"boolean|string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor","basename":"IntegerEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/integerEditor/IntegerEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/integerEditor/IntegerEditor","export":"","static":true,"visibility":"restricted","since":"1.76","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor","description":"Constructor for a new <code>IntegerEditor</code>. This allows you to set integer values or binding paths for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}, which prevents non-integer user input unless it is a valid binding path.","experimental":{"text":"1.76"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.integerEditor.IntegerEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor","basename":"JsonEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/jsonEditor/JsonEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/jsonEditor/JsonEditor","export":"","static":true,"visibility":"restricted","since":"1.72","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>JsonEditor</code>. This allows to set json text values for a specified property of a JSON object. The editor is rendered as a {@link sap.ui.CodeEditor} inside a {@link sap.m.Dialog}. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as an object to the provided callback function when the user saves changes in the dialog.","experimental":{"text":"1.72"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.jsonEditor.JsonEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor","basename":"ListEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/listEditor/ListEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/listEditor/ListEditor","export":"","static":true,"visibility":"restricted","since":"1.76","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>ListEditor</code>. This editor allows to add items to and remove items from string arrays. The editor is rendered as a {@link sap.m.MultiInput}.","experimental":{"text":"1.76"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.listEditor.ListEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor","basename":"MapEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/mapEditor/MapEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/mapEditor/MapEditor","export":"","static":true,"visibility":"restricted","since":"1.74","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>MapEditor</code> for editing key-value pairs with primitive values. To get notified about changes made with the editor, you can attach a handler to the <code>valueChange</code> event.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowKeyChange</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow editing the key attribute of map entries</td> </tr> <tr> <td><code>allowTypeChange</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow editing the type of map entries</td> </tr> <tr> <td><code>allowAddAndRemove</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow adding and removing map entries</td> </tr> <tr> <td><code>allowedTypes</code></td> <td><code>string[]</code></td> <td><code>[\"string\"]</code></td> <td>List of editor types which are supported in the map</td> </tr> <tr> <td><code>includeInvalidEntries</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to show entries with invalid types if the <code>StringEditor</code> cannot be used as a fallback</td> </tr> <tr> <td><code>allowSorting</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow changing the order of items.</td> </tr> </table>","experimental":{"text":"1.74"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor","basename":"NumberEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/numberEditor/NumberEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/numberEditor/NumberEditor","export":"","static":true,"visibility":"restricted","since":"1.72","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>NumberEditor</code>. This allows you to set numeric values or binding paths for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}, which prevents non-numeric user input unless it is a valid binding path. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property value as a number or binding string to the provided callback function when the state changes.","experimental":{"text":"1.72"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.numberEditor.NumberEditor."}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.PropertyEditorFactory","basename":"PropertyEditorFactory","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/PropertyEditorFactory.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/PropertyEditorFactory","export":"","static":true,"visibility":"restricted","since":"1.75","description":"Factory for the creation of <code>BasePropertyEditor</code> instances.","experimental":{"since":"1.75"},"methods":[{"name":"create","visibility":"public","static":true,"returnValue":{"type":"Promise<sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor>","description":"Promise resolving to the created editor"},"parameters":[{"name":"sPropertyType","type":"string","optional":false,"description":"Type of the property editor to create"}],"description":"Creates a new <code>BasePropertyEditor</code> instance of the given editor type."},{"name":"deregisterAllTypes","visibility":"public","static":true,"description":"Deregisters all editor types and removes the loaded classes."},{"name":"deregisterType","visibility":"public","static":true,"parameters":[{"name":"sType","type":"string","optional":false,"description":"Editor type to deregister"}],"description":"Deregisters a type and removes the loaded property editor class."},{"name":"registerTypes","visibility":"public","static":true,"returnValue":{"type":"Promise<object>","description":"Resolves with a map with name and object of the registered PropertyEditors"},"parameters":[{"name":"mTypes","type":"Object<string,string>","optional":false,"description":"Map containing pairs of editor type and the path to load the class from"}],"description":"Registers classes for the given editor types. If an editor type is already registered, it will be skipped and must first be deregistered using the <code>PropertyEditorFactory.deregisterType</code> function."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor","basename":"SelectEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/selectEditor/SelectEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/selectEditor/SelectEditor","export":"","static":true,"visibility":"restricted","since":"1.81","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>SelectEditor</code>. This allows to select from predefined string values or to provide binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.ComboBox}. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as a string representing a valid option value or as a binding string to the provided callback function when the user selects a value or edits the input.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowCustomValues</code></td> <td><code>boolean</code></td> <td><code>false</code></td> <td>Whether custom values can be set instead of selecting items</td> </tr> <tr> <td><code>allowBindings</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether binding strings can be set instead of selecting items</td> </tr> </table>","experimental":{"text":"1.81"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.selectEditor.SelectEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor","basename":"StringEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/stringEditor/StringEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/stringEditor/StringEditor","export":"","static":true,"visibility":"restricted","since":"1.70","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>StringEditor</code>. This allows to set string values or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.Input}. To get notified about changes made with the editor, you can use the <code>attachValueChange</code> method, which passes the current property state as a string or binding string to the provided callback function when the user edits the input.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>enabled</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether the underlying control should be enabled</td> </tr> <tr> <td><code>allowBindings</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether binding strings can be set instead of selecting items</td> </tr> <tr> <td><code>placeholder</code></td> <td><code>string</code></td> <td></td> <td>Placeholder for the input field</td> </tr> <tr> <td><code>maxLength</code></td> <td><code>number</code></td> <td></td> <td>Maximum number of characters</td> </tr> </table>","experimental":{"text":"1.70"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.stringEditor.StringEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor","basename":"TextAreaEditor","resource":"sap/ui/integration/designtime/baseEditor/propertyEditor/textAreaEditor/TextAreaEditor.js","module":"sap/ui/integration/designtime/baseEditor/propertyEditor/textAreaEditor/TextAreaEditor","export":"","static":true,"visibility":"restricted","since":"1.85","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>TextAreaEditor</code>. This allows to set a code editor or binding strings for a specified property of a JSON object. The editor is rendered as a {@link sap.m.TextArea}.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>type</code></td> <td><code>string</code></td> <td><code>json</code></td> <td>The type of the code in the editor used for syntax highlighting</td> </tr> <tr> <td><code>allowBindings</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether binding strings can be set instead of selecting items</td> </tr> <tr> <td><code>maxLength</code></td> <td><code>number</code></td> <td></td> <td>Maximum number of characters</td> </tr> </table>","experimental":{"text":"1.85"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.propertyEditor.textAreaEditor.TextAreaEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.baseEditor.PropertyEditors","basename":"PropertyEditors","resource":"sap/ui/integration/designtime/baseEditor/PropertyEditors.js","module":"sap/ui/integration/designtime/baseEditor/PropertyEditors","export":"","static":true,"visibility":"restricted","since":"1.73.0","extends":"sap.ui.core.Control","description":"Renders a group of {@link sap.ui.integration.designtime.baseEditor.propertyEditor property editors} based on specified <code>tags</code> or custom <code>config</code>.","experimental":{"since":"1.73.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"tags","type":"string","defaultValue":null,"group":"Misc","visibility":"public","description":"List of tags to render, e.g. <code>\"header,content\"</code>. Only the properties that contain both tags will be rendered.","methods":["getTags","setTags"]},{"name":"renderLabels","type":"boolean","defaultValue":null,"group":"Misc","visibility":"public","description":"Indicates whether the embedded <code>BasePropertyEditor</code> instances should render their labels.","methods":["getRenderLabels","setRenderLabels"]},{"name":"config","type":"array","defaultValue":null,"group":"Misc","visibility":"public","description":"An array of custom configuration objects. If set, it has priority over <code>tags</code>. Example: <pre>\n[\n    {\n        \"label\": \"My property 1\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property1\"\n    },\n    {\n        \"label\": \"My property 2\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property2\"\n    }\n]\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editors types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>","methods":["getConfig","setConfig"]},{"name":"layout","type":"string","defaultValue":"list","group":"Misc","visibility":"public","methods":["getLayout","setLayout"]},{"name":"layoutConfig","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getLayoutConfig","setLayoutConfig"]}],"aggregations":[{"name":"content","singularName":"content","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"public","methods":["getContent","destroyContent","setContent"]}],"associations":[{"name":"editor","singularName":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","cardinality":"0..1","visibility":"public","methods":["getEditor","setEditor"]},{"name":"propertyEditors","singularName":"propertyEditor","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","cardinality":"0..1","visibility":"hidden","methods":["getPropertyEditors","setPropertyEditors"]}],"events":[{"name":"editorChange","visibility":"public","description":"Fires when the new editor changes.","parameters":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor"},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor"}},"methods":["attachEditorChange","detachEditorChange","fireEditorChange"]},{"name":"propertyEditorsChange","visibility":"public","description":"Fires when the internal <code>propertyEditors</code> aggregation changes, e.g. called after the initial initialization or after changing <code>tag</code> or <code>config</code> properties.","parameters":{"previousPropertyEditors":{"name":"previousPropertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor"},"propertyEditors":{"name":"propertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor"}},"methods":["attachPropertyEditorsChange","detachPropertyEditorsChange","firePropertyEditorsChange"]},{"name":"init","visibility":"public","description":"Fires when the wrapper is initialized.","methods":["attachInit","detachInit","fireInit"]},{"name":"configChange","visibility":"public","description":"Fires when <code>config</code> changes.","parameters":{"previousConfig":{"name":"previousConfig","type":"array"},"config":{"name":"config","type":"array"}},"methods":["attachConfigChange","detachConfigChange","fireConfigChange"]},{"name":"tagsChange","visibility":"public","description":"Fires when <code>tags</code> changes.","parameters":{"previousTags":{"name":"previousTags","type":"string"},"tags":{"name":"tags","type":"string"}},"methods":["attachTagsChange","detachTagsChange","fireTagsChange"]},{"name":"ready","visibility":"public","description":"Fires when the nested editors are ready","methods":["attachReady","detachReady","fireReady"]},{"name":"layoutChange","visibility":"public","description":"Fires when <code>layout</code> changes.","parameters":{"previousLayout":{"name":"previousLayout","type":"string"},"layout":{"name":"layout","type":"string"}},"methods":["attachLayoutChange","detachLayoutChange","fireLayoutChange"]},{"name":"layoutConfigChange","visibility":"public","description":"Fires when <code>layoutConfig</code> changes.","parameters":{"previousLayoutConfig":{"name":"previousLayoutConfig","type":"object"},"layoutConfig":{"name":"layoutConfig","type":"object"}},"methods":["attachLayoutConfigChange","detachLayoutConfigChange","fireLayoutConfigChange"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"configChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"array","optional":false},"config":{"name":"config","type":"array","optional":false}}}}}],"description":"Fires when <code>config</code> changes."},{"name":"editorChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false}}}}}],"description":"Fires when the new editor changes."},{"name":"init","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fires when the wrapper is initialized."},{"name":"layoutChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousLayout":{"name":"previousLayout","type":"string","optional":false},"layout":{"name":"layout","type":"string","optional":false}}}}}],"description":"Fires when <code>layout</code> changes."},{"name":"layoutConfigChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousLayoutConfig":{"name":"previousLayoutConfig","type":"object","optional":false},"layoutConfig":{"name":"layoutConfig","type":"object","optional":false}}}}}],"description":"Fires when <code>layoutConfig</code> changes."},{"name":"propertyEditorsChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousPropertyEditors":{"name":"previousPropertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","optional":false},"propertyEditors":{"name":"propertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","optional":false}}}}}],"description":"Fires when the internal <code>propertyEditors</code> aggregation changes, e.g. called after the initial initialization or after changing <code>tag</code> or <code>config</code> properties."},{"name":"ready","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fires when the nested editors are ready"},{"name":"tagsChange","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"previousTags":{"name":"previousTags","type":"string","optional":false},"tags":{"name":"tags","type":"string","optional":false}}}}}],"description":"Fires when <code>tags</code> changes."}],"methods":[{"name":"attachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when <code>config</code> changes."},{"name":"attachEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:editorChange editorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when the new editor changes."},{"name":"attachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when the wrapper is initialized."},{"name":"attachLayoutChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:layoutChange layoutChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when <code>layout</code> changes."},{"name":"attachLayoutConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:layoutConfigChange layoutConfigChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when <code>layoutConfig</code> changes."},{"name":"attachPropertyEditorsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:propertyEditorsChange propertyEditorsChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when the internal <code>propertyEditors</code> aggregation changes, e.g. called after the initial initialization or after changing <code>tag</code> or <code>config</code> properties."},{"name":"attachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when the nested editors are ready"},{"name":"attachTagsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:tagsChange tagsChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code> itself.\n\nFires when <code>tags</code> changes."},{"name":"destroyContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"description":"Destroys the content in the aggregation {@link #getContent content}."},{"name":"detachConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:configChange configChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:editorChange editorChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:init init} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachLayoutChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:layoutChange layoutChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachLayoutConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:layoutConfigChange layoutConfigChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachPropertyEditorsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:propertyEditorsChange propertyEditorsChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:ready ready} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachTagsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:tagsChange tagsChange} event of this <code>sap.ui.integration.designtime.baseEditor.PropertyEditors</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.baseEditor.PropertyEditors with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"fireConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousConfig":{"name":"previousConfig","type":"array","optional":true},"config":{"name":"config","type":"array","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:configChange configChange} to attached listeners."},{"name":"fireEditorChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousEditor":{"name":"previousEditor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":true},"editor":{"name":"editor","type":"sap.ui.integration.designtime.baseEditor.BaseEditor","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:editorChange editorChange} to attached listeners."},{"name":"fireInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:init init} to attached listeners."},{"name":"fireLayoutChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousLayout":{"name":"previousLayout","type":"string","optional":true},"layout":{"name":"layout","type":"string","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:layoutChange layoutChange} to attached listeners."},{"name":"fireLayoutConfigChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousLayoutConfig":{"name":"previousLayoutConfig","type":"object","optional":true},"layoutConfig":{"name":"layoutConfig","type":"object","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:layoutConfigChange layoutConfigChange} to attached listeners."},{"name":"firePropertyEditorsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousPropertyEditors":{"name":"previousPropertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","optional":true},"propertyEditors":{"name":"propertyEditors","type":"sap.ui.integration.designtime.baseEditor.PropertyEditor","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:propertyEditorsChange propertyEditorsChange} to attached listeners."},{"name":"fireReady","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:ready ready} to attached listeners."},{"name":"fireTagsChange","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"previousTags":{"name":"previousTags","type":"string","optional":true},"tags":{"name":"tags","type":"string","optional":true}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:tagsChange tagsChange} to attached listeners."},{"name":"getConfig","visibility":"restricted","returnValue":{"type":"array","description":"Value of property <code>config</code>"},"description":"Gets current value of property {@link #getConfig config}.\n\nAn array of custom configuration objects. If set, it has priority over <code>tags</code>. Example: <pre>\n[\n    {\n        \"label\": \"My property 1\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property1\"\n    },\n    {\n        \"label\": \"My property 2\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property2\"\n    }\n]\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editors types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>"},{"name":"getContent","visibility":"restricted","returnValue":{"type":"sap.ui.core.Control"},"description":"Gets content of aggregation {@link #getContent content}."},{"name":"getEditor","visibility":"restricted","returnValue":{"type":"sap.ui.core.ID"},"description":"ID of the element which is the current target of the association {@link #getEditor editor}, or <code>null</code>."},{"name":"getLayout","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>layout</code>"},"description":"Gets current value of property {@link #getLayout layout}.\n\nDefault value is <code>\"list\"</code>."},{"name":"getLayoutConfig","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>layoutConfig</code>"},"description":"Gets current value of property {@link #getLayoutConfig layoutConfig}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.baseEditor.PropertyEditors."},{"name":"getRenderLabels","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>renderLabels</code>"},"description":"Gets current value of property {@link #getRenderLabels renderLabels}.\n\nIndicates whether the embedded <code>BasePropertyEditor</code> instances should render their labels."},{"name":"getTags","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>tags</code>"},"description":"Gets current value of property {@link #getTags tags}.\n\nList of tags to render, e.g. <code>\"header,content\"</code>. Only the properties that contain both tags will be rendered."},{"name":"setConfig","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sConfig","type":"array","optional":false,"description":"New value for property <code>config</code>"}],"description":"Sets a new value for property {@link #getConfig config}.\n\nAn array of custom configuration objects. If set, it has priority over <code>tags</code>. Example: <pre>\n[\n    {\n        \"label\": \"My property 1\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property1\"\n    },\n    {\n        \"label\": \"My property 2\",\n        \"type\": \"string\",\n        \"path\": \"path/to/my/property2\"\n    }\n]\n</pre> Where: <ul> <li><b>label</b> = text string for the property editor label</li> <li><b>type</b> = one of the registered property editors types in {@link sap.ui.integration.designtime.baseEditor.BaseEditor BaseEditor configuration} (see <code>propertyEditors</code> section)</li> <li><b>path</b> = a binding path to get data from</li> </ul>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setContent","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oContent","type":"sap.ui.core.Control","optional":false,"description":"The content to set"}],"description":"Sets the aggregated {@link #getContent content}."},{"name":"setEditor","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oEditor","type":"sap.ui.core.ID|sap.ui.integration.designtime.baseEditor.BaseEditor","optional":false,"description":"ID of an element which becomes the new target of this editor association; alternatively, an element instance may be given"}],"description":"Sets the associated {@link #getEditor editor}."},{"name":"setLayout","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sLayout","type":"string","optional":true,"defaultValue":"\"list\"","description":"New value for property <code>layout</code>"}],"description":"Sets a new value for property {@link #getLayout layout}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>\"list\"</code>."},{"name":"setLayoutConfig","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oLayoutConfig","type":"object","optional":false,"description":"New value for property <code>layoutConfig</code>"}],"description":"Sets a new value for property {@link #getLayoutConfig layoutConfig}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setRenderLabels","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bRenderLabels","type":"boolean","optional":false,"description":"New value for property <code>renderLabels</code>"}],"description":"Sets a new value for property {@link #getRenderLabels renderLabels}.\n\nIndicates whether the embedded <code>BasePropertyEditor</code> instances should render their labels.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setTags","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sTags","type":"string","optional":false,"description":"New value for property <code>tags</code>"}],"description":"Sets a new value for property {@link #getTags tags}.\n\nList of tags to render, e.g. <code>\"header,content\"</code>. Only the properties that contain both tags will be rendered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsBoolean","basename":"IsBoolean","resource":"sap/ui/integration/designtime/baseEditor/validator/IsBoolean.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsBoolean","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value is a boolean or binding string.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"vValue","type":"boolean|string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsDate","basename":"IsDate","resource":"sap/ui/integration/designtime/baseEditor/validator/IsDate.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsDate","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value can be parsed to a valid date.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"sDateString","type":"string","optional":false,"description":"Date string to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsInteger","basename":"IsInteger","resource":"sap/ui/integration/designtime/baseEditor/validator/IsInteger.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsInteger","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value is an integer or binding string.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"vValue","type":"number|string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsNumber","basename":"IsNumber","resource":"sap/ui/integration/designtime/baseEditor/validator/IsNumber.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsNumber","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value is a number or binding string.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"vValue","type":"number|string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsSelectedKey","basename":"IsSelectedKey","resource":"sap/ui/integration/designtime/baseEditor/validator/IsSelectedKey.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsSelectedKey","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value is one of the given keys.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"sValue","type":"string","optional":false,"description":"Key to validate"},{"name":"oConfig","type":"object","optional":false,"parameterProperties":{"keys":{"name":"keys","type":"string[]","optional":false,"description":"Available keys"}},"description":"Validator config"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsStringList","basename":"IsStringList","resource":"sap/ui/integration/designtime/baseEditor/validator/IsStringList.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsStringList","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if none of the provided values is an invalid binding.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"aValue","type":"string[]","optional":false,"description":"Strings to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsUniqueKey","basename":"IsUniqueKey","resource":"sap/ui/integration/designtime/baseEditor/validator/IsUniqueKey.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsUniqueKey","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided key is unique in a list of given keys.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"sValue","type":"string","optional":false,"description":"New key value to validate"},{"name":"oConfig","type":"object","optional":false,"parameterProperties":{"keys":{"name":"keys","type":"string[]","optional":false,"description":"Existing keys"},"currentKey":{"name":"currentKey","type":"string","optional":false,"description":"Previous key value"}},"description":"Validator config"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsUniqueList","basename":"IsUniqueList","resource":"sap/ui/integration/designtime/baseEditor/validator/IsUniqueList.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsUniqueList","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided list contains no duplicates.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"aValue","type":"string","optional":false,"description":"List to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.IsValidBinding","basename":"IsValidBinding","resource":"sap/ui/integration/designtime/baseEditor/validator/IsValidBinding.js","module":"sap/ui/integration/designtime/baseEditor/validator/IsValidBinding","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value is a valid binding.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"sValue","type":"string","optional":false,"description":"Value to validate"},{"name":"oConfig","type":"object","optional":false,"parameterProperties":{"allowPlainStrings":{"name":"allowPlainStrings","type":"boolean","optional":false,"description":"Whether strings which don't contain a binding are allowed, default is false"}},"description":"Validator config"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.MaxLength","basename":"MaxLength","resource":"sap/ui/integration/designtime/baseEditor/validator/MaxLength.js","module":"sap/ui/integration/designtime/baseEditor/validator/MaxLength","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value doesn't exceed the maximum length.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"vValue","type":"boolean|string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.NotABinding","basename":"NotABinding","resource":"sap/ui/integration/designtime/baseEditor/validator/NotABinding.js","module":"sap/ui/integration/designtime/baseEditor/validator/NotABinding","export":"","static":true,"visibility":"public","since":"1.81","description":"Validates if the provided value doesn't contain a binding.","experimental":{"text":"1.81"},"methods":[{"name":"validate","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Validation result"},"parameters":[{"name":"sValue","type":"string","optional":false,"description":"Value to validate"}],"description":"Validator function"}]},{"kind":"namespace","name":"sap.ui.integration.designtime.baseEditor.validator.ValidatorRegistry","basename":"ValidatorRegistry","resource":"sap/ui/integration/designtime/baseEditor/validator/ValidatorRegistry.js","module":"sap/ui/integration/designtime/baseEditor/validator/ValidatorRegistry","export":"","static":true,"visibility":"restricted","since":"1.81","description":"Registry for property editor validators.","experimental":{"since":"1.81"},"methods":[{"name":"deregisterAllValidators","visibility":"public","static":true,"description":"Deregisters all validators."},{"name":"deregisterValidators","visibility":"public","static":true,"parameters":[{"name":"sName","type":"string","optional":false,"description":"Validator type to deregister"}],"description":"Deregisters the given validator type and cancels the loading."},{"name":"getValidator","visibility":"public","static":true,"returnValue":{"type":"object","description":"Validator"},"parameters":[{"name":"sName","type":"string","optional":false,"description":"Validator type"}],"description":"Returns the validator for the given type if it was loaded."},{"name":"isRegistered","visibility":"public","static":true,"returnValue":{"type":"boolean","description":"Whether the validator was registered"},"parameters":[{"name":"sName","type":"string","optional":false,"description":"Validator type"}],"description":"Checks whether the given validator type was registered but not loaded yet."},{"name":"ready","visibility":"public","static":true,"returnValue":{"type":"Promise","description":"Promise which resolves when all validators are ready"},"description":"Ready check to make sure that all registered validators were loaded."},{"name":"registerValidators","visibility":"public","static":true,"parameters":[{"name":"mNames","type":"object<string,string>","optional":false,"description":"Validator types and paths to register"}],"description":"Registers the given validator types. If a validator type is already registered, it will be skipped and must first be deregistered using the <code>ValidatorRegistry.deregisterValidator</code> function."}]},{"kind":"class","name":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor","basename":"ComplexMapEditor","resource":"sap/ui/integration/designtime/cardEditor/propertyEditor/complexMapEditor/ComplexMapEditor.js","module":"sap/ui/integration/designtime/cardEditor/propertyEditor/complexMapEditor/ComplexMapEditor","export":"","static":true,"visibility":"restricted","since":"1.76","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>ComplexMapEditor</code> for editing key-value pairs with object values.\n\n<h3>Configuration</h3>\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowKeyChange</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to render an editor for the key attribute of map entries</td> </tr> <tr> <td><code>allowAddAndRemove</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow adding and removing map entries</td> </tr> <tr> <td><code>keyLabel</code></td> <td><code>string</code></td> <td><code>\"Key\"</code></td> <td>The label to show for the <code>key</code> field. Default is the localized string \"Key\".</td> </tr> </table>","experimental":{"text":"1.76"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor","basename":"DestinationsEditor","resource":"sap/ui/integration/designtime/cardEditor/propertyEditor/destinationsEditor/DestinationsEditor.js","module":"sap/ui/integration/designtime/cardEditor/propertyEditor/destinationsEditor/DestinationsEditor","export":"","static":true,"visibility":"restricted","since":"1.77","extends":"sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor","description":"Constructor for a new <code>DestinationsEditor</code>.\n\n<h3>Configuration</h3>\n\nConfiguration is inherited from {@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor}\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowedValues</code></td> <td><code>string[]</code></td> <td><code>[]</code></td> <td>Allowed destination values</td> </tr> </table>","experimental":{"text":"1.77"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.cardEditor.propertyEditor.complexMapEditor.ComplexMapEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.cardEditor.propertyEditor.destinationsEditor.DestinationsEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor","basename":"IconEditor","resource":"sap/ui/integration/designtime/cardEditor/propertyEditor/iconEditor/IconEditor.js","module":"sap/ui/integration/designtime/cardEditor/propertyEditor/iconEditor/IconEditor","export":"","static":true,"visibility":"restricted","since":"1.81","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor","description":"Constructor for a new <code>IconEditor</code>. This allows to set icon Object properties for a specified property of a JSON object. The type of the icon can be \"icon\", \"text\" or \"picture\" Properties of the icon are \"src\", \"text\" \"alt\", \"shape\"","experimental":{"text":"1.81"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.BasePropertyEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.cardEditor.propertyEditor.iconEditor.IconEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor","basename":"ParametersEditor","resource":"sap/ui/integration/designtime/cardEditor/propertyEditor/parametersEditor/ParametersEditor.js","module":"sap/ui/integration/designtime/cardEditor/propertyEditor/parametersEditor/ParametersEditor","export":"","static":true,"visibility":"restricted","since":"1.70","extends":"sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor","description":"Constructor for a new <code>ParametersEditor</code> for editing key-value pairs with primitive values, labels and persisted type information.\n\n<h3>Configuration</h3>\n\nConfiguration is inherited from {@link sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor}\n\n<table style=\"width:100%;\"> <tr style=\"text-align:left\"> <th>Option</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> <tr> <td><code>allowLabelChange</code></td> <td><code>boolean</code></td> <td><code>true</code></td> <td>Whether to allow editing the label of parameters</td> </tr> </table>","experimental":{"text":"1.70"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.baseEditor.propertyEditor.mapEditor.MapEditor.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.cardEditor.propertyEditor.parametersEditor.ParametersEditor."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.CardPreview","basename":"CardPreview","resource":"sap/ui/integration/designtime/editor/CardPreview.js","module":"sap/ui/integration/designtime/editor/CardPreview","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.core.Control","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"settings","type":"any","defaultValue":null,"group":"Misc","visibility":"public","methods":["getSettings","setSettings"]},{"name":"card","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getCard","setCard"]}],"aggregations":[{"name":"cardPreview","singularName":"cardPreview","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","methods":["getCardPreview","destroyCardPreview","setCardPreview"]}]},"constructor":{"visibility":"restricted","description":"Constructor for a new <code>Preview</code> that show a image, abstract live preview\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.CardPreview with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getCard","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>card</code>"},"description":"Gets current value of property {@link #getCard card}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.CardPreview."},{"name":"getSettings","visibility":"restricted","returnValue":{"type":"any","description":"Value of property <code>settings</code>"},"description":"Gets current value of property {@link #getSettings settings}."},{"name":"setCard","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oCard","type":"object","optional":false,"description":"New value for property <code>card</code>"}],"description":"Sets a new value for property {@link #getCard card}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setSettings","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oSettings","type":"any","optional":false,"description":"New value for property <code>settings</code>"}],"description":"Sets a new value for property {@link #getSettings settings}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.BaseField","basename":"BaseField","resource":"sap/ui/integration/designtime/editor/fields/BaseField.js","module":"sap/ui/integration/designtime/editor/fields/BaseField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.core.Control","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"configuration","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getConfiguration","setConfiguration"]},{"name":"specialButton","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getSpecialButton","setSpecialButton"]},{"name":"mode","type":"string","defaultValue":null,"group":"Misc","visibility":"public","methods":["getMode","setMode"]},{"name":"host","type":"object","defaultValue":null,"group":"Misc","visibility":"public","methods":["getHost","setHost"]},{"name":"visible","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getVisible","setVisible"]}],"aggregations":[{"name":"_field","singularName":"_field","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","methods":["get_field","destroy_field","set_field"]},{"name":"_settingsButton","singularName":"_settingsButton","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","methods":["get_settingsButton","destroy_settingsButton","set_settingsButton"]},{"name":"_dynamicField","singularName":"_dynamicField","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","methods":["get_dynamicField","destroy_dynamicField","set_dynamicField"]},{"name":"_hint","singularName":"_hint","type":"sap.m.FormattedText","cardinality":"0..1","visibility":"hidden","methods":["get_hint","destroy_hint","set_hint"]}],"associations":[{"name":"_messageIcon","singularName":"_messageIcon","type":"sap.ui.core.Icon","cardinality":"0..1","visibility":"hidden","methods":["get_messageIcon","set_messageIcon"]}],"events":[{"name":"afterInit","visibility":"public","methods":["attachAfterInit","detachAfterInit","fireAfterInit"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"afterInit","visibility":"restricted","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}]}],"methods":[{"name":"attachAfterInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.designtime.editor.fields.BaseField</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:afterInit afterInit} event of this <code>sap.ui.integration.designtime.editor.fields.BaseField</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.designtime.editor.fields.BaseField</code> itself."},{"name":"detachAfterInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:afterInit afterInit} event of this <code>sap.ui.integration.designtime.editor.fields.BaseField</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.BaseField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"fireAfterInit","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:afterInit afterInit} to attached listeners."},{"name":"getConfiguration","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>configuration</code>"},"description":"Gets current value of property {@link #getConfiguration configuration}."},{"name":"getHost","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>host</code>"},"description":"Gets current value of property {@link #getHost host}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.BaseField."},{"name":"getMode","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>mode</code>"},"description":"Gets current value of property {@link #getMode mode}."},{"name":"getSpecialButton","visibility":"restricted","returnValue":{"type":"object","description":"Value of property <code>specialButton</code>"},"description":"Gets current value of property {@link #getSpecialButton specialButton}."},{"name":"getVisible","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>visible</code>"},"description":"Gets current value of property {@link #getVisible visible}.\n\nDefault value is <code>true</code>."},{"name":"setConfiguration","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oConfiguration","type":"object","optional":false,"description":"New value for property <code>configuration</code>"}],"description":"Sets a new value for property {@link #getConfiguration configuration}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setHost","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oHost","type":"object","optional":false,"description":"New value for property <code>host</code>"}],"description":"Sets a new value for property {@link #getHost host}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setMode","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sMode","type":"string","optional":false,"description":"New value for property <code>mode</code>"}],"description":"Sets a new value for property {@link #getMode mode}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setSpecialButton","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oSpecialButton","type":"object","optional":false,"description":"New value for property <code>specialButton</code>"}],"description":"Sets a new value for property {@link #getSpecialButton specialButton}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setVisible","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bVisible","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>visible</code>"}],"description":"Sets a new value for property {@link #getVisible visible}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.BooleanField","basename":"BooleanField","resource":"sap/ui/integration/designtime/editor/fields/BooleanField.js","module":"sap/ui/integration/designtime/editor/fields/BooleanField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.BooleanField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.BooleanField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.DateField","basename":"DateField","resource":"sap/ui/integration/designtime/editor/fields/DateField.js","module":"sap/ui/integration/designtime/editor/fields/DateField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.DateField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.DateField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.DateTimeField","basename":"DateTimeField","resource":"sap/ui/integration/designtime/editor/fields/DateTimeField.js","module":"sap/ui/integration/designtime/editor/fields/DateTimeField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.DateTimeField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.DateTimeField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.DestinationField","basename":"DestinationField","resource":"sap/ui/integration/designtime/editor/fields/DestinationField.js","module":"sap/ui/integration/designtime/editor/fields/DestinationField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.DestinationField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.DestinationField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.IntegerField","basename":"IntegerField","resource":"sap/ui/integration/designtime/editor/fields/IntegerField.js","module":"sap/ui/integration/designtime/editor/fields/IntegerField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.IntegerField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.IntegerField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.ListField","basename":"ListField","resource":"sap/ui/integration/designtime/editor/fields/ListField.js","module":"sap/ui/integration/designtime/editor/fields/ListField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.ListField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.ListField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.NumberField","basename":"NumberField","resource":"sap/ui/integration/designtime/editor/fields/NumberField.js","module":"sap/ui/integration/designtime/editor/fields/NumberField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.NumberField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.NumberField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.Settings","basename":"Settings","resource":"sap/ui/integration/designtime/editor/fields/Settings.js","module":"sap/ui/integration/designtime/editor/fields/Settings","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.core.Control","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.Settings with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.Settings."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.StringField","basename":"StringField","resource":"sap/ui/integration/designtime/editor/fields/StringField.js","module":"sap/ui/integration/designtime/editor/fields/StringField","export":"","static":true,"visibility":"restricted","since":"1.83.0","extends":"sap.ui.integration.designtime.editor.fields.BaseField","experimental":{"since":"1.83.0"},"ui5-metadata":{"stereotype":"control"},"constructor":{"visibility":"restricted"},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.StringField with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.integration.designtime.editor.fields.BaseField.extend}."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.StringField."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.viz.ColorSelect","basename":"ColorSelect","resource":"sap/ui/integration/designtime/editor/fields/viz/ColorSelect.js","module":"sap/ui/integration/designtime/editor/fields/viz/ColorSelect","export":"","static":true,"visibility":"restricted","since":"1.84.0","extends":"sap.ui.core.Control","experimental":{"since":"1.84.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"enumValue","type":"string","defaultValue":"","group":"Misc","visibility":"public","methods":["getEnumValue","setEnumValue"]},{"name":"colorValue","type":"string","defaultValue":"","group":"Misc","visibility":"public","methods":["getColorValue","setColorValue"]},{"name":"editable","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getEditable","setEditable"]},{"name":"colorEnum","type":"string","defaultValue":"sap.m.AvatarColor","group":"Misc","visibility":"public","methods":["getColorEnum","setColorEnum"]},{"name":"background","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getBackground","setBackground"]},{"name":"allowCustomColors","type":"boolean","defaultValue":false,"group":"Misc","visibility":"public","methods":["getAllowCustomColors","setAllowCustomColors"]}],"aggregations":[{"name":"_colorpalette","singularName":"_colorpalette","type":"sap.m.ColorPalettePopover","cardinality":"0..1","visibility":"hidden","methods":["get_colorpalette","destroy_colorpalette","set_colorpalette"]},{"name":"_button","singularName":"_button","type":"sap.m.Button","cardinality":"0..1","visibility":"hidden","methods":["get_button","destroy_button","set_button"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.viz.ColorSelect with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getAllowCustomColors","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>allowCustomColors</code>"},"description":"Gets current value of property {@link #getAllowCustomColors allowCustomColors}.\n\nDefault value is <code>false</code>."},{"name":"getBackground","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>background</code>"},"description":"Gets current value of property {@link #getBackground background}.\n\nDefault value is <code>true</code>."},{"name":"getColorEnum","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>colorEnum</code>"},"description":"Gets current value of property {@link #getColorEnum colorEnum}.\n\nDefault value is <code>\"sap.m.AvatarColor\"</code>."},{"name":"getColorValue","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>colorValue</code>"},"description":"Gets current value of property {@link #getColorValue colorValue}.\n\nDefault value is <code>empty string</code>."},{"name":"getEditable","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>editable</code>"},"description":"Gets current value of property {@link #getEditable editable}.\n\nDefault value is <code>true</code>."},{"name":"getEnumValue","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>enumValue</code>"},"description":"Gets current value of property {@link #getEnumValue enumValue}.\n\nDefault value is <code>empty string</code>."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.viz.ColorSelect."},{"name":"setAllowCustomColors","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bAllowCustomColors","type":"boolean","optional":true,"defaultValue":false,"description":"New value for property <code>allowCustomColors</code>"}],"description":"Sets a new value for property {@link #getAllowCustomColors allowCustomColors}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."},{"name":"setBackground","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bBackground","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>background</code>"}],"description":"Sets a new value for property {@link #getBackground background}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setColorEnum","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sColorEnum","type":"string","optional":true,"defaultValue":"\"sap.m.AvatarColor\"","description":"New value for property <code>colorEnum</code>"}],"description":"Sets a new value for property {@link #getColorEnum colorEnum}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>\"sap.m.AvatarColor\"</code>."},{"name":"setColorValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sColorValue","type":"string","optional":true,"defaultValue":"\"\"","description":"New value for property <code>colorValue</code>"}],"description":"Sets a new value for property {@link #getColorValue colorValue}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."},{"name":"setEditable","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bEditable","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>editable</code>"}],"description":"Sets a new value for property {@link #getEditable editable}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setEnumValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sEnumValue","type":"string","optional":true,"defaultValue":"\"\"","description":"New value for property <code>enumValue</code>"}],"description":"Sets a new value for property {@link #getEnumValue enumValue}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.viz.IconSelect","basename":"IconSelect","resource":"sap/ui/integration/designtime/editor/fields/viz/IconSelect.js","module":"sap/ui/integration/designtime/editor/fields/viz/IconSelect","export":"","static":true,"visibility":"restricted","since":"1.84.0","extends":"sap.ui.core.Control","experimental":{"since":"1.84.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"value","type":"string","defaultValue":"sap-icon://accept","group":"Misc","visibility":"public","methods":["getValue","setValue"]},{"name":"editable","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getEditable","setEditable"]},{"name":"allowFile","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getAllowFile","setAllowFile"]},{"name":"allowNone","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getAllowNone","setAllowNone"]}],"aggregations":[{"name":"_select","singularName":"_select","type":"sap.m.Select","cardinality":"0..1","visibility":"hidden","methods":["get_select","destroy_select","set_select"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.viz.IconSelect with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getAllowFile","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>allowFile</code>"},"description":"Gets current value of property {@link #getAllowFile allowFile}.\n\nDefault value is <code>true</code>."},{"name":"getAllowNone","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>allowNone</code>"},"description":"Gets current value of property {@link #getAllowNone allowNone}.\n\nDefault value is <code>true</code>."},{"name":"getEditable","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>editable</code>"},"description":"Gets current value of property {@link #getEditable editable}.\n\nDefault value is <code>true</code>."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.viz.IconSelect."},{"name":"getValue","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>value</code>"},"description":"Gets current value of property {@link #getValue value}.\n\nDefault value is <code>\"sap-icon://accept\"</code>."},{"name":"setAllowFile","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bAllowFile","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>allowFile</code>"}],"description":"Sets a new value for property {@link #getAllowFile allowFile}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setAllowNone","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bAllowNone","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>allowNone</code>"}],"description":"Sets a new value for property {@link #getAllowNone allowNone}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setEditable","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bEditable","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>editable</code>"}],"description":"Sets a new value for property {@link #getEditable editable}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sValue","type":"string","optional":true,"defaultValue":"\"sap-icon://accept\"","description":"New value for property <code>value</code>"}],"description":"Sets a new value for property {@link #getValue value}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>\"sap-icon://accept\"</code>."}]},{"kind":"class","name":"sap.ui.integration.designtime.editor.fields.viz.ShapeSelect","basename":"ShapeSelect","resource":"sap/ui/integration/designtime/editor/fields/viz/ShapeSelect.js","module":"sap/ui/integration/designtime/editor/fields/viz/ShapeSelect","export":"","static":true,"visibility":"restricted","since":"1.84.0","extends":"sap.ui.core.Control","experimental":{"since":"1.84.0"},"ui5-metadata":{"stereotype":"control","properties":[{"name":"value","type":"string","defaultValue":"Circle","group":"Misc","visibility":"public","methods":["getValue","setValue"]},{"name":"editable","type":"boolean","defaultValue":true,"group":"Misc","visibility":"public","methods":["getEditable","setEditable"]}],"aggregations":[{"name":"_segmentedbutton","singularName":"_segmentedbutton","type":"sap.m.SegmentedButton","cardinality":"0..1","visibility":"hidden","methods":["get_segmentedbutton","destroy_segmentedbutton","set_segmentedbutton"]}]},"constructor":{"visibility":"restricted","description":"Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"methods":[{"name":"extend","visibility":"restricted","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.designtime.editor.fields.viz.ShapeSelect with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getEditable","visibility":"restricted","returnValue":{"type":"boolean","description":"Value of property <code>editable</code>"},"description":"Gets current value of property {@link #getEditable editable}.\n\nDefault value is <code>true</code>."},{"name":"getMetadata","visibility":"restricted","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.designtime.editor.fields.viz.ShapeSelect."},{"name":"getValue","visibility":"restricted","returnValue":{"type":"string","description":"Value of property <code>value</code>"},"description":"Gets current value of property {@link #getValue value}.\n\nDefault value is <code>\"Circle\"</code>."},{"name":"setEditable","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bEditable","type":"boolean","optional":true,"defaultValue":true,"description":"New value for property <code>editable</code>"}],"description":"Sets a new value for property {@link #getEditable editable}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."},{"name":"setValue","visibility":"restricted","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sValue","type":"string","optional":true,"defaultValue":"\"Circle\"","description":"New value for property <code>value</code>"}],"description":"Sets a new value for property {@link #getValue value}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>\"Circle\"</code>."}]},{"kind":"class","name":"sap.ui.integration.Extension","basename":"Extension","resource":"sap/ui/integration/Extension.js","module":"sap/ui/integration/Extension","export":"","static":true,"visibility":"public","since":"1.75","extends":"sap.ui.base.ManagedObject","description":"Brings JavaScript capabilities for an {@link sap.ui.integration.widgets.Card} where custom logic can be implemented.","ui5-metamodel":true,"ui5-metadata":{"stereotype":"object","properties":[{"name":"actions","type":"sap.ui.integration.CardMenuAction[]","defaultValue":null,"group":"Misc","visibility":"public","description":"The actions configuration.","experimental":{"since":"1.75","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"deprecated":{"since":"1.85","text":"This property is replaced by the <code>actions</code> aggregation of the card;"},"methods":["getActions","setActions"]},{"name":"formatters","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"The formatters, which can be used in the manifest.","experimental":{"since":"1.79"},"methods":["getFormatters","setFormatters"]}],"events":[{"name":"action","visibility":"public","allowPreventDefault":true,"description":"Fired when an action is triggered in the card.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"parameters":{"card":{"name":"card","type":"sap.ui.core.Control","description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","description":"The action source."},"parameters":{"name":"parameters","type":"object","description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","description":"The type of the action."}},"methods":["attachAction","detachAction","fireAction"]}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","type":"string","optional":true,"description":"ID for the new extension, generated automatically if no ID is given."},{"name":"mSettings","type":"object","optional":true,"description":"Initial settings for the new extension."}],"description":"Constructor for a new <code>Extension</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"action","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"card":{"name":"card","type":"sap.ui.core.Control","optional":false,"description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","optional":false,"description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":false,"description":"The action source."},"parameters":{"name":"parameters","type":"object","optional":false,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"The type of the action."}}}}}],"description":"Fired when an action is triggered in the card.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}}],"methods":[{"name":"attachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.Extension</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:action action} event of this <code>sap.ui.integration.Extension</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.Extension</code> itself.\n\nFired when an action is triggered in the card.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"detachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:action action} event of this <code>sap.ui.integration.Extension</code>.\n\nThe passed function and listener object must match the ones used for event registration.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.Extension with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."},{"name":"fireAction","visibility":"protected","returnValue":{"type":"boolean","description":"Whether or not to prevent the default action"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"card":{"name":"card","type":"sap.ui.core.Control","optional":true,"description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","optional":true,"description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":true,"description":"The action source."},"parameters":{"name":"parameters","type":"object","optional":true,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":true,"description":"The type of the action."}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:action action} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"getActions","visibility":"public","returnValue":{"type":"sap.ui.integration.CardMenuAction[]","description":"Value of property <code>actions</code>"},"description":"Gets current value of property {@link #getActions actions}.\n\nThe actions configuration.","experimental":{"since":"1.75","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"deprecated":{"since":"1.85","text":"This property is replaced by the <code>actions</code> aggregation of the card;"}},{"name":"getCard","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.CardFacade","description":"An interface to the card."},"description":"Returns an interface to the card, which uses this extension."},{"name":"getFormatters","visibility":"public","returnValue":{"type":"object","description":"Value of property <code>formatters</code>"},"description":"Gets current value of property {@link #getFormatters formatters}.\n\nThe formatters, which can be used in the manifest.","experimental":{"since":"1.79"}},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.ManagedObjectMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.Extension."},{"name":"onCardReady","visibility":"public","description":"Called when the card is ready."}]},{"kind":"class","name":"sap.ui.integration.Host","basename":"Host","resource":"sap/ui/integration/Host.js","module":"sap/ui/integration/Host","export":"","static":true,"visibility":"public","since":"1.75","extends":"sap.ui.core.Element","description":"Provides application-level functions and services to an integration card.\n\nExamples may include, but are not limited to options like: share a card, remove a card.","experimental":{"since":"1.75"},"ui5-metadata":{"stereotype":"element","properties":[{"name":"actions","type":"sap.ui.integration.CardMenuAction[]","defaultValue":null,"group":"Misc","visibility":"public","description":"The actions configuration.","experimental":{"since":"1.75","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"methods":["getActions","setActions"]},{"name":"resolveDestination","type":"function","defaultValue":null,"group":"Misc","visibility":"public","description":"A function that resolves the given destination name to a URL.\n\nThe Card calls this function when it needs to send a request to a destination. Function returns the URL to which the request is sent.\n\nIf a card depends on a destination, but this callback is not implemented, an error will be logged.\n\nThe callback receives <code>destinationName</code> as parameter and returns a string with the URL. Or alternatively the callback may return a <code>Promise</code> with the URL as an argument.","methods":["getResolveDestination","setResolveDestination"]}],"events":[{"name":"action","visibility":"public","allowPreventDefault":true,"description":"Fired when an action is triggered.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"parameters":{"card":{"name":"card","type":"sap.ui.core.Control","description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","description":"The action source."},"parameters":{"name":"parameters","type":"object","description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","description":"The type of the action."}},"methods":["attachAction","detachAction","fireAction"]}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","type":"string","optional":true,"description":"ID for the new host, generated automatically if no ID is given."},{"name":"mSettings","type":"object","optional":true,"description":"Initial settings for the new host."}],"description":"Constructor for a new <code>Host</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."},"events":[{"name":"action","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"card":{"name":"card","type":"sap.ui.core.Control","optional":false,"description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","optional":false,"description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":false,"description":"The action source."},"parameters":{"name":"parameters","type":"object","optional":false,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"The type of the action."}}}}}],"description":"Fired when an action is triggered.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}}],"methods":[{"name":"attachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.Host</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:action action} event of this <code>sap.ui.integration.Host</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.Host</code> itself.\n\nFired when an action is triggered.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"detachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:action action} event of this <code>sap.ui.integration.Host</code>.\n\nThe passed function and listener object must match the ones used for event registration.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.Host with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."},{"name":"fireAction","visibility":"protected","returnValue":{"type":"boolean","description":"Whether or not to prevent the default action"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"card":{"name":"card","type":"sap.ui.core.Control","optional":true,"description":"The card the action is fired from."},"actionConfig":{"name":"actionConfig","type":"object","optional":true,"description":"The action configuration."},"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":true,"description":"The action source."},"parameters":{"name":"parameters","type":"object","optional":true,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":true,"description":"The type of the action."}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:action action} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.","experimental":{"since":"1.75","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"getActions","visibility":"public","returnValue":{"type":"sap.ui.integration.CardMenuAction[]","description":"Value of property <code>actions</code>"},"description":"Gets current value of property {@link #getActions actions}.\n\nThe actions configuration.","experimental":{"since":"1.75","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"getContexts","visibility":"public","since":"1.83","returnValue":{"type":"Promise","description":"A promise which contains the context structure."},"description":"Returns the context object for the Card Editor design-time environment Contexts can be used to configure Cards with information available in the host environment. Each entry in the list should contain design-time information. A label, placeholder, and description should be provided.\n\nExample Context Structure: { \"sap.workzone\": { \"currentUser: { \"id\": { \"label\": \"Id of the Work Zone user\", \"placeholder\": \"Work Zone user id\", \"description\": \"The value will change based on the logged on user\" } } } ... }\n\nThe context information and texts should be translated as they appear in the design-time UI of the Card Editor."},{"name":"getContextValue","visibility":"public","since":"1.83","returnValue":{"type":"Promise","description":"A promise which resolves with the value of this context."},"parameters":[{"name":"sPath","type":"string","optional":false,"description":"The path to a context"}],"description":"Resolves the value for a given path in the context of the host Contexts can be used to configure Cards with information available in the host environment.\n\nExample Context Structure: { \"sap.workzone\": { \"currentUser: { \"id\": { \"label\": \"Id of the Work Zone user\", \"placeholder\": \"Work Zone user id\", \"description\": \"The value will change based on the logged on user\" } } } ... }\n\nExample path to the current user id of the context sPath = \"sap.workzone/currentUser/id\" parameter: { userId: { value: \"{context>sap.workzone/currentUser/id}\" resolves to UserId } }"},{"name":"getDestination","visibility":"public","returnValue":{"type":"Promise","description":"A promise which resolves with the URL of the destination."},"parameters":[{"name":"sDestinationName","type":"string","optional":false,"description":"The name of the destination. Most often the name which is used in the SAP Cloud Platform."}],"description":"Resolves the destination and returns its URL."},{"name":"getDestinations","visibility":"public","since":"1.83","returnValue":{"type":"Promise","description":"A promise which resolves with the list of destinations."},"description":"Returns the list of destinations for the Card Editor design-time environment List entries are objects that contain at least the name. { \"name\": \"DestinationName\" }"},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.Host."},{"name":"getResolveDestination","visibility":"public","returnValue":{"type":"function","description":"Value of property <code>resolveDestination</code>"},"description":"Gets current value of property {@link #getResolveDestination resolveDestination}.\n\nA function that resolves the given destination name to a URL.\n\nThe Card calls this function when it needs to send a request to a destination. Function returns the URL to which the request is sent.\n\nIf a card depends on a destination, but this callback is not implemented, an error will be logged.\n\nThe callback receives <code>destinationName</code> as parameter and returns a string with the URL. Or alternatively the callback may return a <code>Promise</code> with the URL as an argument."},{"name":"setActions","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sActions","type":"sap.ui.integration.CardMenuAction[]","optional":false,"description":"New value for property <code>actions</code>"}],"description":"Sets a new value for property {@link #getActions actions}.\n\nThe actions configuration.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.","experimental":{"since":"1.75","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"setResolveDestination","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnResolveDestination","type":"function","optional":false,"description":"New value for property <code>resolveDestination</code>"}],"description":"Sets a new value for property {@link #getResolveDestination resolveDestination}.\n\nA function that resolves the given destination name to a URL.\n\nThe Card calls this function when it needs to send a request to a destination. Function returns the URL to which the request is sent.\n\nIf a card depends on a destination, but this callback is not implemented, an error will be logged.\n\nThe callback receives <code>destinationName</code> as parameter and returns a string with the URL. Or alternatively the callback may return a <code>Promise</code> with the URL as an argument.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."}]},{"kind":"class","name":"sap.ui.integration.services.Service","basename":"Service","resource":"sap/ui/integration/services/Service.js","module":"sap/ui/integration/services/Service","export":"","static":true,"visibility":"restricted","allowedFor":["sap.ushell"],"experimental":{},"constructor":{"visibility":"restricted","allowedFor":["sap.ushell"],"description":"Base class for all services. To inherit use the extend method <code>Service.extend</code>"}},{"kind":"class","name":"sap.ui.integration.widgets.Card","basename":"Card","resource":"sap/ui/integration/widgets/Card.js","module":"sap/ui/integration/widgets/Card","export":"","static":true,"visibility":"public","since":"1.62","extends":"sap.f.CardBase","description":"A control that represents a container with a header and content.\n\n<h3>Overview</h3> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.\n\nThe integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps</li> <li>Easily reused across apps</li> <li>Understandable by other technologies</li> <li>Self-contained (has a built-in functionality and doesn't need external configuration)</li> <li>Dynamic parameter handling</li> <li>Clear separation of the roles of the card and app developers</li> </ul>\n\nThe role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header</li> <li>Content</li> <li>Data source</li> <li>Possible actions</li> </ul>\n\nThe role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width</code> and <code>height</code> properties</li> <li>The behavior for the actions described in the manifest.json file, using the action event</li> </ul>\n\n<strong>You can learn more about integration cards in the <a href=\"test-resources/sap/ui/integration/demokit/cardExplorer/index.html\">Card Explorer</a></strong>\n\n<i>When to use</i> <ul> <li>When you want to reuse the card across apps.</li> <li>When you need easy integration and configuration.</li> </ul>\n\n<i>When not to use</i> <ul> <li>When you need more header and content flexibility.</li> <li>When you have to achieve simple card visualization. For such cases, use: {@link sap.f.Card sap.f.Card}.</li> <li>When you have to use an application model. For such cases, use: {@link sap.f.Card sap.f.Card}.</li> <li>When you need complex behavior. For such cases, use: {@link sap.f.Card sap.f.Card}.</li> </ul>","ui5-metamodel":true,"ui5-metadata":{"stereotype":"control","properties":[{"name":"manifest","type":"any","defaultValue":"","group":"Misc","visibility":"public","description":"The URL of the manifest or an object.","methods":["getManifest","setManifest"]},{"name":"parameters","type":"object","defaultValue":null,"group":"Misc","visibility":"public","description":"Overrides the default values of the parameters, which are defined in the manifest. The value is an object containing parameters in format <code>{parameterKey: parameterValue}</code>.","experimental":{"since":"1.65","text":"This property might be changed in future."},"methods":["getParameters","setParameters"]},{"name":"dataMode","type":"sap.ui.integration.CardDataMode","defaultValue":"Active","group":"Behavior","visibility":"public","since":"1.65","description":"Defines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.","experimental":{"since":"1.65"},"methods":["getDataMode","setDataMode"]},{"name":"baseUrl","type":"sap.ui.core.URI","defaultValue":null,"group":"Misc","visibility":"public","since":"1.70","description":"Defines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.","experimental":{"since":"1.70"},"methods":["getBaseUrl","setBaseUrl"]},{"name":"manifestChanges","type":"object[]","defaultValue":null,"group":"Misc","visibility":"public","since":"1.76","description":"Defines a list of configuration settings, which will be merged into the original manifest.\n\nThis can be a list of flexibility changes generated during designtime.\n\nEach level of changes is an item in the list. The change has property \"content\" which contains the configuration, which will be merged on top of the original <code>sap.card</code> section.\n\nExample: <pre>\n[\n    {\"content\": {\"header\": {\"title\": \"My title\"}}},\n    {\"content\": {\"header\": {\"title\": \"My new title\"}}}\n]\n</pre>","experimental":{"since":"1.76","text":"This API might be removed when a permanent solution for flexibility changes is implemented."},"methods":["getManifestChanges","setManifestChanges"]}],"aggregations":[{"name":"actionDefinitions","singularName":"actionDefinition","type":"sap.ui.integration.ActionDefinition","cardinality":"0..n","visibility":"public","since":"1.85","description":"Actions definitions from which actions in the header menu of the card are created. <b>Note</b>: This aggregation is destroyed when the property <code>manifest</code> changes.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"methods":["getActionDefinitions","destroyActionDefinitions","insertActionDefinition","addActionDefinition","removeActionDefinition","indexOfActionDefinition","removeAllActionDefinitions"]},{"name":"_header","singularName":"_header","type":"sap.f.cards.IHeader","cardinality":"0..1","visibility":"hidden","description":"Defines the header of the card.","methods":["get_header","destroy_header","set_header"]},{"name":"_filterBar","singularName":"_filterBar","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","description":"Defines the filters section of the card.","methods":["get_filterBar","destroy_filterBar","set_filterBar"]},{"name":"_content","singularName":"_content","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","description":"Defines the content of the card.","methods":["get_content","destroy_content","set_content"]},{"name":"_extension","singularName":"_extension","type":"sap.ui.integration.Extension","cardinality":"0..1","visibility":"hidden","description":"Defines the Extension of the card.","methods":["get_extension","destroy_extension","set_extension"]},{"name":"_loadingProvider","singularName":"_loadingProvider","type":"sap.ui.core.Element","cardinality":"0..1","visibility":"hidden","description":"Defines the internally used LoadingProvider.","methods":["get_loadingProvider","destroy_loadingProvider","set_loadingProvider"]}],"associations":[{"name":"host","singularName":"host","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"public","description":"The host.","methods":["getHost","setHost"]}],"events":[{"name":"action","visibility":"public","allowPreventDefault":true,"description":"Fired when an action is triggered on the card.","experimental":{"since":"1.64","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"parameters":{"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","description":"The action source."},"manifestParameters":{"name":"manifestParameters","type":"object","description":"The manifest parameters related to the triggered action.","deprecated":{"since":"1.76","text":"Use the <code>parameters</code> parameter instead."}},"parameters":{"name":"parameters","type":"object","since":"1.76","description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","description":"The type of the action."}},"methods":["attachAction","detachAction","fireAction"]},{"name":"manifestReady","visibility":"public","description":"Fired when the manifest is loaded.","experimental":{"since":"1.72"},"methods":["attachManifestReady","detachManifestReady","fireManifestReady"]},{"name":"manifestApplied","visibility":"public","description":"Fired when card utilities (like <code>DataProviderFactory</code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load.","methods":["attachManifestApplied","detachManifestApplied","fireManifestApplied"]}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","type":"string","optional":true,"description":"ID for the new control, generated automatically if no ID is given"},{"name":"mSettings","type":"object","optional":true,"description":"Initial settings for the new control"}],"description":"Constructor for a new <code>Card</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.","references":["{@link topic:5b46b03f024542ba802d99d67bc1a3f4 Cards}"]},"events":[{"name":"action","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false,"parameterProperties":{"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":false,"description":"The action source."},"manifestParameters":{"name":"manifestParameters","type":"object","optional":false,"description":"The manifest parameters related to the triggered action."},"parameters":{"name":"parameters","type":"object","optional":false,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"The type of the action."}}}}}],"description":"Fired when an action is triggered on the card.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object.","experimental":{"since":"1.64","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"manifestApplied","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fired when card utilities (like <code>DataProviderFactory</code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load."},{"name":"manifestReady","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","parameterProperties":{"getSource":{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false},"getParameters":{"name":"getParameters","type":"object","optional":false}}}],"description":"Fired when the manifest is loaded.","experimental":{"since":"1.72"}}],"methods":[{"name":"addActionDefinition","visibility":"public","since":"1.85","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to add; if empty, nothing is inserted"}],"description":"Adds some actionDefinition to the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"attachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.widgets.Card</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:action action} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.widgets.Card</code> itself.\n\nFired when an action is triggered on the card.","experimental":{"since":"1.64","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"attachManifestApplied","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.widgets.Card</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:manifestApplied manifestApplied} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.widgets.Card</code> itself.\n\nFired when card utilities (like <code>DataProviderFactory</code>) and the card elements (like header) are created and initialized.\n\nNote: The card's content may not be available yet because it may depend on other resources to load."},{"name":"attachManifestReady","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oData","type":"object","optional":true,"description":"An application-specific payload object that will be passed to the event handler along with the event object when firing the event"},{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object to call the event handler with. Defaults to this <code>sap.ui.integration.widgets.Card</code> itself"}],"description":"Attaches event handler <code>fnFunction</code> to the {@link #event:manifestReady manifestReady} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.widgets.Card</code> itself.\n\nFired when the manifest is loaded.","experimental":{"since":"1.72"}},{"name":"destroyActionDefinitions","visibility":"public","since":"1.85","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"description":"Destroys all the actionDefinitions in the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"detachAction","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:action action} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nThe passed function and listener object must match the ones used for event registration.","experimental":{"since":"1.64","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"detachManifestApplied","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:manifestApplied manifestApplied} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nThe passed function and listener object must match the ones used for event registration."},{"name":"detachManifestReady","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"fnFunction","type":"function","optional":false,"description":"The function to be called, when the event occurs"},{"name":"oListener","type":"object","optional":true,"description":"Context object on which the given function had to be called"}],"description":"Detaches event handler <code>fnFunction</code> from the {@link #event:manifestReady manifestReady} event of this <code>sap.ui.integration.widgets.Card</code>.\n\nThe passed function and listener object must match the ones used for event registration.","experimental":{"since":"1.72"}},{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.ui.integration.widgets.Card with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.f.CardBase.extend}."},{"name":"fireAction","visibility":"protected","returnValue":{"type":"boolean","description":"Whether or not to prevent the default action"},"parameters":[{"name":"mParameters","type":"object","optional":true,"parameterProperties":{"actionSource":{"name":"actionSource","type":"sap.ui.core.Control","optional":true,"description":"The action source."},"manifestParameters":{"name":"manifestParameters","type":"object","optional":true,"description":"The manifest parameters related to the triggered action."},"parameters":{"name":"parameters","type":"object","optional":true,"description":"The parameters related to the triggered action."},"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":true,"description":"The type of the action."}},"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:action action} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault</code> method on the event object. The return value of this method indicates whether the default action should be executed.","experimental":{"since":"1.64","text":"Disclaimer: this event is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"fireManifestApplied","visibility":"protected","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:manifestApplied manifestApplied} to attached listeners."},{"name":"fireManifestReady","visibility":"protected","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"mParameters","type":"object","optional":true,"description":"Parameters to pass along with the event"}],"description":"Fires event {@link #event:manifestReady manifestReady} to attached listeners.","experimental":{"since":"1.72"}},{"name":"getActionDefinitions","visibility":"public","since":"1.85","returnValue":{"type":"sap.ui.integration.ActionDefinition[]"},"description":"Gets content of aggregation {@link #getActionDefinitions actionDefinitions}.\n\nActions definitions from which actions in the header menu of the card are created. <b>Note</b>: This aggregation is destroyed when the property <code>manifest</code> changes.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"getBaseUrl","visibility":"public","since":"1.70","returnValue":{"type":"sap.ui.core.URI","description":"Value of property <code>baseUrl</code>"},"description":"Gets current value of property {@link #getBaseUrl baseUrl}.\n\nDefines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.","experimental":{"since":"1.70"}},{"name":"getBindingNamespaces","visibility":"restricted","returnValue":{"type":"object","description":"Local binding functions for this card"}},{"name":"getCardContent","visibility":"protected","returnValue":{"type":"sap.ui.core.Control","description":"The content of the card"},"description":"Implements sap.f.ICard interface."},{"name":"getCardHeader","visibility":"protected","returnValue":{"type":"sap.f.cards.IHeader","description":"The header of the card"},"description":"Implements sap.f.ICard interface."},{"name":"getCardHeaderPosition","visibility":"protected","returnValue":{"type":"sap.f.cards.HeaderPosition","description":"The position of the header of the card."},"description":"Implements sap.f.ICard interface."},{"name":"getCombinedParameters","visibility":"public","returnValue":{"type":"Object<string,any>","description":"Object containing parameters in format <code>{parameterKey: parameterValue}</code>."},"description":"Gets values of manifest parameters combined with the parameters from <code>parameters</code> property.\n\n<b>Notes</b>\n\n- Use this method when the manifest is ready. Check <code>manifestReady</code> event.\n\n- Use when developing a Component card.","experimental":{"since":"1.77"}},{"name":"getDataMode","visibility":"public","since":"1.65","returnValue":{"type":"sap.ui.integration.CardDataMode","description":"Value of property <code>dataMode</code>"},"description":"Gets current value of property {@link #getDataMode dataMode}.\n\nDefines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.\n\nDefault value is <code>Active</code>.","experimental":{"since":"1.65"}},{"name":"getDataProviderFactory","visibility":"restricted","returnValue":{"type":"sap.ui.integration.util.DataProviderFactory","description":"The data provider factory."},"description":"Returns the <code>DataProviderFactory</code> instance configured for the card."},{"name":"getFocusDomRef","visibility":"protected","returnValue":{"type":"Element","description":"Returns the DOM Element that should get the focus"},"description":"Returns the DOM Element that should get the focus."},{"name":"getHost","visibility":"public","returnValue":{"type":"sap.ui.core.ID"},"description":"ID of the element which is the current target of the association {@link #getHost host}, or <code>null</code>."},{"name":"getHostInstance","visibility":"public","returnValue":{"type":"sap.ui.integration.Host","description":"The host object associated with this card."},"description":"Gets the instance of the <code>host</code> association.","experimental":{"since":"1.77"}},{"name":"getManifest","visibility":"public","returnValue":{"type":"string|Object","description":"Cloned of the parameters."},"description":"Overwrites getter for card manifest."},{"name":"getManifestChanges","visibility":"public","since":"1.76","returnValue":{"type":"object[]","description":"Value of property <code>manifestChanges</code>"},"description":"Gets current value of property {@link #getManifestChanges manifestChanges}.\n\nDefines a list of configuration settings, which will be merged into the original manifest.\n\nThis can be a list of flexibility changes generated during designtime.\n\nEach level of changes is an item in the list. The change has property \"content\" which contains the configuration, which will be merged on top of the original <code>sap.card</code> section.\n\nExample: <pre>\n[\n    {\"content\": {\"header\": {\"title\": \"My title\"}}},\n    {\"content\": {\"header\": {\"title\": \"My new title\"}}}\n]\n</pre>","experimental":{"since":"1.76","text":"This API might be removed when a permanent solution for flexibility changes is implemented."}},{"name":"getManifestEntry","visibility":"public","returnValue":{"type":"Object","description":"The value at the specified path."},"parameters":[{"name":"sPath","type":"string","optional":false,"description":"The path to return a value for."}],"description":"Returns a value from the Manifest based on the specified path.\n\n<b>Note</b> Use this method when the manifest is ready. Check <code>manifestReady</code> event.","experimental":{"since":"1.77"}},{"name":"getManifestRawJson","visibility":"restricted","returnValue":{"type":"Object","description":"A clone of the initial raw manifest json."},"description":"Returns a clone of the initial manifest without any processing and without any changes applied to it."},{"name":"getManifestWithMergedChanges","visibility":"restricted","returnValue":{"type":"Object","description":"A clone of the manifest with applied changes."},"description":"Returns a clone of the original manifest with all changes from the manifestChanges property applied on top.\n\nUse during designtime."},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.ui.integration.widgets.Card."},{"name":"getRuntimeUrl","visibility":"restricted","returnValue":{"type":"string","description":"The resolved URL."},"parameters":[{"name":"sUrl","type":"string","optional":false,"description":"The URL to resolve."}],"description":"Resolves the given URL relatively to the manifest base path. Absolute paths are not changed.","examples":[{"text":"oCard.getRuntimeUrl(\"images/Avatar.png\") === \"sample/card/images/Avatar.png\"\noCard.getRuntimeUrl(\"http://www.someurl.com/Avatar.png\") === \"http://www.someurl.com/Avatar.png\"\noCard.getRuntimeUrl(\"https://www.someurl.com/Avatar.png\") === \"https://www.someurl.com/Avatar.png\""}]},{"name":"getTranslatedText","visibility":"public","returnValue":{"type":"string","description":"The value belonging to the key, if found; otherwise the key itself or <code>undefined</code> depending on <code>bIgnoreKeyFallback</code>."},"parameters":[{"name":"sKey","type":"string","optional":false,"description":"Key to retrieve the text for"},{"name":"aArgs","type":"string[]","optional":true,"description":"List of parameter values which should replace the placeholders \"{<i>n</i>}\" (<i>n</i> is the index) in the found locale-specific string value. Note that the replacement is done whenever <code>aArgs</code> is given, no matter whether the text contains placeholders or not and no matter whether <code>aArgs</code> contains a value for <i>n</i> or not."},{"name":"bIgnoreKeyFallback","type":"boolean","optional":true,"defaultValue":false,"description":"If set, <code>undefined</code> is returned instead of the key string, when the key is not found in any bundle or fallback bundle."}],"description":"Gets translated text from the i18n properties files configured for this card.\n\nFor more details see {@link sap.base.i18n.ResourceBundle#getText}.","experimental":{"since":"1.83","text":"The API might change."}},{"name":"hideLoadingPlaceholders","visibility":"public","parameters":[{"name":"eCardArea","type":"sap.ui.integration.CardArea","optional":true,"description":"Area of the card to show the loading placeholders on. Possible options are 'Header', 'Content', 'Filters'. Leave empty to hide loading placeholders on all areas of the card."}],"description":"Hides the loading placeholders on the whole card, or a particular section of the card."},{"name":"indexOfActionDefinition","visibility":"public","since":"1.85","returnValue":{"type":"int","description":"The index of the provided control in the aggregation if found, or -1 otherwise"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition whose index is looked for"}],"description":"Checks for the provided <code>sap.ui.integration.ActionDefinition</code> in the aggregation {@link #getActionDefinitions actionDefinitions}. and returns its index if found or -1 otherwise.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"insertActionDefinition","visibility":"public","since":"1.85","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to insert; if empty, nothing is inserted"},{"name":"iIndex","type":"int","optional":false,"description":"The <code>0</code>-based index the actionDefinition should be inserted at; for a negative value of <code>iIndex</code>, the actionDefinition is inserted at position 0; for a value greater than the current size of the aggregation, the actionDefinition is inserted at the last position"}],"description":"Inserts a actionDefinition into the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"isReady","visibility":"public","returnValue":{"type":"boolean","description":"If the card is ready or not."},"experimental":{"since":"1.65","text":"The API might change."}},{"name":"loadDesigntime","visibility":"public","returnValue":{"type":"Promise","description":"Promise resolves after the designtime configuration is loaded."},"description":"Loads the module designtime/Card.designtime or the module given in \"sap.card\": { \"designtime\": \"designtime/Own.designtime\" } This file should contain the designtime configuration for the card.\n\nReturns a promise that resolves with an object { designtime: the designtime modules response manifest: the complete manifest json } The promise is rejected if the module cannot be loaded with an object: { error: \"Card.designtime not found\" }","experimental":{"since":"1.73"}},{"name":"refresh","visibility":"public","description":"Refreshes the card by re-applying the manifest settings and triggering all data requests.","experimental":{"since":"1.65","text":"The API might change."}},{"name":"removeActionDefinition","visibility":"public","since":"1.85","returnValue":{"type":"sap.ui.integration.ActionDefinition","description":"The removed actionDefinition or <code>null</code>"},"parameters":[{"name":"vActionDefinition","type":"int|string|sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to remove or its index or id"}],"description":"Removes a actionDefinition from the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"removeAllActionDefinitions","visibility":"public","since":"1.85","returnValue":{"type":"sap.ui.integration.ActionDefinition[]","description":"An array of the removed elements (might be empty)"},"description":"Removes all the controls from the aggregation {@link #getActionDefinitions actionDefinitions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"request","visibility":"public","returnValue":{"type":"Promise","description":"Resolves when the request is successful, rejects otherwise."},"parameters":[{"name":"oConfiguration","type":"object","optional":false,"parameterProperties":{"URL":{"name":"URL","type":"string","optional":false,"description":"The URL of the resource."},"mode":{"name":"mode","type":"string","optional":true,"defaultValue":"\"cors\"","description":"The mode of the request. Possible values are \"cors\", \"no-cors\", \"same-origin\"."},"method":{"name":"method","type":"string","optional":true,"defaultValue":"\"GET\"","description":"The HTTP method. Possible values are \"GET\", \"POST\"."},"parameters":{"name":"parameters","type":"Object","optional":true,"description":"The request parameters. If the method is \"POST\" the parameters will be put as key/value pairs into the body of the request."},"dataType":{"name":"dataType","type":"Object","optional":true,"defaultValue":"\"json\"","description":"The expected Content-Type of the response. Possible values are \"xml\", \"json\", \"text\", \"script\", \"html\", \"jsonp\". Note: Complex Binding is not supported when a dataType is provided. Serialization of the response to an object is up to the developer."},"headers":{"name":"headers","type":"Object","optional":true,"description":"The HTTP headers of the request."},"withCredentials":{"name":"withCredentials","type":"boolean","optional":true,"defaultValue":false,"description":"Indicates whether cross-site requests should be made using credentials."}},"description":"The configuration of the request."}],"description":"Performs an HTTP request using the given configuration.","experimental":{"since":"1.79"}},{"name":"setBaseUrl","visibility":"public","since":"1.70","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sBaseUrl","type":"sap.ui.core.URI","optional":true,"defaultValue":null,"description":"New value for property <code>baseUrl</code>"}],"description":"Sets a new value for property {@link #getBaseUrl baseUrl}.\n\nDefines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.","experimental":{"since":"1.70"}},{"name":"setDataMode","visibility":"public","since":"1.65","returnValue":{"type":"this","description":"Pointer to the control instance to allow method chaining."},"parameters":[{"name":"sMode","type":"sap.ui.integration.CardDataMode","optional":false,"description":"The mode to set to the Card."}],"description":"Sets a new value for the <code>dataMode</code> property.","experimental":{"since":"1.65","text":"API might change."}},{"name":"setHost","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oHost","type":"sap.ui.core.ID|sap.ui.core.Control","optional":false,"description":"ID of an element which becomes the new target of this host association; alternatively, an element instance may be given"}],"description":"Sets the associated {@link #getHost host}."},{"name":"setManifest","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oManifest","type":"any","optional":true,"defaultValue":"\"\"","description":"New value for property <code>manifest</code>"}],"description":"Sets a new value for property {@link #getManifest manifest}.\n\nThe URL of the manifest or an object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."},{"name":"setManifestChanges","visibility":"public","since":"1.76","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sManifestChanges","type":"object[]","optional":false,"description":"New value for property <code>manifestChanges</code>"}],"description":"Sets a new value for property {@link #getManifestChanges manifestChanges}.\n\nDefines a list of configuration settings, which will be merged into the original manifest.\n\nThis can be a list of flexibility changes generated during designtime.\n\nEach level of changes is an item in the list. The change has property \"content\" which contains the configuration, which will be merged on top of the original <code>sap.card</code> section.\n\nExample: <pre>\n[\n    {\"content\": {\"header\": {\"title\": \"My title\"}}},\n    {\"content\": {\"header\": {\"title\": \"My new title\"}}}\n]\n</pre>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.","experimental":{"since":"1.76","text":"This API might be removed when a permanent solution for flexibility changes is implemented."}},{"name":"showLoadingPlaceholders","visibility":"public","parameters":[{"name":"eCardArea","type":"sap.ui.integration.CardArea","optional":true,"description":"Area of the card to show the loading placeholders on. Possible options are 'Header', 'Content', 'Filters'. Leave empty to show loading placeholders on all areas of the card."}],"description":"Displays the loading placeholders on the whole card, or a particular area of the card. <b>Note:</b> Only areas that contain binding will receive a loading placeholder."},{"name":"showMessage","visibility":"public","parameters":[{"name":"sMessage","type":"string","optional":false,"description":"The message."},{"name":"sType","type":"sap.ui.core.MessageType","optional":false,"description":"Type of the message."}],"description":"Displays a message strip on top of the content with the given text.\n\n<b>Note</b> Currently only available for an Adaptive Card.","experimental":{"since":"1.81"}},{"name":"startManifestProcessing","visibility":"restricted","description":"Starts the card's manifest processing. It will load the manifest and apply the settings written in it. This method can be called if the card needs to be used without rendering. When card is rendered it starts automatically."},{"name":"triggerAction","visibility":"public","parameters":[{"name":"oAction","type":"object","optional":false,"parameterProperties":{"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"The type of the action."},"parameters":{"name":"parameters","type":"object","optional":true,"description":"Additional parameters which will be used by the action handler to perform the action."}},"description":"The settings of the action."}],"description":"Triggers an action inside the card.\n\nUse this method if you need to trigger an action programmatically from inside an <code>Extension</code> or from a Component card.\n\nFor other use cases use the manifest to define the actions. See {@link https://ui5.sap.com/test-resources/sap/ui/integration/demokit/cardExplorer/webapp/index.html#/learn/features/cardActions}\n\n<h3>Example</h3> <pre>\noCard.triggerAction({\n    type: \"Navigation\",\n    parameters: {\n        url: \"...\",\n        target: \"_blank\"\n    }\n});\n</pre>","experimental":{"since":"1.84"}}]},{"kind":"interface","name":"sap.ui.integration.widgets.CardFacade","basename":"CardFacade","resource":"sap/ui/integration/widgets/Card.js","module":"sap/ui/integration/widgets/Card","static":true,"visibility":"public","description":"Facade of the {@link sap.ui.integration.widgets.Card} control.","experimental":{"since":"1.79"},"methods":[{"name":"addActionDefinition","visibility":"public","static":true,"since":"1.85","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to add; if empty, nothing is inserted"}],"description":"Adds some actionDefinition to the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"getBaseUrl","visibility":"public","static":true,"since":"1.70","returnValue":{"type":"sap.ui.core.URI","description":"Value of property <code>baseUrl</code>"},"description":"Gets current value of property {@link #getBaseUrl baseUrl}.\n\nDefines the base URL of the Card Manifest. It should be used when manifest property is an object instead of a URL.","experimental":{"since":"1.70"}},{"name":"getCombinedParameters","visibility":"public","static":true,"returnValue":{"type":"Object<string,any>","description":"Object containing parameters in format <code>{parameterKey: parameterValue}</code>."},"description":"Gets values of manifest parameters combined with the parameters from <code>parameters</code> property.\n\n<b>Notes</b>\n\n- Use this method when the manifest is ready. Check <code>manifestReady</code> event.\n\n- Use when developing a Component card.","experimental":{"since":"1.77"}},{"name":"getManifestEntry","visibility":"public","static":true,"returnValue":{"type":"Object","description":"The value at the specified path."},"parameters":[{"name":"sPath","type":"string","optional":false,"description":"The path to return a value for."}],"description":"Returns a value from the Manifest based on the specified path.\n\n<b>Note</b> Use this method when the manifest is ready. Check <code>manifestReady</code> event.","experimental":{"since":"1.77"}},{"name":"getParameters","visibility":"public","static":true,"returnValue":{"type":"object","description":"Value of property <code>parameters</code>"},"description":"Gets current value of property {@link #getParameters parameters}.\n\nOverrides the default values of the parameters, which are defined in the manifest. The value is an object containing parameters in format <code>{parameterKey: parameterValue}</code>.","experimental":{"since":"1.65","text":"This property might be changed in future."}},{"name":"getTranslatedText","visibility":"public","static":true,"returnValue":{"type":"string","description":"The value belonging to the key, if found; otherwise the key itself or <code>undefined</code> depending on <code>bIgnoreKeyFallback</code>."},"parameters":[{"name":"sKey","type":"string","optional":false,"description":"Key to retrieve the text for"},{"name":"aArgs","type":"string[]","optional":true,"description":"List of parameter values which should replace the placeholders \"{<i>n</i>}\" (<i>n</i> is the index) in the found locale-specific string value. Note that the replacement is done whenever <code>aArgs</code> is given, no matter whether the text contains placeholders or not and no matter whether <code>aArgs</code> contains a value for <i>n</i> or not."},{"name":"bIgnoreKeyFallback","type":"boolean","optional":true,"defaultValue":false,"description":"If set, <code>undefined</code> is returned instead of the key string, when the key is not found in any bundle or fallback bundle."}],"description":"Gets translated text from the i18n properties files configured for this card.\n\nFor more details see {@link sap.base.i18n.ResourceBundle#getText}.","experimental":{"since":"1.83","text":"The API might change."}},{"name":"hideLoadingPlaceholders","visibility":"public","static":true,"parameters":[{"name":"eCardArea","type":"sap.ui.integration.CardArea","optional":true,"description":"Area of the card to show the loading placeholders on. Possible options are 'Header', 'Content', 'Filters'. Leave empty to hide loading placeholders on all areas of the card."}],"description":"Hides the loading placeholders on the whole card, or a particular section of the card."},{"name":"indexOfActionDefinition","visibility":"public","static":true,"since":"1.85","returnValue":{"type":"int","description":"The index of the provided control in the aggregation if found, or -1 otherwise"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition whose index is looked for"}],"description":"Checks for the provided <code>sap.ui.integration.ActionDefinition</code> in the aggregation {@link #getActionDefinitions actionDefinitions}. and returns its index if found or -1 otherwise.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"insertActionDefinition","visibility":"public","static":true,"since":"1.85","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"oActionDefinition","type":"sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to insert; if empty, nothing is inserted"},{"name":"iIndex","type":"int","optional":false,"description":"The <code>0</code>-based index the actionDefinition should be inserted at; for a negative value of <code>iIndex</code>, the actionDefinition is inserted at position 0; for a value greater than the current size of the aggregation, the actionDefinition is inserted at the last position"}],"description":"Inserts a actionDefinition into the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"removeActionDefinition","visibility":"public","static":true,"since":"1.85","returnValue":{"type":"sap.ui.integration.ActionDefinition","description":"The removed actionDefinition or <code>null</code>"},"parameters":[{"name":"vActionDefinition","type":"int|string|sap.ui.integration.ActionDefinition","optional":false,"description":"The actionDefinition to remove or its index or id"}],"description":"Removes a actionDefinition from the aggregation {@link #getActionDefinitions actionDefinitions}.","experimental":{"since":"1.85","text":"Disclaimer: this aggregation is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}},{"name":"request","visibility":"public","static":true,"returnValue":{"type":"Promise","description":"Resolves when the request is successful, rejects otherwise."},"parameters":[{"name":"oConfiguration","type":"object","optional":false,"parameterProperties":{"URL":{"name":"URL","type":"string","optional":false,"description":"The URL of the resource."},"mode":{"name":"mode","type":"string","optional":true,"defaultValue":"\"cors\"","description":"The mode of the request. Possible values are \"cors\", \"no-cors\", \"same-origin\"."},"method":{"name":"method","type":"string","optional":true,"defaultValue":"\"GET\"","description":"The HTTP method. Possible values are \"GET\", \"POST\"."},"parameters":{"name":"parameters","type":"Object","optional":true,"description":"The request parameters. If the method is \"POST\" the parameters will be put as key/value pairs into the body of the request."},"dataType":{"name":"dataType","type":"Object","optional":true,"defaultValue":"\"json\"","description":"The expected Content-Type of the response. Possible values are \"xml\", \"json\", \"text\", \"script\", \"html\", \"jsonp\". Note: Complex Binding is not supported when a dataType is provided. Serialization of the response to an object is up to the developer."},"headers":{"name":"headers","type":"Object","optional":true,"description":"The HTTP headers of the request."},"withCredentials":{"name":"withCredentials","type":"boolean","optional":true,"defaultValue":false,"description":"Indicates whether cross-site requests should be made using credentials."}},"description":"The configuration of the request."}],"description":"Performs an HTTP request using the given configuration.","experimental":{"since":"1.79"}},{"name":"showLoadingPlaceholders","visibility":"public","static":true,"parameters":[{"name":"eCardArea","type":"sap.ui.integration.CardArea","optional":true,"description":"Area of the card to show the loading placeholders on. Possible options are 'Header', 'Content', 'Filters'. Leave empty to show loading placeholders on all areas of the card."}],"description":"Displays the loading placeholders on the whole card, or a particular area of the card. <b>Note:</b> Only areas that contain binding will receive a loading placeholder."},{"name":"showMessage","visibility":"public","static":true,"parameters":[{"name":"sMessage","type":"string","optional":false,"description":"The message."},{"name":"sType","type":"sap.ui.core.MessageType","optional":false,"description":"Type of the message."}],"description":"Displays a message strip on top of the content with the given text.\n\n<b>Note</b> Currently only available for an Adaptive Card.","experimental":{"since":"1.81"}},{"name":"triggerAction","visibility":"public","static":true,"parameters":[{"name":"oAction","type":"object","optional":false,"parameterProperties":{"type":{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"The type of the action."},"parameters":{"name":"parameters","type":"object","optional":true,"description":"Additional parameters which will be used by the action handler to perform the action."}},"description":"The settings of the action."}],"description":"Triggers an action inside the card.\n\nUse this method if you need to trigger an action programmatically from inside an <code>Extension</code> or from a Component card.\n\nFor other use cases use the manifest to define the actions. See {@link https://ui5.sap.com/test-resources/sap/ui/integration/demokit/cardExplorer/webapp/index.html#/learn/features/cardActions}\n\n<h3>Example</h3> <pre>\noCard.triggerAction({\n    type: \"Navigation\",\n    parameters: {\n        url: \"...\",\n        target: \"_blank\"\n    }\n});\n</pre>","experimental":{"since":"1.84"}}]}]}