{"!name":"sap.ui.mdc","!version":"1.20.0","!define":{"sap.ui.mdc.FilterField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterField"},"sap.ui.mdc.ChartNew_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ChartNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.ChartNew"},"sap.ui.mdc.FilterBarDelegate":{"!description":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalites of the {@link sap.ui.mdc.FilterBar FilterBar}. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/FilterBarDelegate","!helpDescription":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalites of the {@link sap.ui.mdc.FilterBar FilterBar}. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.chartNew.ChartSelectionDetailsNew":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chartNew.ChartSelectionDetailsNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"init":{"!description":"Initialises the MDC Chart Selection Details","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chartNew.ChartSelectionDetailsNew.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"/**\nConstructor for a new ChartSelectionDetailsNew.","!module":"sap/ui/mdc/chartNew/ChartSelectionDetailsNew","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.m.SelectionDetails","!category":"class"},"sap.ui.mdc.field.ConditionsType":{"!description":"This class represents a type that is used to map an array of conditions to a single-value control (such as <code>Input<\/code> or <code>Text<\/code> control).","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionsType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a Conditions type.","!module":"sap/ui/mdc/field/ConditionsType","!helpDescription":"This class represents a type that is used to map an array of conditions to a single-value control (such as <code>Input<\/code> or <code>Text<\/code> control).","!proto":"sap.ui.model.SimpleType","!category":"class"},"sap.ui.mdc.condition.Condition":{"!description":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField}, {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.mdc.condition.ConditionModel ConditionModel}","!module":"sap/ui/mdc/condition/Condition","!helpDescription":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField}, {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.mdc.condition.ConditionModel ConditionModel}","!category":"namespace","createCondition":{"!description":"Creates a condition object.","!static":"true","!category":"function","!type":"fn(sOperator: String, aValues: [Object], oInParameters: Object, oOutParameters: Object, sValidated: sap.ui.mdc.enum.ConditionValidated) -> sap.ui.mdc.condition.ConditionObject"},"createItemCondition":{"!description":"Creates a condition instance for a condition representing a item chosen from the field help.\n\nThis is a \"equal to\" (EQ) condition with key and description. It is used for entries selected in the field help and for everything entered in the {@link sap.ui.mdc.Field Field} control.","!static":"true","!category":"function","!type":"fn(sKey: String, sDescription: String, oInParameters: Object, oOutParameters: Object) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.p13n.Engine_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.Engine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.Engine"},"sap.ui.mdc.condition.ConditionModelPropertyBinding":{"!description":"Property binding implementation for Conditions.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModelPropertyBinding.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Creates a new <code>ConditionModelPropertyBinding<\/code>.\n\nThis constructor must only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.mdc.condition.ConditionModel#bindProperty ConditionModel.bindProperty} on the corresponding model instance instead.","!module":"sap/ui/mdc/condition/ConditionModelPropertyBinding","!helpDescription":"Property binding implementation for Conditions.","!proto":"sap.ui.model.json.JSONPropertyBinding","!category":"class"},"sap.ui.mdc.field.BoolFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that shows a list for Boolean values.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.BoolFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.BoolFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new BoolFieldHelp.","!module":"sap/ui/mdc/field/BoolFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that shows a list for Boolean values.","!proto":"sap.ui.mdc.field.FieldHelpBase","!category":"class"},"sap.ui.mdc.odata.v4.FieldValueHelpDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.odata.v4.FieldValueHelpDelegate"},"sap.ui.mdc.field.FieldValueHelp":{"setFilterBar":{"!description":"Sets the aggregated {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.filterbar.FilterBarBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oFilterBar":"type: sap.ui.mdc.filterbar.FilterBarBase, description: The filterBar to set"}},"_getKeyPath":{"!description":"Returns the path of the key field inside the content control (for example, table).","!static":false,"!category":"function","!type":"fn() -> String"},"getSuggestContent":{"!description":"Gets content of aggregation {@link #getSuggestContent suggestContent}.\n\nContent for suggestion.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)\n\n<b>Note:<\/b> If no special content for suggestion is provided, the content of the <code>content<\/code> aggregation is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"setDescriptionPath":{"!description":"Sets a new value for property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionPath?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sDescriptionPath":"type: string, description: New value for property <code>descriptionPath<\/code>"}},"getOutParameters":{"!description":"Gets content of aggregation {@link #getOutParameters outParameters}.\n\nSets the out parameters of a field help.\n\nIf set, the fields sets the data of these entities in the model based to the selected values.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"getFilterFields":{"!description":"Gets current value of property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the dialog header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getDialogContent":{"!description":"Gets content of aggregation {@link #getDialogContent dialogContent}.\n\nContent for dialog.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)\n\n<b>Note:<\/b> If no special content for the dialog is provided, the content of the <code>content<\/code> aggregation is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"removeInParameter":{"!description":"Removes a inParameter from the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(vInParameter: Number | String | sap.ui.mdc.field.InParameter) -> sap.ui.mdc.field.InParameter","parameters":{"vInParameter":"type: int|string|sap.ui.mdc.field.InParameter, description: The inParameter to remove or its index or id"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"!description":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a value help dialog.","destroySuggestContent":{"!description":"Destroys the suggestContent in the aggregation {@link #getSuggestContent suggestContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"getFilterBar":{"!description":"Gets content of aggregation {@link #getFilterBar filterBar}.\n\n<code>FilterBar<\/code> control of the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachDataRequested":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.mdc.field.FieldValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelp<\/code> itself.\n\nThis event is fired when a description for a key or a key for a description is requested, and no data table with list binding is assigned.\n\nThis is the case if a <code>Field<\/code> or <code>FilterField<\/code> shows the description of the value. and the value is formatted or a new input is parsed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelp<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getFormatOptions":{"!description":"Return field-internal information stored in <code>FormatOptions<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getDescriptionPath":{"!description":"Gets current value of property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllCollectiveSearchItems":{"!description":"Removes all the controls from the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeOutParameter":{"!description":"Removes a outParameter from the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(vOutParameter: Number | String | sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.field.OutParameter","parameters":{"vOutParameter":"type: int|string|sap.ui.mdc.field.OutParameter, description: The outParameter to remove or its index or id"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the dialog header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeCollectiveSearchItem":{"!description":"Removes a collectiveSearchItem from the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(vCollectiveSearchItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vCollectiveSearchItem":"type: int|string|sap.ui.core.Item, description: The collectiveSearchItem to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNoDialog":{"!description":"Gets current value of property {@link #getNoDialog noDialog}.\n\nIf set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCollectiveSearchItems":{"!description":"Gets content of aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.\n\nItems for collective searches.\n\nIf used, a field to switch value helps will be shown. If the value help is switched, the <code>contentRequest<\/code> function of the delegate is called and the chosen key is provided.\n\n<b>Note:<\/b> Icons are not supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!module":"sap/ui/mdc/field/FieldValueHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a value help dialog.","addOutParameter":{"!description":"Adds some outParameter to the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to add; if empty, nothing is inserted"}},"destroyOutParameters":{"!description":"Destroys all the outParameters in the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"indexOfInParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.InParameter<\/code> in the aggregation {@link #getInParameters inParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> Number","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter whose index is looked for"}},"getShowConditionPanel":{"!description":"Gets current value of property {@link #getShowConditionPanel showConditionPanel}.\n\nDetermines if a condition panel is shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachDataRequested":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.mdc.field.FieldValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The content to set"}},"setKeyPath":{"!description":"Sets a new value for property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyPath?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sKeyPath":"type: string, description: New value for property <code>keyPath<\/code>"}},"setFilterFields":{"!description":"Sets a new value for property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterFields?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sFilterFields":"type: string, description: New value for property <code>filterFields<\/code>"}},"addCollectiveSearchItem":{"!description":"Adds some collectiveSearchItem to the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem to add; if empty, nothing is inserted"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field help.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"!proto":"sap.ui.mdc.field.FieldHelpBase","insertOutParameter":{"!description":"Inserts a outParameter into the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the outParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the outParameter is inserted at position 0; for a value greater than the current size of the aggregation, the outParameter is inserted at the last position"}},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAllInParameters":{"!description":"Removes all the controls from the aggregation {@link #getInParameters inParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"setNoDialog":{"!description":"Sets a new value for property {@link #getNoDialog noDialog}.\n\nIf set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNoDialog?: Boolean) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"bNoDialog":"type: boolean, description: New value for property <code>noDialog<\/code>"}},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"!constructorDescription":"Constructor for a new <code>FieldValueHelp<\/code>.\n\nIf a more complex value help is needed, the application can add a table to this field help.\nAs the behavior depends on the used table control in this case,\na wrapper is used between the used control and the <code>FieldValueHelp<\/code> element.\n\n<b>Note:<\/b> If a <code>FieldValueHelp<\/code> element is connected to a field, it gets the <code>BindingContext<\/code> of this field.\nSo the in and out parameters are done in this context. Therefore bind the content table in such a way that that it finds\nits data also in the <code>BindingContext<\/code> of the field.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterFields filterFields} : string (default: \"\")<\/li>\n<li>{@link #getKeyPath keyPath} : string (default: \"\")<\/li>\n<li>{@link #getDescriptionPath descriptionPath} : string (default: \"\")<\/li>\n<li>{@link #getShowConditionPanel showConditionPanel} : boolean (default: false)<\/li>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getNoDialog noDialog} : boolean (default: false)<\/li>\n<li>{@link #get_enableOK _enableOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase (default)<\/li>\n<li>{@link #getSuggestContent suggestContent} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/li>\n<li>{@link #getDialogContent dialogContent} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/li>\n<li>{@link #getFilterBar filterBar} : sap.ui.mdc.filterbar.FilterBarBase<\/li>\n<li>{@link #getInParameters inParameters} : sap.ui.mdc.field.InParameter[]<\/li>\n<li>{@link #getOutParameters outParameters} : sap.ui.mdc.field.OutParameter[]<\/li>\n<li>{@link #getCollectiveSearchItems collectiveSearchItems} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataRequested dataRequested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","setDialogContent":{"!description":"Sets the aggregated {@link #getDialogContent dialogContent}.","!static":false,"!category":"function","!type":"fn(oDialogContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oDialogContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The dialogContent to set"}},"destroyDialogContent":{"!description":"Destroys the dialogContent in the aggregation {@link #getDialogContent dialogContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"fireDataRequested":{"!description":"Fires event {@link #event:dataRequested dataRequested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getInParameters":{"!description":"Gets content of aggregation {@link #getInParameters inParameters}.\n\nSets the in parameters of a field help.\n\nIf set, the field help reads the data of these entities in the model and uses it to filter in the value help.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"destroyCollectiveSearchItems":{"!description":"Destroys all the collectiveSearchItems in the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"removeAllOutParameters":{"!description":"Removes all the controls from the aggregation {@link #getOutParameters outParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"getKeyPath":{"!description":"Gets current value of property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyInParameters":{"!description":"Destroys all the inParameters in the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"indexOfOutParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.OutParameter<\/code> in the aggregation {@link #getOutParameters outParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> Number","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter whose index is looked for"}},"insertCollectiveSearchItem":{"!description":"Inserts a collectiveSearchItem into the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the collectiveSearchItem should be inserted at; for a negative value of <code>iIndex<\/code>, the collectiveSearchItem is inserted at position 0; for a value greater than the current size of the aggregation, the collectiveSearchItem is inserted at the last position","oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem to insert; if empty, nothing is inserted"}},"setSuggestContent":{"!description":"Sets the aggregated {@link #getSuggestContent suggestContent}.","!static":false,"!category":"function","!type":"fn(oSuggestContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oSuggestContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The suggestContent to set"}},"indexOfCollectiveSearchItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item) -> Number","parameters":{"oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem whose index is looked for"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"addInParameter":{"!description":"Adds some inParameter to the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to add; if empty, nothing is inserted"}},"insertInParameter":{"!description":"Inserts a inParameter into the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the inParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the inParameter is inserted at position 0; for a value greater than the current size of the aggregation, the inParameter is inserted at the last position"}},"setShowConditionPanel":{"!description":"Sets a new value for property {@link #getShowConditionPanel showConditionPanel}.\n\nDetermines if a condition panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowConditionPanel?: Boolean) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"bShowConditionPanel":"type: boolean, description: New value for property <code>showConditionPanel<\/code>"}}},"sap.ui.mdc.field.DefineConditionPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.DefineConditionPanel"},"sap.ui.mdc.odata.v4.FieldValueHelpDelegate":{"!description":"Delegate class for sap.ui.mdc.base.FieldValueHelp.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/odata/v4/FieldValueHelpDelegate","!helpDescription":"Delegate class for sap.ui.mdc.base.FieldValueHelp.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.Link":{"!description":"A <code>Link<\/code> control can be used to handle navigation scenarios with one or more targets through direct navigation or by opening a {@link sap.ui.mdc.link.Panel}.<br> It can also be used to display additional content, such as {@link sap.ui.mdc.link.ContactDetails} on the {@link sap.ui.mdc.link.Panel}. <b>Note:<\/b> Navigation targets are determined by the implementation of a {@link sap.ui.mdc.LinkDelegate}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getContent":{"!description":"Function that is called in the <code>createPopover<\/code> function of {@link sap.ui.mdc.field.FieldInfoBase}.","!static":false,"!category":"function","!type":"fn(fnGetAutoClosedControl: fn()) -> sap.ui.mdc.link.Panel","parameters":{"fnGetAutoClosedControl":"type: function, description: Function returning the <code>Popover<\/code> control that is created in <code>createPopover<\/code>"}},"retrieveLinkType":{"!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to <code>LinkDelegate<\/code> module that provides the required APIs to create content for the <code>Link<\/code> control.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isTriggerable":{"!description":"Checks if <code>FieldInfo<\/code> is clickable and therefore rendered as a <code>Link<\/code> control.","!static":false,"!category":"function","!type":"fn() -> Promise"},"retrieveLinkItems":{"!description":"Calls the <code>modifyLinkItems<\/code> function of <code>Delegate<\/code> before returning the <code>LinkItem<\/code> objects.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to <code>LinkDelegate<\/code> module that provides the required APIs to create content for the <code>Link<\/code> control.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Link","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setSourceControl":{"!description":"Sets the associated {@link #getSourceControl sourceControl}.","!static":false,"!category":"function","!type":"fn(oSourceControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.Link","parameters":{"oSourceControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this sourceControl association; alternatively, an element instance may be given"}},"!constructorDescription":"Constructor for the new <code>Link<\/code>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnablePersonalization enablePersonalization} : boolean (default: true)<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSourceControl sourceControl} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/Link","!helpDescription":"A <code>Link<\/code> control can be used to handle navigation scenarios with one or more targets through direct navigation or by opening a {@link sap.ui.mdc.link.Panel}.<br> It can also be used to display additional content, such as {@link sap.ui.mdc.link.ContactDetails} on the {@link sap.ui.mdc.link.Panel}. <b>Note:<\/b> Navigation targets are determined by the implementation of a {@link sap.ui.mdc.LinkDelegate}.","getDirectLinkHrefAndTarget":{"!description":"Returns an object containing <code>href<\/code> and <code>target<\/code> of the direct navigation. Returns <code>null<\/code> if there is no direct link.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getSourceControl":{"!description":"ID of the element which is the current target of the association {@link #getSourceControl sourceControl}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getTriggerHref":{"!description":"Returns an <code>href<\/code> of direct link navigation, once the <code>Promise<\/code> has been resolved.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setEnablePersonalization":{"!description":"Sets a new value for property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnablePersonalization?: Boolean) -> sap.ui.mdc.Link","parameters":{"bEnablePersonalization":"type: boolean, description: New value for property <code>enablePersonalization<\/code>"}},"retrieveBaseline":{"!description":"Retrieves the items that are initially part of the baseline which is used when a reset is done.","!static":true,"!category":"function","!type":"fn(oPanel: sap.ui.mdc.link.Panel) -> [Object]","parameters":{"oPanel":"type: sap.ui.mdc.link.Panel, description: Instance of a <code>Panel<\/code> control"}},"retrieveAdditionalContent":{"!static":false,"!category":"function","!type":"fn() -> Promise"},"retrieveAllMetadata":{"!description":"Retrieves the relevant metadata for the panel and returns a property info array.","!static":true,"!category":"function","!type":"fn(oPanel: sap.ui.mdc.link.Panel) -> [Object]","parameters":{"oPanel":"type: sap.ui.mdc.link.Panel, description: Instance of a <code>Panel<\/code> control"}},"getEnablePersonalization":{"!description":"Gets current value of property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.field.ConditionsType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionsType"},"sap.ui.mdc.p13n.subcontroller.BaseController":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.subcontroller.BaseController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.subcontroller.BaseController.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new BaseController. The BaseController serves as\nbase class to create control specific personalization implementations.","!module":"sap/ui/mdc/p13n/subcontroller/BaseController","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect":{"!description":"Can be used to manage the <code>CollectiveSearchSelect<\/code> contro search items.","setSelectedItemKey":{"!description":"Sets a new value for property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedItemKey?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"sSelectedItemKey":"type: string, description: New value for property <code>selectedItemKey<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSelectedItemKey":{"!description":"Gets current value of property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!static":false,"!category":"function","!type":"fn() -> String"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"get_currentItemText":{"!description":"Gets current value of property {@link #get_currentItemText _currentItemText}.","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code> itself.\n\nThis event is fired when a new item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"set_currentItemText":{"!description":"Sets a new value for property {@link #get_currentItemText _currentItemText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(s_currentItemText?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"s_currentItemText":"type: string, description: New value for property <code>_currentItemText<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems displayed by the <code>CollectiveSearchSelect<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!constructorDescription":"Constructor for a new <code>CollectiveSearchSelect<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSelectedItemKey selectedItemKey} : string<\/li>\n<li>{@link #get_currentItemText _currentItemText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/filterbar/vh/CollectiveSearchSelect","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"!helpDescription":"Can be used to manage the <code>CollectiveSearchSelect<\/code> contro search items.","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Item, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.enum.ConditionValidated":{"!description":"Enumeration of the validated state of conditions\n\nIf a <code>Condition<\/code> is chosen from a field help or validated against a field help it is set to be validated. In this case the corresponding item in the field help is shown as selected.\n\nIf the validated state of the <code>Condition<\/code> is undefined this means it is not defined if it is validated or not.","Validated":{"!description":"Condition is validated","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ConditionValidated","NotValidated":{"!description":"Condition is not validated","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.FieldBaseDelegate":{"!description":"Delegate class for <code>sap.ui.mdc.base.FieldBase<\/code>.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","initializeInternalUnitType":{"!description":"This function initializes the unit type. If the <code>Field<\/code> control is used, the used data type might come from the binding. If the type is a V4 unit or currency, it might need to be formatted once.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oType: sap.ui.model.SimpleType, oTypeInitialization: Object)","parameters":{"oTypeInitialization":"type: object, description: Information needed to initialize internal type","oPayload":"type: object, description: Payload for delegate","oType":"type: sap.ui.model.SimpleType, description: Type from binding"}},"!proto":"sap.ui.base.Object","isInputValidationEnabled":{"!description":"Defines if the input of the <code>Field<\/code> or <code>FilterField<\/code> control is checked to determine the key and description.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase) -> Boolean","parameters":{"oFieldHelp":"type: sap.ui.mdc.field.FieldHelpBase, description: Field help assigned to the <code>Field<\/code> or <code>FilterField<\/code> control","oPayload":"type: object, description: Payload for delegate"}},"!category":"class","isInvalidInputAllowed":{"!description":"Defines if the input of the <code>Field<\/code> or <code>FilterField<\/code> control that is not found in the field help or custom logic is accepted.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase) -> Boolean","parameters":{"oFieldHelp":"type: sap.ui.mdc.field.FieldHelpBase, description: Field help assigned to the <code>Field<\/code> or <code>FilterField<\/code> control","oPayload":"type: object, description: Payload for delegate"}},"getDefaultFieldHelpBaseDelegate":{"!description":"This function returns which <code>FieldHelpBaseDelegate<\/code> is used if a default field help (for example, for Boolean values) is created.","!static":true,"!category":"function","!type":"fn(oPayload: Object) -> Object","parameters":{"oPayload":"type: object, description: Payload for delegate"}},"getDescription":{"!description":"Determines the description for a given key.\n\nThis function is called while formatting the output of a <code>Field<\/code> or <code>FilterField<\/code> control in case a description is to be displayed but only a key is given.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nAs the key might change (uppercase), an object with key and description can be returned.\n\nIf the description cannot be determined, a corresponding <code>FormatException<code> is thrown.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase, vKey: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> String | Object | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.","oFieldHelp":"type: sap.ui.mdc.field.FieldHelpBase, description: Field help assigned to the <code>Field<\/code> or <code>FilterField<\/code> control","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","oPayload":"type: object, description: Payload for delegate","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, if bound to one","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, if bound to one","vKey":"type: any, description: Key"}},"initializeTypeFromBinding":{"!description":"If the <code>Field<\/code> control is used, the used data type might come from the binding. In V4-unit or currency case it might need to be formatted once. To initialize the internal type later on, the currencies must be returned.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oType: sap.ui.model.SimpleType, vValue: Object) -> Object","parameters":{"oPayload":"type: object, description: Payload for delegate","oType":"type: sap.ui.model.SimpleType, description: Type from binding","vValue":"type: any, description: Given value"}},"!module":"sap/ui/mdc/field/FieldBaseDelegate","getItemForValue":{"!description":"Determines the key, description, and the in and out parameters of a user input.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nThe result needs to be an object containing the following properties: description, key, and in and out parameters. <ul> <li><code>key<\/code>: Key of the item <\/li> <li><code>description<\/code>: Description of the item <\/li> <li><code>inParameters<\/code>: Object with in parameters and the corresponding value <\/li> <li><code>outParameters<\/code>: Object with out parameters and the corresponding value <\/li> <\/ul>\n\nIf the item cannot be determined, a corresponding <code>ParseException<code> is thrown.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase, vValue: Object, vParsedValue: Object, oBindingContext: sap.ui.model.Context, bCheckKeyFirst: Boolean, bCheckKey: Boolean, bCheckDescription: Boolean, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> Object | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.","oFieldHelp":"type: sap.ui.mdc.field.FieldHelpBase, description: Field help assigned to the <code>Field<\/code> or <code>FilterField<\/code> control","bCheckDescription":"type: boolean, description: If set, it should be checked if there is an item with the given description. This is set to <code>false<\/code> if only the key is used in the field.","vParsedValue":"type: any, description: Value parsed by data type to fit the data type of the key","oPayload":"type: object, description: Payload for delegate","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, if bound to one","bCheckKeyFirst":"type: boolean, description: If set, it first should be checked if the value fits a key","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, if bound to one","vValue":"type: any, description: Value as entered by user","bCheckKey":"type: boolean, description: If set, it should be checked if there is an item with the given key. This is set to <code>false<\/code> if the value cannot be a valid key because of type validation."}},"!helpDescription":"Delegate class for <code>sap.ui.mdc.base.FieldBase<\/code>.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","getDefaultFieldValueHelpDelegate":{"!description":"This function returns which <code>FieldValueHelpDelegate<\/code> is used if a default field help (for example, for defining conditions in <\/code>FilterField<\/code>) is created.","!static":true,"!category":"function","!type":"fn(oPayload: Object) -> Object","parameters":{"oPayload":"type: object, description: Payload for delegate"}}},"sap.ui.mdc.filterbar.FilterBarBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.FilterBarBase"},"sap.ui.mdc.enum.EditMode":{"!description":"Defines in what mode a <code>Field<\/code> or <code>FilterField<\/code> is rendered.","ReadOnly":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in read-only mode","!category":"enum","!type":"String"},"EditableReadOnly":{"!description":"If more then one control is rendered by the <code>Field<\/code> or <code>FilterField<\/code> control, the first part is editable, and the other parts are read-only.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/EditMode","EditableDisplay":{"!description":"If more then one control is rendered by the <code>Field<\/code> or <code>FilterField<\/code> control, the first part is editable, and the other parts are in display mode.","!category":"enum","!type":"String"},"Editable":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in editable mode","!category":"enum","!type":"String"},"!category":"static class","Disabled":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in disabled mode","!category":"enum","!type":"String"},"Display":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in display mode","!category":"enum","!type":"String"}},"sap.ui.mdc.FilterBarDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.FilterBarDelegate"},"sap.ui.mdc.field.FieldMultiInput":{"!description":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldMultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldMultiInput<\/code>.\n\nThe <code>FieldMultiInput<\/code> control enhances the {@link sap.m.MultiInput MultiInput} control to add ARIA attributes\nand other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MultiInput#constructor sap.m.MultiInput}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldMultiInput","!helpDescription":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldMultiInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.MultiInput","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.field.FieldValueHelpContentWrapperBase":{"getKeyForText":{"!description":"Determines the key for an given description.\n\nAs the description might change (uppercase), an object with key and description can be returned.","!static":false,"!category":"function","!type":"fn(sText: String, oInParameters: sap.ui.model.Filter, bNoRequest: Boolean) -> Object | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oInParameters":"type: sap.ui.model.Filter, description: In parameters for the key (as a key must not be unique.)","sText":"type: string, description: Description","bNoRequest":"type: boolean, description: If <code>true<\/code> the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Element","getAsyncKeyText":{"!description":"Checks if the field help supports asynchronous loading for <code>getKeyForText<\/code> and <code>getTextForKey<\/code>.\n\nIf skey or description can be loaded asynchronously, it doesn't depend on the content of the table or filtering. So in this case no <code>dataUpdate<\/code> event for the field is needed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","fieldHelpClose":{"!description":"This function is called if the field help is closed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"fieldHelpOpen":{"!description":"This function is called if the field help is opened. Here the wrapper can focus on the selected item or do similar things.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"getSuggestionContent":{"!description":"Returns the content shown in the value help suggestion popup.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpContentWrapperBase<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. To map the content control\nAPI to the <code>FieldValueHelp<\/code> element, a wrapper is needed. This base class just defines the API.\n\n<b>Note:<\/b> All events and functions must only be used by the corresponding field help.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedItems selectedItems} : object[] (default: []) (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getSelectedItems":{"!description":"Gets current value of property {@link #getSelectedItems selectedItems}.\n\nThe selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDialogContent":{"!description":"Returns the content shown in the value help dialog.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired after a selection has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Base type for <code>FieldValueHelp<\/code> content control wrapper.","detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"navigate":{"!description":"Triggers navigation of the content.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (for example, 1 means next item, -1 means previous item)"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpContentWrapperBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"isSuspended":{"!description":"Checks if the <code>ListBinding<\/code> of the wrapper has been suspended.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getListBinding":{"!description":"Returns the <code>ListBinding<\/code> used for the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.ListBinding"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpContentWrapperBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFilterEnabled":{"!description":"Returns <code>true<\/code> if filtering of the content is supported.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectedItems":{"!description":"Sets a new value for property {@link #getSelectedItems selectedItems}.\n\nThe selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectedItems?: [Object]) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"sSelectedItems":"type: object[], description: New value for property <code>selectedItems<\/code>"}},"attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired when the data of the field help is changed.\n\nThis is needed for the <code>FieldValueHelp<\/code> element to update the popup or dialog. This might be needed to trigger an update for formatting a key with its description in the connected field.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/mdc/field/FieldValueHelpContentWrapperBase","!helpDescription":"Base type for <code>FieldValueHelp<\/code> content control wrapper.","getTextForKey":{"!description":"Determines the description for n given key.\n\nAs the key might change (uppercase), an object with key and description can be returned.","!static":false,"!category":"function","!type":"fn(vKey: Object, oInParameters: sap.ui.model.Filter, oOutParameters: sap.ui.model.Filter, bNoRequest: Boolean) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oInParameters":"type: sap.ui.model.Filter, description: In parameters for the key (as a key must not be unique.)","oOutParameters":"type: sap.ui.model.Filter, description: Out parameters for the key (as a key must not be unique.)","bNoRequest":"type: boolean, description: If <code>true<\/code> the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed","vKey":"type: any, description: Key"}},"applyFilters":{"!description":"Applies the entered filters and search string to the content control (table).\n\nAs the way how filters and search are applied depends on the <code>ListBinding<\/code> and the used content control, this needs to be done in the wrapper.\n\nIf the <code>ListBinding<\/code> in the wrapper is suspended, it must be resumed in this function after setting the filters. It will not be resumed in the <code>FieldValueHelp<\/code> element. There <code>applyFilters<\/code> is only called if the filters should really be set.","!static":false,"!category":"function","!type":"fn(aFilters: [sap.ui.model.Filter], sSearch: String)","parameters":{"sSearch":"type: string, description: Search string (for $search request)","aFilters":"type: sap.ui.model.Filter[], description: Filter objects"}},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired when content is navigated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"dispose":{"!description":"Disposes the wrapper. This method should clean up entities created during initialize","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"initialize":{"!description":"Initializes the wrapper. This is called if the <code>FieldValueHelp<\/code> element is opened. Here modules should be loaded that are only needed if the help is open.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpMdcTableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n<code>sap.ui.mdc.Table<\/code> control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.mdc.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpMdcTableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpMdcTableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> sap.ui.mdc.field.FieldValueHelpMdcTableWrapper","parameters":{"oTable":"type: sap.ui.mdc.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.field.FieldValueHelpDelegate":{"!description":"Delegate class for sap.ui.mdc.base.FieldValueHelp.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","executeSearch":{"!description":"Executes a search in a <code>ListBinding<\/code>.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, sSearch: String)","parameters":{"sSearch":"type: string, description: Search string","oPayload":"type: object, description: Payload for delegate","oListBinding":"type: sap.ui.model.ListBinding, description: ListBinding"}},"checkBindingsPending":{"!description":"Checks if at least one <code>PropertyBinding<\/code> is waiting for an update. As long as the value has not been set for <code>PropertyBinding<\/code>, <code>FieldValueHelp<\/code> needs to wait.\n\nThis check is used when selecting the description for a key if in parameters are used. The description can only be determined if the values of the in parameters are known.","!static":true,"!category":"function","!type":"fn(oPayload: Object, aBindings: [sap.ui.model.PropertyBinding]) -> null | Promise","parameters":{"oPayload":"type: object, description: Payload for delegate","aBindings":"type: sap.ui.model.PropertyBinding[], description: <code>PropertyBinding<\/code> array to check"}},"!module":"sap/ui/mdc/field/FieldValueHelpDelegate","!helpDescription":"Delegate class for sap.ui.mdc.base.FieldValueHelp.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","executeFilter":{"!description":"Executes a filter in a <code>ListBinding<\/code>.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, oFilter: sap.ui.model.Filter, fnCallback: fn(), iRequestedItems: Number)","parameters":{"iRequestedItems":"type: int, description: Number of requested items","oFilter":"type: sap.ui.model.Filter, description: Filter","oPayload":"type: object, description: Payload for delegate","fnCallback":"type: function, description: Callback function after result has been received","oListBinding":"type: sap.ui.model.ListBinding, description: List binding"}},"!proto":"sap.ui.base.Object","determineSearchSupported":{"!description":"Requests to set the <code>filterFields<\/code> property of the <code>FieldValueHelp<\/code> element.\n\nThis function is called when the field help is opened for suggestion. If no search is supported, content controls are not needed right now as the field help is not opened in this case.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldValueHelp) -> Promise","parameters":{"oFieldHelp":"type: sap.ui.mdc.field.FieldValueHelp, description: Field help instance","oPayload":"type: object, description: Payload for delegate"}},"!category":"class","isSearchSupported":{"!description":"Checks if a <code>ListBinding<\/code> supports $Search.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding) -> Boolean","parameters":{"oPayload":"type: object, description: Payload for delegate","oListBinding":"type: sap.ui.model.ListBinding, description: ListBinding"}}},"sap.ui.mdc.field.FieldHelpBaseDelegate":{"!description":"Delegate class for sap.ui.mdc.base.FieldHelpBase.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/field/FieldHelpBaseDelegate","!helpDescription":"Delegate class for sap.ui.mdc.base.FieldHelpBase.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class","contentRequest":{"!description":"Requests the content of the field help.\n\nThis function is called when the field help is opened or a key or description is requested.\n\nSo, depending on the field help control used, all content controls and data need to be assigned. Once they are assigned and the data is set, the returned <code>Promise<\/code> needs to be resolved. Only then does the field help continue opening or reading data.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.base.FieldHelpBase, bSuggestion: Boolean, oProperties: Object) -> Promise","parameters":{"oFieldHelp":"type: sap.ui.mdc.base.FieldHelpBase, description: Field help instance","bSuggestion":"type: boolean, description: Field help is called for suggestion","oPayload":"type: object, description: Payload for delegate","oProperties":"type: object, description: Properties depending on the used FieldHelp (e.g. FieldValueHelp)"}}},"sap.ui.mdc.field.CustomFieldInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.CustomFieldInfo"},"sap.ui.mdc.field":{"fieldWidth":{"!description":"This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.","!category":"enum","!type":"sap.ui.core.CSSSize"},"DefineConditionPanel":"sap.ui.mdc.field.DefineConditionPanel_obj","dateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Only used if type=date and no datepicker is available. The data is displayed and the user input is parsed according to this format. <b>Note:<\/b> The value property is always of the form RFC 3339 (YYYY-MM-dd).","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"enableMultiLineMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Replaced with N-more/N-items labels, which work in all cases.<br>If set to true, the MultiInput will be displayed in multi-line display mode. In multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput. The default value is false. <b>Note:<\/b> This property does not take effect on smartphones or when the editable property is set to false. <b>Caution:<\/b> Do not enable multi-line mode in tables and forms.","!category":"enum","!type":"Boolean"},"additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!category":"enum","!type":"String"},"FieldValueHelpMdcTableWrapper":"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper_obj","filterFields":{"!description":"The fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"type":{"!description":"HTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone). The particular effect of this property differs depending on the browser and the current language settings, especially for the type Number.<br> This parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br> Only the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats. <code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML representations for numbers and dates.","!category":"enum","!type":"sap.m.InputType"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"validateInput":{"!description":"If this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)","!category":"enum","!type":"Boolean"},"enableSuggestionsHighlighting":{"!description":"Specifies whether the suggestions highlighting is enabled.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"FieldBase":"sap.ui.mdc.field.FieldBase_obj","maxTokens":{"!description":"The max number of tokens that is allowed in MultiInput.","!category":"enum","!type":"Number"},"fixedValue":{"!description":"Fixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.","!category":"enum","!type":"Object"},"text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"height":{"!description":"The height","!category":"enum","!type":"sap.ui.core.CSSSize"},"showFilterbar":{"!description":"If set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.","!category":"enum","!type":"Boolean"},"suggestionRowValidator":{"!description":"Defines the validation callback function called when a suggestion row gets selected.","!category":"enum","!type":"Object"},"ConditionsType":"sap.ui.mdc.field.ConditionsType_obj","conditions":{"!description":"Sets the conditions that represent the selected values of the help.","!category":"enum","!type":"[Object]"},"FieldValueHelpContentWrapperBase":"sap.ui.mdc.field.FieldValueHelpContentWrapperBase_obj","textFormatter":{"!description":"Defines the display text formatter function.","!category":"enum","!type":"Object"},"displayBlock":{"!description":"Whether the CSS display should be set to \"block\".","!category":"enum","!type":"Boolean"},"ListFieldHelpItem":"sap.ui.mdc.field.ListFieldHelpItem_obj","keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.","!category":"enum","!type":"String"},"icon":{"!description":"The icon belonging to this list item instance. This can be a URI to an image or an icon font URI.","!category":"enum","!type":"String"},"enabled":{"!description":"Enabled items can be selected.","!category":"enum","!type":"Boolean"},"groupKey":{"!description":"Key of the group for what the items are grouped","!category":"enum","!type":"Object"},"delegate":{"!description":"Defines the module path of the metadata delegate.","!category":"enum","!type":"Object"},"InParameter":"sap.ui.mdc.field.InParameter_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"ConditionFieldHelp":"sap.ui.mdc.field.ConditionFieldHelp_obj","showTableSuggestionValueHelp":{"!description":"For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\n<b>Note:<\/b> If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.","!category":"enum","!type":"Boolean"},"filterList":{"!description":"If set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.","!category":"enum","!type":"Boolean"},"CustomFieldInfo":"sap.ui.mdc.field.CustomFieldInfo_obj","key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"FieldValueHelpMTableWrapper":"sap.ui.mdc.field.FieldValueHelpMTableWrapper_obj","dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in what order.","!category":"enum","!type":"sap.ui.mdc.enum.FieldDisplay"},"ValueHelpPanel":"sap.ui.mdc.field.ValueHelpPanel_obj","textFormatMode":{"!description":"Defines the display text format mode.","!category":"enum","!type":"sap.m.InputTextFormatMode"},"width":{"!description":"The width","!category":"enum","!type":"sap.ui.core.CSSSize"},"selectedItems":{"!description":"The selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.","!category":"enum","!type":"[Object]"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"valueHelpIconSrc":{"!description":"Set custom value help icon.","!category":"enum","!type":"sap.ui.core.URI"},"showSuggestion":{"!description":"If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.","!category":"enum","!type":"Boolean"},"_fieldHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"FieldMultiInput":"sap.ui.mdc.field.FieldMultiInput_obj","mode":{"!description":"Update mode of the <code>OutParameter<\/code> element.","!category":"enum","!type":"sap.ui.mdc.enum.OutParameterMode"},"OutParameter":"sap.ui.mdc.field.OutParameter_obj","valueHelpOnly":{"!description":"If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect","!category":"enum","!type":"Boolean"},"maxConditions":{"!description":"Sets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"FieldHelpBaseDelegate":"sap.ui.mdc.field.FieldHelpBaseDelegate_obj","ListFieldHelp":"sap.ui.mdc.field.ListFieldHelp_obj","startSuggestion":{"!description":"Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input.\n\n<b>Note:<\/b> When it's set to 0, suggest event is fired when input with no text gets focus. In this case no suggestion popup will open.","!category":"enum","!type":"Number"},"inputOK":{"!description":"If set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.","!category":"enum","!type":"Boolean"},"CustomFieldHelp":"sap.ui.mdc.field.CustomFieldHelp_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"initialValueFilterEmpty":{"!description":"If set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.","!category":"enum","!type":"Boolean"},"showTokenizer":{"!description":"If set to <code>true<\/code>, a tokenizer is shown.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"ariaAttributes":{"!description":"Sets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.","!category":"enum","!type":"String"},"formatOptions":{"!description":"The <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.","!category":"enum","!type":"Object"},"filterValue":{"!description":"The value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!category":"enum","!type":"String"},"editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enum.EditMode"},"BoolFieldHelp":"sap.ui.mdc.field.BoolFieldHelp_obj","name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submission).","!category":"enum","!type":"String"},"maxSuggestionWidth":{"!description":"If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field. <b>Note:<\/b> The value will be ignored if the actual width of the input field is larger than the specified parameter value.","!category":"enum","!type":"sap.ui.core.CSSSize"},"_enableOK":{"!description":"Internal property to bind the OK button to enable or disable it.","!category":"enum","!type":"Boolean"},"ConditionType":"sap.ui.mdc.field.ConditionType_obj","maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off. This parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>. If the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored.","!category":"enum","!type":"Number"},"useFirstMatch":{"!description":"If set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.","!category":"enum","!type":"Boolean"},"showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.","!category":"enum","!type":"Boolean"},"FieldBaseDelegate":"sap.ui.mdc.field.FieldBaseDelegate_obj","description":{"!description":"The description is a text after the input field, e.g. units of measurement, currencies.","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"FieldHelpBase":"sap.ui.mdc.field.FieldHelpBase_obj","textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"groupText":{"!description":"Text of the group for what the items are grouped","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"value":{"!description":"The value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.","!category":"enum","!type":"Object"},"selectedKey":{"!description":"Defines the key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.","!category":"enum","!type":"Boolean"},"valueLiveUpdate":{"!description":"Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\n<b>Note:<\/b> When set to true and the value of the Input control is bound to a model, the change event becomes obsolete and will not be fired, as the value in the model will be updated each time the user provides input. In such cases, subscription to the liveChange event is more appropriate, as it corresponds to the way the underlying model gets updated.","!category":"enum","!type":"Boolean"},"autocomplete":{"!description":"Specifies whether autocomplete is enabled. Works only if \"showSuggestion\" property is set to true. <b>Note:<\/b> The autocomplete feature is disabled on Android devices due to a OS specific issue.","!category":"enum","!type":"Boolean"},"editable":{"!description":"Defines whether the control can be modified by the user or not. <b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.","!category":"enum","!type":"Boolean"},"_filterBarVisible":{"!description":"Internal property to bind corresponding controls to the visibility of the <code>FilterBar<\/code> section","!category":"enum","!type":"Boolean"},"FieldInput":"sap.ui.mdc.field.FieldInput_obj","FieldValueHelpUITableWrapper":"sap.ui.mdc.field.FieldValueHelpUITableWrapper_obj","label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"helpPath":{"!description":"Name of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.","!category":"enum","!type":"String"},"showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"showConditionPanel":{"!description":"Determines if a condition panel is shown.","!category":"enum","!type":"Boolean"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.","!category":"enum","!type":"Boolean"},"FieldValueHelp":"sap.ui.mdc.field.FieldValueHelp_obj","FieldValueHelpDelegate":"sap.ui.mdc.field.FieldValueHelpDelegate_obj","noDialog":{"!description":"If set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.","!category":"enum","!type":"Boolean"},"filterSuggests":{"!description":"Defines whether to filter the provided suggestions before showing them to the user.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.field.CustomFieldInfo":{"!description":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.CustomFieldInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.CustomFieldInfo","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"!constructorDescription":"Constructor for a new CustomFieldInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/field/CustomFieldInfo","!helpDescription":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field information.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.CustomFieldInfo"}},"sap.ui.mdc.mixin.DelegateMixin":{"!description":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeUtil<\/code> - Returns the <code>typeUtil<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":"true","!category":"function","!type":"fn() -> Object"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"!module":"sap/ui/mdc/mixin/DelegateMixin","!helpDescription":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeUtil<\/code> - Returns the <code>typeUtil<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":"true","!category":"function","!type":"fn(oPreloadedModule?: Object) -> Promise<sap.ui.mdc.BaseDelegate>"},"getTypeUtil":{"!description":"Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil"},"!category":"namespace","awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":"true","!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":"true","!category":"function","!type":"fn() -> Promise"},"initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":"true","!category":"function","!type":"fn(CustomPropertyHelper?: sap.ui.mdc.util.PropertyHelper) -> Promise<sap.ui.mdc.util.PropertyHelper>"}},"sap.ui.mdc.Chart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Chart"},"sap.ui.mdc.Chart":{"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sP13nMode: [sap.ui.mdc.ChartP13nMode]) -> sap.ui.mdc.Chart","parameters":{"sP13nMode":"type: sap.ui.mdc.ChartP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"destroy_toolbar":{"!description":"Destroys the _toolbar in the aggregation {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.Chart","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"get_toolbar":{"!description":"Gets content of aggregation {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ActionToolbar"},"destroyData":{"!description":"Destroys all the data in the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.Chart","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"destroy_noDataStruct":{"!description":"Destroys the _noDataStruct in the aggregation {@link #get_noDataStruct _noDataStruct}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getIgnoreToolbarActions":{"!description":"Gets current value of property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartToolbarActionType]"},"getMinHeight":{"!description":"Gets current value of property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllData":{"!description":"Removes all the controls from the aggregation {@link #getData data}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMinHeight":{"!description":"Sets a new value for property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"!description":"The Chart control creates a chart based on metadata and the configuration specified.","init":{"!description":"Initialises the MDC Chart","!static":false,"!category":"function","!type":"fn()"},"destroy_breadcrumbs":{"!description":"Destroys the _breadcrumbs in the aggregation {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"setSelectionMode":{"!description":"Sets the <code>selectionMode<\/code> property","!static":false,"!category":"function","!type":"fn(vValue: String) -> sap.ui.mdc.Chart","parameters":{"vValue":"type: string, description: the selection mode to set the chart to"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nDefault value is <code>\"column\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | undefined) -> sap.ui.mdc.Chart","parameters":{"oFilter":"type: sap.ui.core.ID|undefined, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"_onFiltersChanged":{"!description":"Callback for when fuilters changed Activates the overlay on the MDC Chart","!static":false,"!category":"function","!type":"fn(oEvent: undefined)","parameters":{"oEvent":"type: undefined, description: filter changed event"}},"!module":"sap/ui/mdc/Chart","getItemsByKeys":{"!description":"Gets the item from the aggregation named <code>items<\/code> that matches the given <code>aItemKeys<\/code>.","!static":false,"!category":"function","!type":"fn(aItemKeys: Array) -> Array","parameters":{"aItemKeys":"type: array, description: The item keys that specify the item to be retrieved"}},"getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the no data text shown in the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"set_breadcrumbs":{"!description":"Sets the aggregated {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn(o_breadcrumbs: sap.m.Breadcrumbs) -> sap.ui.mdc.Chart","parameters":{"o_breadcrumbs":"type: sap.m.Breadcrumbs, description: The _breadcrumbs to set"}},"getVizProperties":{"!description":"Gets current value of property {@link #getVizProperties vizProperties}.\n\nThe vizProperties","!static":false,"!category":"function","!type":"fn() -> Object"},"removeData":{"!description":"Removes a data from the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(vData: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vData":"type: int|string|sap.ui.core.Control, description: The data to remove or its index or id"}},"getManagedObjectModel":{"!description":"Gets the managed object model.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.base.ManagedObjectModel"},"getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getBindingInfo":{"!description":"Gets information about the current data binding","!static":false,"!category":"function","!type":"fn()"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.ui.mdc.Chart","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"initialized":{"!description":"Returns a Promise that resolves after the chart has been initialized after being created and after changing the type.","!static":false,"!category":"function","!type":"fn() -> Promise"},"isInnerChartBound":{"!description":"Checks whether inner chart is bound","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getData":{"!description":"Gets content of aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"bindAggregation":{"!description":"Calls the Delegates to bind the aggregation onto the inner chart","!static":false,"!category":"function","!type":"fn(sName: String, oBindingInfo: undefined, sSearchText: undefined)","parameters":{"sName":"type: string, description: name of the aggregation","sSearchText":"type: undefined, description: search text (optional)","oBindingInfo":"type: undefined, description: binding info for the aggregation"}},"fireSelectionDetailsActionPressed":{"!description":"Fires event {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCollectionModel":{"!description":"Gets the collection model from the binding information","!static":false,"!category":"function","!type":"fn() -> Object"},"get_breadcrumbs":{"!description":"Gets content of aggregation {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.m.Breadcrumbs"},"set_chart":{"!description":"Sets the aggregated {@link #get_chart _chart}.","!static":false,"!category":"function","!type":"fn(o_chart: sap.chart.Chart) -> sap.ui.mdc.Chart","parameters":{"o_chart":"type: sap.chart.Chart, description: The _chart to set"}},"_updateColoring":{"!description":"Updates the coloring on the inner chart","!static":false,"!category":"function","!type":"fn(oChart: sap.chart.Chart, aVisibleDimensions: Array, aVisibleMeasures: Array)","parameters":{"aVisibleDimensions":"type: array, description: visible dimensions for inner chart","aVisibleMeasures":"type: array, description: visible measures for inner chart","oChart":"type: sap.chart.Chart, description: inner chart"}},"addData":{"!description":"Adds some data to the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(oData: sap.ui.core.Control) -> sap.ui.mdc.Chart","parameters":{"oData":"type: sap.ui.core.Control, description: The data to add; if empty, nothing is inserted"}},"getAvailableChartTypes":{"!description":"Gets the available chart types for the current state of the inner chart","!static":false,"!category":"function","!type":"fn() -> Array"},"setVizProperties":{"!description":"Sets a new value for property {@link #getVizProperties vizProperties}.\n\nThe vizProperties\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oVizProperties: Object) -> sap.ui.mdc.Chart","parameters":{"oVizProperties":"type: object, description: New value for property <code>vizProperties<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Chart","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"_createDrillBreadcrumbs":{"!description":"shows the Breadcrumbs for current drill-path and drilling up.","!static":false,"!category":"function","!type":"fn()"},"_updateInnerChartNoDataText":{"!description":"Updates the text shown when there is no data for the inner chart","!static":false,"!category":"function","!type":"fn()"},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"fireDataPointsSelected":{"!description":"Fires event {@link #event:dataPointsSelected dataPointsSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"_updateSemanticalPattern":{"!description":"Updates the semantical pattern for given measures","!static":false,"!category":"function","!type":"fn(oChart: sap.chart.Chart, aVisibleMeasures: Array, mDataPoints: *)","parameters":{"aVisibleMeasures":"type: array, description: array containing the visible measures on the inner chart","oChart":"type: sap.chart.Chart, description: the inner chart","mDataPoints":"type: *, description: data points of the inner chart"}},"initModules":{"!description":"Initializes modules needed for MDC Chart","!static":false,"!category":"function","!type":"fn(aModules: Array)","parameters":{"aModules":"type: array, description: Modules to initialize"}},"detachSelectionDetailsActionPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"_getNoDataText":{"!description":"Gets the text shown for when there is no data on the inner chart","!static":false,"!category":"function","!type":"fn() -> String"},"isFilteringEnabled":{"!description":"Gets whether filtering is enabled for p13n","!static":false,"!category":"function","!type":"fn()"},"insertData":{"!description":"Inserts a data into the aggregation {@link #getData data}.","!static":false,"!category":"function","!type":"fn(oData: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.Chart","parameters":{"oData":"type: sap.ui.core.Control, description: The data to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the data should be inserted at; for a negative value of <code>iIndex<\/code>, the data is inserted at position 0; for a value greater than the current size of the aggregation, the data is inserted at the last position"}},"_getSorters":{"!description":"Returns sorters available for the data","!static":false,"!category":"function","!type":"fn() -> Array"},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chart.Item]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.chart.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item) -> Number","parameters":{"oItem":"type: sap.ui.mdc.chart.Item, description: The item whose index is looked for"}},"_update":{"!description":"Updates the inner chart","!static":false,"!category":"function","!type":"fn(oChart: sap.chart.Chart, oChanges: Object)","parameters":{"oChanges":"type: object, description: Object containing the changes to update with","oChart":"type: sap.chart.Chart, description: the inner chart to update"}},"setLegendVisible":{"!description":"Sets the visibility of the legend","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: true to show legend, false to hide"}},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Chart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"applySettings":{"!description":"Applies given settings onto the MDC Chart and initialized it","!static":false,"!category":"function","!type":"fn(mSettings: *)","parameters":{"mSettings":"type: *, description: settings to apply"}},"getSelectionDetailsActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chart.Item]"},"done":{"!description":"Returns a Promise that resolves after the chart has been initialized after being created and after changing the type.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"destroy_chart":{"!description":"Destroys the _chart in the aggregation {@link #get_chart _chart}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"!helpDescription":"The Chart control creates a chart based on metadata and the configuration specified.","rebind":{"!description":"Updates the delegate binding info and updates inner chart if necessary","!static":false,"!category":"function","!type":"fn()"},"setIgnoreToolbarActions":{"!description":"Sets a new value for property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sIgnoreToolbarActions?: [sap.ui.mdc.ChartToolbarActionType]) -> sap.ui.mdc.Chart","parameters":{"sIgnoreToolbarActions":"type: sap.ui.mdc.ChartToolbarActionType[], description: New value for property <code>ignoreToolbarActions<\/code>"}},"_showDrillDown":{"!description":"shows the drill-down popover for selection a dimension to drill down to.","!static":false,"!category":"function","!type":"fn()"},"removeItem":{"!description":"Removes the chart item","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, bSuppressInvalidate: undefined) -> *","parameters":{"bSuppressInvalidate":"type: undefined, description: Suppress invalidation of the control","oItem":"type: sap.ui.mdc.chart.Item, description: oItem a chart Item"}},"attachSelectionDetailsActionPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Chart<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"get_noDataStruct":{"!description":"Gets content of aggregation {@link #get_noDataStruct _noDataStruct}.","!static":false,"!category":"function","!type":"fn() -> sap.m.VBox"},"setNoDataText":{"!description":"Sets the text shown for when there is no data for the chart","!static":false,"!category":"function","!type":"fn(sNoData: String) -> *","parameters":{"sNoData":"type: string, description: text to show when no data is shown"}},"get_chart":{"!description":"Gets content of aggregation {@link #get_chart _chart}.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"get_colorings":{"!description":"Gets current value of property {@link #get_colorings _colorings}.\n\nThe coloring","!static":false,"!category":"function","!type":"fn() -> Object"},"getCollectionPath":{"!description":"Gets the collection path from the binding information","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.mdc.Control","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nthe selection mode of the chart\n\nDefault value is <code>\"MULTIPLE\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"update":{"!description":"Updates the inner chart","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Object containing the changes to update with"}},"!category":"class","getLegendVisible":{"!description":"Gets current value of property {@link #getLegendVisible legendVisible}.\n\nSet chart's legend properties.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"set_toolbar":{"!description":"Sets the aggregated {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn(o_toolbar: sap.ui.mdc.ActionToolbar) -> sap.ui.mdc.Chart","parameters":{"o_toolbar":"type: sap.ui.mdc.ActionToolbar, description: The _toolbar to set"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart","!static":false,"!category":"function","!type":"fn() -> String"},"addItem":{"!description":"Adds a Item to the chart","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress invalidation of the control","oItem":"type: sap.ui.mdc.chart.Item, description: a chart Item"}},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"/**\nConstructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getChartType chartType} : string (default: \"column\")<\/li>\n<li>{@link #getSelectionMode selectionMode} : string (default: \"MULTIPLE\")<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.ChartP13nMode[]<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getVizProperties vizProperties} : object<\/li>\n<li>{@link #get_colorings _colorings} : object<\/li>\n<li>{@link #getIgnoreToolbarActions ignoreToolbarActions} : sap.ui.mdc.ChartToolbarActionType[] (default: [])<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: \"240px\")<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: \"400px\")<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.ui.core.Control[]<\/li>\n<li>{@link #getItems items} : sap.ui.mdc.chart.Item[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #get_chart _chart} : sap.chart.Chart<\/li>\n<li>{@link #get_toolbar _toolbar} : sap.ui.mdc.ActionToolbar<\/li>\n<li>{@link #get_breadcrumbs _breadcrumbs} : sap.m.Breadcrumbs<\/li>\n<li>{@link #get_noDataStruct _noDataStruct} : sap.m.VBox<\/li>\n<li>{@link #getSelectionDetailsActions selectionDetailsActions} : sap.ui.mdc.chart.SelectionDetailsActions<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | undefined)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataPointsSelected dataPointsSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","getCurrentState":{"!description":"Fetches the current state of the chart (as a JSON)","!static":false,"!category":"function","!type":"fn() -> Object"},"set_noDataStruct":{"!description":"Sets the aggregated {@link #get_noDataStruct _noDataStruct}.","!static":false,"!category":"function","!type":"fn(o_noDataStruct: sap.m.VBox) -> sap.ui.mdc.Chart","parameters":{"o_noDataStruct":"type: sap.m.VBox, description: The _noDataStruct to set"}},"detachDataPointsSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataPointsSelected dataPointsSelected} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachDataPointsSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataPointsSelected dataPointsSelected} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Chart<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"set_colorings":{"!description":"Sets a new value for property {@link #get_colorings _colorings}.\n\nThe coloring\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(o_colorings: Object) -> sap.ui.mdc.Chart","parameters":{"o_colorings":"type: object, description: New value for property <code>_colorings<\/code>"}},"setSelectionDetailsActions":{"!description":"Sets the aggregated {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActions: sap.ui.mdc.chart.SelectionDetailsActions) -> sap.ui.mdc.Chart","parameters":{"oSelectionDetailsActions":"type: sap.ui.mdc.chart.SelectionDetailsActions, description: The selectionDetailsActions to set"}},"setSortConditions":{"!description":"Sets a new value for property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSortConditions: Object) -> sap.ui.mdc.Chart","parameters":{"oSortConditions":"type: object, description: New value for property <code>sortConditions<\/code>"}},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"_addCriticality":{"!description":"Adds criticality to an item","!static":false,"!category":"function","!type":"fn(oItem: undefined)","parameters":{"oItem":"type: undefined, description: item to add criticality to"}},"destroySelectionDetailsActions":{"!description":"Destroys the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"indexOfData":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getData data}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oData: sap.ui.core.Control) -> Number","parameters":{"oData":"type: sap.ui.core.Control, description: The data whose index is looked for"}},"getSortConditions":{"!description":"Gets current value of property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.","!static":false,"!category":"function","!type":"fn() -> Object"},"setChartType":{"!description":"Sets a new value for property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"column\"<\/code>.","!static":false,"!category":"function","!type":"fn(sChartType?: String) -> sap.ui.mdc.Chart","parameters":{"sChartType":"type: string, description: New value for property <code>chartType<\/code>"}},"getTypeInfo":{"!description":"Gets information about the current chart type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart.ChartTypeInfo"},"_createInnerChart":{"!description":"Creates inner chart","!static":false,"!category":"function","!type":"fn()"},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartP13nMode]"},"insertItem":{"!description":"Inserts an Item into the chart","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, iIndex: Number, bSuppressInvalidate: Boolean)","parameters":{"bSuppressInvalidate":"type: boolean, description: Suppress invalidation of the control","iIndex":"type: int, description: the index","oItem":"type: sap.ui.mdc.chart.Item, description: a chart Item"}},"_renderOverlay":{"!description":"Adds/Removes the overlay shown above the inner chart","!static":false,"!category":"function","!type":"fn(bShow: Boolean)","parameters":{"bShow":"type: boolean, description: true to show overlay, false to hide"}}},"sap.ui.mdc.field.FieldValueHelpUITableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpUITableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpUITableWrapper"},"sap.ui.mdc.mixin":{"DelegateMixin":"sap.ui.mdc.mixin.DelegateMixin","FilterIntegrationMixin":"sap.ui.mdc.mixin.FilterIntegrationMixin","!module":"sap/ui/mdc/mixin/FilterIntegrationMixin","!category":"namespace","AdaptationMixin":"sap.ui.mdc.mixin.AdaptationMixin"},"sap.ui.mdc.field.ConditionFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ConditionFieldHelp"},"sap.ui.mdc.enum":{"ConditionValidated":"sap.ui.mdc.enum.ConditionValidated","FieldDisplay":"sap.ui.mdc.enum.FieldDisplay","BaseType":"sap.ui.mdc.enum.BaseType","OutParameterMode":"sap.ui.mdc.enum.OutParameterMode","ContentMode":"sap.ui.mdc.enum.ContentMode","EditMode":"sap.ui.mdc.enum.EditMode","!category":"namespace","PersistenceMode":"sap.ui.mdc.enum.PersistenceMode"},"sap.ui.mdc.ChartNew":{"getZoomState":{"!description":"Returns the current zoom information as an object { \"enabled\":true, \"currentZoomLevel\":0.16 }","!static":false,"!category":"function","!type":"fn() -> Object"},"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sP13nMode: [sap.ui.mdc.ChartP13nMode]) -> sap.ui.mdc.ChartNew","parameters":{"sP13nMode":"type: sap.ui.mdc.ChartP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"destroy_toolbar":{"!description":"Destroys the _toolbar in the aggregation {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"detachSelectionDetailsActionPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.ChartNew","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.ChartNew","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"get_toolbar":{"!description":"Gets content of aggregation {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chartNew.ChartToolbarNew"},"isFilteringEnabled":{"!description":"Gets whether filtering is enabled for p13n","!static":false,"!category":"function","!type":"fn()"},"zoomOut":{"!description":"Zooms out the inner chart","!static":false,"!category":"function","!type":"fn(iValue: Number)","parameters":{"iValue":"type: int, description: how much steps should be zoomed out"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.ChartNew","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"_getSorters":{"!description":"Returns sorters available for the data","!static":false,"!category":"function","!type":"fn() -> Array"},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chartNew.ItemNew]"},"getIgnoreToolbarActions":{"!description":"Gets current value of property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartToolbarActionType]"},"set_innerChart":{"!description":"Sets the aggregated {@link #get_innerChart _innerChart}.","!static":false,"!category":"function","!type":"fn(o_innerChart: sap.ui.core.Control) -> sap.ui.mdc.ChartNew","parameters":{"o_innerChart":"type: sap.ui.core.Control, description: The _innerChart to set"}},"getMinHeight":{"!description":"Gets current value of property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.chartNew.ItemNew<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chartNew.ItemNew) -> Number","parameters":{"oItem":"type: sap.ui.mdc.chartNew.ItemNew, description: The item whose index is looked for"}},"setLegendVisible":{"!description":"Sets the visibility of the legend Calls the Delegates <code>setLegendVisible<\/code>. Never call the delegates function directly as it would not update the Chart Toolbar!","!static":false,"!category":"function","!type":"fn(bVisible: Boolean)","parameters":{"bVisible":"type: boolean, description: true to show legend, false to hide"}},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMinHeight":{"!description":"Sets a new value for property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.ChartNew","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","init":{"!description":"Initialises the MDC Chart","!static":false,"!category":"function","!type":"fn()"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.ChartNew.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroy_breadcrumbs":{"!description":"Destroys the _breadcrumbs in the aggregation {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"zoomIn":{"!description":"Zooms in the inner chart","!static":false,"!category":"function","!type":"fn(iValue: Number)","parameters":{"iValue":"type: int, description: how much steps should be zoomed in"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"applySettings":{"!description":"Applies given settings onto the MDC Chart, loads the delegate and initializes the MDC Chart","!static":false,"!category":"function","!type":"fn(mSettings: *)","parameters":{"mSettings":"type: *, description: settings to apply"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the SmartChart control.\n\nDefault value is <code>\"column\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectionDetailsActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chartNew.SelectionDetailsActionsNew"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chartNew.ItemNew]"},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | undefined) -> sap.ui.mdc.ChartNew","parameters":{"oFilter":"type: sap.ui.core.ID|undefined, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ChartNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/mdc/ChartNew","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the no data text shown in the chart.\n\nDefault value is <code>\"No data\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"set_breadcrumbs":{"!description":"Sets the aggregated {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn(o_breadcrumbs: sap.m.Breadcrumbs) -> sap.ui.mdc.ChartNew","parameters":{"o_breadcrumbs":"type: sap.m.Breadcrumbs, description: The _breadcrumbs to set"}},"detachInnerChartLoadedData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:innerChartLoadedData innerChartLoadedData} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setIgnoreToolbarActions":{"!description":"Sets a new value for property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sIgnoreToolbarActions?: [sap.ui.mdc.ChartToolbarActionType]) -> sap.ui.mdc.ChartNew","parameters":{"sIgnoreToolbarActions":"type: sap.ui.mdc.ChartToolbarActionType[], description: New value for property <code>ignoreToolbarActions<\/code>"}},"_showDrillDown":{"!description":"shows the drill-down popover for selection a dimension to drill down to.","!static":false,"!category":"function","!type":"fn(oDrillBtn: sap.m.Button)","parameters":{"oDrillBtn":"type: sap.m.Button, description: reference to the drill down button for loacation of the popover"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.chartNew.ItemNew) -> sap.ui.mdc.chartNew.ItemNew","parameters":{"vItem":"type: int|string|sap.ui.mdc.chartNew.ItemNew, description: The item to remove or its index or id"}},"attachSelectionDetailsActionPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ChartNew<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ChartNew<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getManagedObjectModel":{"!description":"Gets the managed object model.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.base.ManagedObjectModel"},"attachInnerChartLoadedData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:innerChartLoadedData innerChartLoadedData} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ChartNew<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ChartNew<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nDefines the no data text shown in the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"No data\"<\/code>.","!static":false,"!category":"function","!type":"fn(sNoDataText?: String) -> sap.ui.mdc.ChartNew","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.mdc.Control","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getChartTypeInfo":{"!description":"Gets information about the current chart type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart.ChartTypeInfo"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getLegendVisible":{"!description":"Gets current value of property {@link #getLegendVisible legendVisible}.\n\nSet chart's legend properties.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"set_toolbar":{"!description":"Sets the aggregated {@link #get_toolbar _toolbar}.","!static":false,"!category":"function","!type":"fn(o_toolbar: sap.ui.mdc.chartNew.ChartToolbarNew) -> sap.ui.mdc.ChartNew","parameters":{"o_toolbar":"type: sap.ui.mdc.chartNew.ChartToolbarNew, description: The _toolbar to set"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart","!static":false,"!category":"function","!type":"fn() -> String"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.ui.mdc.ChartNew","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chartNew.ItemNew) -> sap.ui.mdc.ChartNew","parameters":{"oItem":"type: sap.ui.mdc.chartNew.ItemNew, description: The item to add; if empty, nothing is inserted"}},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"/**\nConstructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"No data\")<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.ChartP13nMode[]<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getIgnoreToolbarActions ignoreToolbarActions} : sap.ui.mdc.ChartToolbarActionType[] (default: [])<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: \"240px\")<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: \"400px\")<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<li>{@link #getChartType chartType} : string (default: \"column\")<\/li>\n<li>{@link #getShowSelectionDetails showSelectionDetails} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.chartNew.ItemNew[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #get_toolbar _toolbar} : sap.ui.mdc.chartNew.ChartToolbarNew<\/li>\n<li>{@link #get_breadcrumbs _breadcrumbs} : sap.m.Breadcrumbs<\/li>\n<li>{@link #get_innerChart _innerChart} : sap.ui.core.Control<\/li>\n<li>{@link #getSelectionDetailsActions selectionDetailsActions} : sap.ui.mdc.chartNew.SelectionDetailsActionsNew<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | undefined)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataPointsSelected dataPointsSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerChartLoadedData innerChartLoadedData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","getShowSelectionDetails":{"!description":"Gets current value of property {@link #getShowSelectionDetails showSelectionDetails}.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentState":{"!description":"Fetches the current state of the chart (as a JSON) Needed for P13n to fetch current state","!static":false,"!category":"function","!type":"fn() -> Object"},"initialized":{"!description":"Can be used to check whether the chart is initialized After initialization the delegate should be loaded and (in case of autoBindOnInit=true) the inner chart has been created","!static":false,"!category":"function","!type":"fn() -> Promise"},"detachDataPointsSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataPointsSelected dataPointsSelected} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSelectionDetailsActionPressed":{"!description":"Fires event {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ChartNew","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCollectionModel":{"!description":"Gets the collection model from the binding information","!static":false,"!category":"function","!type":"fn() -> Object"},"get_innerChart":{"!description":"Gets content of aggregation {@link #get_innerChart _innerChart}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setShowSelectionDetails":{"!description":"Sets a new value for property {@link #getShowSelectionDetails showSelectionDetails}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSelectionDetails?: Boolean) -> sap.ui.mdc.ChartNew","parameters":{"bShowSelectionDetails":"type: boolean, description: New value for property <code>showSelectionDetails<\/code>"}},"get_breadcrumbs":{"!description":"Gets content of aggregation {@link #get_breadcrumbs _breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.m.Breadcrumbs"},"attachDataPointsSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataPointsSelected dataPointsSelected} event of this <code>sap.ui.mdc.ChartNew<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ChartNew<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ChartNew<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectionDetailsActions":{"!description":"Sets the aggregated {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActions: sap.ui.mdc.chartNew.SelectionDetailsActionsNew) -> sap.ui.mdc.ChartNew","parameters":{"oSelectionDetailsActions":"type: sap.ui.mdc.chartNew.SelectionDetailsActionsNew, description: The selectionDetailsActions to set"}},"setSortConditions":{"!description":"Sets a new value for property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSortConditions: Object) -> sap.ui.mdc.ChartNew","parameters":{"oSortConditions":"type: object, description: New value for property <code>sortConditions<\/code>"}},"getAvailableChartTypes":{"!description":"Gets the available chart types for the current state of the inner chart","!static":false,"!category":"function","!type":"fn() -> Array"},"fireInnerChartLoadedData":{"!description":"Fires event {@link #event:innerChartLoadedData innerChartLoadedData} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ChartNew","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nBinds the chart automatically after the initial creation of the chart\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroy_innerChart":{"!description":"Destroys the _innerChart in the aggregation {@link #get_innerChart _innerChart}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nBinds the chart automatically after the initial creation of the chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.ChartNew","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.ChartNew","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"_createDrillBreadcrumbs":{"!description":"shows the Breadcrumbs for current drill-path and drilling up.","!static":false,"!category":"function","!type":"fn()"},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"fireDataPointsSelected":{"!description":"Fires event {@link #event:dataPointsSelected dataPointsSelected} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ChartNew","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroySelectionDetailsActions":{"!description":"Destroys the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ChartNew"},"getSortConditions":{"!description":"Gets current value of property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.","!static":false,"!category":"function","!type":"fn() -> Object"},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartP13nMode]"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chartNew.ItemNew, iIndex: Number) -> sap.ui.mdc.ChartNew","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.chartNew.ItemNew, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.util":{"DateUtil":"sap.ui.mdc.util.DateUtil","TypeUtil":"sap.ui.mdc.util.TypeUtil","FilterUtil":"sap.ui.mdc.util.FilterUtil","!category":"namespace"},"sap.ui.mdc.field.FieldHelpBaseDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.FieldHelpBaseDelegate"},"sap.ui.mdc.util.TypeUtil":{"!description":"Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage. <b>Note:<\/b> This utility is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/util/TypeUtil","!helpDescription":"Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage. <b>Note:<\/b> This utility is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","getDataTypeClass":{"!description":"Returns a dataType class based on given object path, formatoptions and constraints","!static":"true","!category":"function","!type":"fn(sDataType: String) -> sap.ui.model.SimpleType"},"!category":"namespace","getBaseType":{"!description":"To know what control is rendered the <code>Field<\/code> or <\/code>FilterField<\/code> needs to know if the type represents a date, a number or something else in a normalized way.\n\nAs default <code>string<\/code> is returned.","!static":"true","!category":"function","!type":"fn(vType: String, oFormatOptions: Object, oConstraints: Object) -> sap.ui.mdc.enum.BaseType"},"getDataTypeInstance":{"!description":"Returns a dataType instance based on given object path, formatoptions and constraints","!static":"true","!category":"function","!type":"fn(sDataType: String, formatOptions: Object, constraints: Object) -> sap.ui.model.SimpleType"},"getTypeConfig":{"!description":"returns a type mapping configuration object for a given type string or simpleType","!static":"true","!category":"function","!type":"fn(vType: String | sap.ui.model.SimpleType) -> sap.ui.mdc.TypeConfig"}},"sap.ui.mdc.field.OutParameter":{"!description":"The <code>OutParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.OutParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.InParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.OutParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>OutParameter<\/code>.\n\nThe {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element supports out parameters. The binding to the data is defined in this element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFixedValue fixedValue} : any<\/li>\n<li>{@link #getMode mode} : sap.ui.mdc.enum.OutParameterMode (default: Always)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.InParameter#constructor sap.ui.mdc.field.InParameter}\ncan be used as well.","!module":"sap/ui/mdc/field/OutParameter","!helpDescription":"The <code>OutParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","setFixedValue":{"!description":"Sets a new value for property {@link #getFixedValue fixedValue}.\n\nFixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFixedValue?: Object) -> sap.ui.mdc.field.OutParameter","parameters":{"oFixedValue":"type: any, description: New value for property <code>fixedValue<\/code>"}},"getFixedValue":{"!description":"Gets current value of property {@link #getFixedValue fixedValue}.\n\nFixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.mdc.field.InParameter","setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nUpdate mode of the <code>OutParameter<\/code> element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Always<\/code>.","!static":false,"!category":"function","!type":"fn(sMode?: sap.ui.mdc.enum.OutParameterMode) -> sap.ui.mdc.field.OutParameter","parameters":{"sMode":"type: sap.ui.mdc.enum.OutParameterMode, description: New value for property <code>mode<\/code>"}},"!category":"class","getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nUpdate mode of the <code>OutParameter<\/code> element.\n\nDefault value is <code>Always<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.OutParameterMode"}},"sap.ui.mdc.LinkDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.LinkDelegate"},"sap.ui.mdc.field.ConditionFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls to show a popover of conditions.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ConditionFieldHelp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #get_enableOK _enableOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel text that appears as label for the conditions.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the popover header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/field/ConditionFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls to show a popover of conditions.","!proto":"sap.ui.mdc.field.FieldHelpBase","setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel text that appears as label for the conditions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.ConditionFieldHelp","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the popover header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.field.ConditionFieldHelp","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class"},"sap.ui.mdc.condition.FilterConverter":{"!description":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createConditionTypesMapFromFilterBar":{"!description":"creates a map with the types of the conditions.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oFilterBar: sap.ui.mdc.FilterBar) -> Object"},"!module":"sap/ui/mdc/condition/FilterConverter","!helpDescription":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createFilters":{"!description":"Converts all conditions given in a oConditions map into a {@link sap.ui.model.Filter Filter} object.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oConditionTypes: Object, fConvert2FilterCallback?: fn()) -> sap.ui.model.Filter"},"!category":"namespace"},"sap.ui.mdc.field.FieldInput":{"!description":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldInput<\/code>.\n\nThe <code>FieldInput<\/code> control enhances the {@link sap.m.Input Input} control to add ARIA attributes\nand other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldInput","!helpDescription":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.Input","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.field.FieldHelpBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldHelpBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldHelpBase"},"sap.ui.mdc.p13n":{"!category":"namespace","subcontroller":"sap.ui.mdc.p13n.subcontroller","StateUtil":"sap.ui.mdc.p13n.StateUtil_obj","modification":"sap.ui.mdc.p13n.modification","Engine":"sap.ui.mdc.p13n.Engine_obj"},"sap.ui.mdc.field.ValueHelpPanel":{"!description":"A <code>ValueHelpPanel<\/code> control is used inside the <code>FieldValueHelp<\/code> element to show a complex dialog for entering multiple kinds of conditions.","getInputOK":{"!description":"Gets current value of property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ValueHelpPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFormatOptions":{"!description":"Sets a new value for property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFormatOptions?: Object) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"oFormatOptions":"type: object, description: New value for property <code>formatOptions<\/code>"}},"setInputOK":{"!description":"Sets a new value for property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInputOK?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bInputOK":"type: boolean, description: New value for property <code>inputOK<\/code>"}},"!proto":"sap.ui.core.XMLComposite","!category":"class","getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setShowTokenizer":{"!description":"Sets a new value for property {@link #getShowTokenizer showTokenizer}.\n\nIf set to <code>true<\/code>, a tokenizer is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTokenizer?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bShowTokenizer":"type: boolean, description: New value for property <code>showTokenizer<\/code>"}},"setShowFilterbar":{"!description":"Sets a new value for property {@link #getShowFilterbar showFilterbar}.\n\nIf set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFilterbar?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bShowFilterbar":"type: boolean, description: New value for property <code>showFilterbar<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ValueHelpPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.XMLComposite.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>ValueHelpPanel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowTokenizer showTokenizer} : boolean (default: true)<\/li>\n<li>{@link #getShowFilterbar showFilterbar} : boolean (default: true)<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFormatOptions formatOptions} : object (default: {})<\/li>\n<li>{@link #getInputOK inputOK} : boolean (default: true)<\/li>\n<li>{@link #get_filterBarVisible _filterBarVisible} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.XMLComposite#constructor sap.ui.core.XMLComposite}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"!module":"sap/ui/mdc/field/ValueHelpPanel","!helpDescription":"A <code>ValueHelpPanel<\/code> control is used inside the <code>FieldValueHelp<\/code> element to show a complex dialog for entering multiple kinds of conditions.","getShowFilterbar":{"!description":"Gets current value of property {@link #getShowFilterbar showFilterbar}.\n\nIf set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowTokenizer":{"!description":"Gets current value of property {@link #getShowTokenizer showTokenizer}.\n\nIf set to <code>true<\/code>, a tokenizer is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatOptions":{"!description":"Gets current value of property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.odata.v4.FieldBaseDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.odata.v4.FieldBaseDelegate"},"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper"},"sap.ui.mdc.p13n.subcontroller.BaseController_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.subcontroller.BaseController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.subcontroller.BaseController"},"sap.ui.mdc.mixin.AdaptationMixin":{"!description":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!module":"sap/ui/mdc/mixin/AdaptationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!category":"namespace"},"sap.ui.mdc.field.FieldValueHelpMTableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpMTableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpMTableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n{@link sap.m.Table Table} control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.m.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpMTableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpMTableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable of the field help.\n\nAs the <code>FieldValueHelp<\/code> element cannot know the semantic of the items, the caller is responsible for the item handling. The items must be active to allow interaction and selection.\n\nThis can be handled automatically if the following applies: <ul> <li>No <code>keyPath<\/code> or <code>descriptionPath<\/code> is specified for the <code>FieldValueHelp<\/code> element<\/li> <li>Table has no paging <\/li> <li>Table uses <code>ColumnListItem<\/code> as item <\/li> <li>The first column if the table contains the key and the second column the description, using a <code>Text<\/code> control <\/li> <\/ul>\n\nFor everything else the application has to implement the logic.\n\nIf the <code>ListBinding<\/code> of the table is initially created to be suspended, no filtering or selection is triggered. So the table is empty. Upon user interaction (type ahead, search request, or search from <code>FilterBar<\/code>) the <code>ListBinding<\/code> is resumed so the filter is executed. If <code>FilterBar<\/code> is in <code>LiveMode<\/code>, and <code>InParameters<\/code> are used, this also triggers filtering.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table) -> sap.ui.mdc.field.FieldValueHelpMTableWrapper","parameters":{"oTable":"type: sap.m.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.field.ValueHelpPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ValueHelpPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.XMLComposite.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ValueHelpPanel"},"sap.ui.mdc.odata.v4":{"ChartDelegateNew":{"!description":"Delegate class for sap.ui.mdc.ChartNew and ODataV4. Enables additional analytical capabilities. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized.","!module":"sap/ui/mdc/odata/v4/ChartDelegateNew","!category":"enum","!type":"String"},"TableDelegate":{"!description":"Delegate class for sap.ui.mdc.Table and ODataV4. Enables additional analytical capabilities. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized.","!module":"sap/ui/mdc/odata/v4/TableDelegate","!category":"enum","!type":"String"},"FieldBaseDelegate":"sap.ui.mdc.odata.v4.FieldBaseDelegate_obj","FieldValueHelpDelegate":"sap.ui.mdc.odata.v4.FieldValueHelpDelegate_obj","!category":"namespace"},"sap.ui.mdc.field.ListFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a list of items.","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem","parameters":{"vItem":"type: int|string|sap.ui.core.ListItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ListFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFilterList":{"!description":"Gets current value of property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.field.FieldHelpBase","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.ListFieldHelp"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"setUseFirstMatch":{"!description":"Sets a new value for property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the field help.\n\nThe <code>key<\/code> of the items is not shown in the list, but is used as a value of the connected field.\n\nIf the <code>additionalText<\/code> for all the items is not used, the column will not be displayed.\n\n<b>Note:<\/b> At the moment, icons are not supported.\n\n<b>Note:<\/b> If {@link sap.ui.mdc.field.ListFieldHelpItem ListFieldHelpItem} elements are used as items, the items are grouped and sorted by the value provided in the <code>groupKey<\/code> property of the item. The value provided in the <code>groupText<\/code> property will be shown as group header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"!constructorDescription":"Constructor for a new <code>ListFieldHelp<\/code>.\n\nThis field help supports only single selection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterList filterList} : boolean (default: true)<\/li>\n<li>{@link #getUseFirstMatch useFirstMatch} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.ListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","!module":"sap/ui/mdc/field/ListFieldHelp","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item whose index is looked for"}},"!helpDescription":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a list of items.","setFilterList":{"!description":"Sets a new value for property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"getUseFirstMatch":{"!description":"Gets current value of property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.ListItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.p13n.StateUtil_obj":{"!type":"fn()","prototype":"sap.ui.mdc.p13n.StateUtil"},"sap.ui.mdc.LinkDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}. <b>Note:<\/b> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/LinkDelegate","!helpDescription":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}. <b>Note:<\/b> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.field.FieldBaseDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.FieldBaseDelegate"},"sap.ui.mdc.field.ConditionType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionType"},"sap.ui.mdc.field.FieldBase":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxConditions":{"!description":"Gets current value of property {@link #getMaxConditions maxConditions}.\n\nSets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"_observeChanges":{"!description":"Observes changes.\n\nTo be enhanced by <code>Field<\/code>, <\/code>FilterField<\/code>, or other inherited controls.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Changes"}},"getDataType":{"!description":"Gets current value of property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueStateText":{"!description":"Sets a new value for property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueStateText?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueStateText":"type: string, description: New value for property <code>valueStateText<\/code>"}},"getMultipleLines":{"!description":"Gets current value of property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContentDisplay":{"!description":"Gets content of aggregation {@link #getContentDisplay contentDisplay}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is set to <code>Display<\/code>.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getEditMode":{"!description":"Gets current value of property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.EditMode"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired if the inner control has a <\/code>press<\/code> event and this is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"!description":"The <code>FieldBase<\/code> control is the basic control to be used within the {@link sap.ui.mdc.Field Field} and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFieldInfo":{"!description":"Sets the aggregated {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn(oFieldInfo: sap.ui.mdc.field.FieldInfoBase) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldInfo":"type: sap.ui.mdc.field.FieldInfoBase, description: The fieldInfo to set"}},"setMaxConditions":{"!description":"Sets a new value for property {@link #getMaxConditions maxConditions}.\n\nSets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxConditions?: Number) -> sap.ui.mdc.field.FieldBase","parameters":{"iMaxConditions":"type: int, description: New value for property <code>maxConditions<\/code>"}},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"_getFormatOptions":{"!description":"Provides some internals of the field to be used in the value help.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTextAlign":{"!description":"Sets a new value for property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign?: sap.ui.core.TextAlign) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection?: sap.ui.core.TextDirection) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"connectLabel":{"!description":"Assigns a <code>Label<\/code> control to the <code>Field<\/code> or <\/code>FilterField<\/code> controls.\n\nThe text of the label is taken from the <code>Field<\/code> or <\/code>FilterField<\/code> controls. The <code>labelFor<\/code> association is set to the <code>Field<\/code> or <\/code>FilterField<\/code> control.","!static":false,"!category":"function","!type":"fn(oLabel: sap.ui.core.Label) -> sap.ui.mdc.field.FieldBase","parameters":{"oLabel":"type: sap.ui.core.Label, description: Label control"}},"destroyFieldInfo":{"!description":"Destroys the fieldInfo in the aggregation {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setDataType":{"!description":"Sets a new value for property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn(sDataType?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sDataType":"type: string, description: New value for property <code>dataType<\/code>"}},"!module":"sap/ui/mdc/field/FieldBase","!helpDescription":"The <code>FieldBase<\/code> control is the basic control to be used within the {@link sap.ui.mdc.Field Field} and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","setDataTypeConstraints":{"!description":"Sets a new value for property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeConstraints":"type: object, description: New value for property <code>dataTypeConstraints<\/code>"}},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getControlForSuggestion":{"!description":"Returns the control the value help is attached to.\n\nIn the case that number and unit are shown in different controls, this is the unit control, not the number control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setFieldHelp":{"!description":"Sets the associated {@link #getFieldHelp fieldHelp}.","!static":false,"!category":"function","!type":"fn(oFieldHelp: sap.ui.core.ID | sap.ui.mdc.field.FieldHelpBase) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldHelp":"type: sap.ui.core.ID|sap.ui.mdc.field.FieldHelpBase, description: ID of an element which becomes the new target of this fieldHelp association; alternatively, an element instance may be given"}},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the user presses <kbd>Enter<\/kbd>. It allows the application to implement some submit logic.\n\n<b>Note<\/b> This event is only triggered if the field is editable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxConditionsForHelp":{"!description":"In the case that number and unit are shown in different controls, only one unit is supported. So the value help needs to be in single selection mode.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn() -> Object"},"getFieldInfo":{"!description":"Gets content of aggregation {@link #getFieldInfo fieldInfo}.\n\nOptional <code>FieldInfo<\/code> used for detail information. This is only active in display mode.\n\n<b>Note:<\/b> If a special data type is defined or a content control is set, this is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldInfoBase"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditMode":{"!description":"Sets a new value for property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn(sEditMode?: sap.ui.mdc.enum.EditMode) -> sap.ui.mdc.field.FieldBase","parameters":{"sEditMode":"type: sap.ui.mdc.enum.EditMode, description: New value for property <code>editMode<\/code>"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nOptional content that can be rendered.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.Control","getTextAlign":{"!description":"Gets current value of property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","_checkValueInitial":{"!description":"If the value is the initial value of the type (String types) and the field does not show tokens or operators, no condition must be set as the field is then empty.","!static":false,"!category":"function","!type":"fn(vValue: Object) -> Boolean","parameters":{"vValue":"type: any, description: Value to be checked"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to <code>FieldBaseDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the value of the field is changed, for example, each time a key is pressed.\n\n<b>Note<\/b> This event is only triggered if the used content control has a <code>liveChange<\/code> event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowEmptyIndicator":{"!description":"Gets current value of property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowEmptyIndicator":{"!description":"Sets a new value for property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyIndicator?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bShowEmptyIndicator":"type: boolean, description: New value for property <code>showEmptyIndicator<\/code>"}},"!constructorDescription":"Constructor for a new <code>FieldBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDataType dataType} : string (default: 'sap.ui.model.type.String')<\/li>\n<li>{@link #getDataTypeConstraints dataTypeConstraints} : object<\/li>\n<li>{@link #getDataTypeFormatOptions dataTypeFormatOptions} : object<\/li>\n<li>{@link #getEditMode editMode} : sap.ui.mdc.enum.EditMode (default: Editable)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getDisplay display} : sap.ui.mdc.enum.FieldDisplay (default: Value)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMultipleLines multipleLines} : boolean (default: false)<\/li>\n<li>{@link #getMaxConditions maxConditions} : int (default: -1)<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getShowEmptyIndicator showEmptyIndicator} : boolean (default: false)<\/li>\n<li>{@link #get_fieldHelpEnabled _fieldHelpEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_ariaAttributes _ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getContentEdit contentEdit} : sap.ui.core.Control<\/li>\n<li>{@link #getContentDisplay contentDisplay} : sap.ui.core.Control<\/li>\n<li>{@link #getFieldInfo fieldInfo} : sap.ui.mdc.field.FieldInfoBase<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelp fieldHelp} : (sap.ui.core.ID | sap.ui.mdc.field.FieldHelpBase)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyContentDisplay":{"!description":"Destroys the contentDisplay in the aggregation {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThis should be bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} using the corresponding fieldPath.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property must be used to bind {@link sap.ui.mdc.FilterField FilterField} to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.<\/br> For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\nFor an Any (see {@link sap.ui.model.FilterOperator}) {@link sap.ui.mdc.FilterField FilterField} control, the binding looks like this:<\/br> <code>conditions='{$filters>/conditions/navPath&#42;/propertyPath}'<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>navPath#42;/<\/code> as the navigation property name<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul> Between <code>navPath<\/code> and <code>propertyPath<\/code>, <b>&#42;/<\/b> is required.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.FieldBase","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getFieldPath":{"!description":"Gets <code>fieldPath<\/code>.\n\nIf the <code>conditions<\/code> are bound to a <code>ConditionModel<\/code>, the <code>FieldPath<\/code> is determined from this binding.","!static":false,"!category":"function","!type":"fn() -> String"},"getDataTypeFormatOptions":{"!description":"Gets current value of property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireSubmit":{"!description":"Fires event {@link #event:submit submit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setContentEdit":{"!description":"Sets the aggregated {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn(oContentEdit: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentEdit":"type: sap.ui.core.Control, description: The contentEdit to set"}},"setDisplay":{"!description":"Sets a new value for property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in what order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplay?: sap.ui.mdc.enum.FieldDisplay) -> sap.ui.mdc.field.FieldBase","parameters":{"sDisplay":"type: sap.ui.mdc.enum.FieldDisplay, description: New value for property <code>display<\/code>"}},"getValueStateText":{"!description":"Gets current value of property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyContentEdit":{"!description":"Destroys the contentEdit in the aggregation {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setDataTypeFormatOptions":{"!description":"Sets a new value for property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeFormatOptions":"type: object, description: New value for property <code>dataTypeFormatOptions<\/code>"}},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThis should be bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} using the corresponding fieldPath.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property must be used to bind {@link sap.ui.mdc.FilterField FilterField} to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.<\/br> For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\nFor an Any (see {@link sap.ui.model.FilterOperator}) {@link sap.ui.mdc.FilterField FilterField} control, the binding looks like this:<\/br> <code>conditions='{$filters>/conditions/navPath&#42;/propertyPath}'<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>navPath#42;/<\/code> as the navigation property name<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul> Between <code>navPath<\/code> and <code>propertyPath<\/code>, <b>&#42;/<\/b> is required.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setContentDisplay":{"!description":"Sets the aggregated {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn(oContentDisplay: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentDisplay":"type: sap.ui.core.Control, description: The contentDisplay to set"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.field.FieldBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setMultipleLines":{"!description":"Sets a new value for property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultipleLines?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bMultipleLines":"type: boolean, description: New value for property <code>multipleLines<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to <code>FieldBaseDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getContentEdit":{"!description":"Gets content of aggregation {@link #getContentEdit contentEdit}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is not set to <code>Display<\/code>.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getFieldHelp":{"!description":"ID of the element which is the current target of the association {@link #getFieldHelp fieldHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getDisplay":{"!description":"Gets current value of property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in what order.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.FieldDisplay"},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getDataTypeConstraints":{"!description":"Gets current value of property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.condition.ConditionModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.condition.ConditionModel"},"sap.ui.mdc.field.FieldValueHelpMTableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpMTableWrapper"},"sap.ui.mdc.field.OutParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.OutParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.InParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.OutParameter"},"sap.ui.mdc":{"showSelectionDetails":{"!description":"showSelectionDetails : Boolean","!category":"enum","!type":"Boolean"},"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"valueState":{"!description":"Visualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.","!category":"enum","!type":"String"},"_fieldHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required.","!category":"enum","!type":"Boolean"},"minHeight":{"!description":"The minimal height","!category":"enum","!type":"sap.ui.core.CSSSize"},"p13nMode":{"!description":"Specifies the personalization options for the filter bar.","!category":"enum","!type":"[sap.ui.mdc.FilterBarP13nMode]"},"FilterBarDelegate":"sap.ui.mdc.FilterBarDelegate_obj","height":{"!description":"Defines the height of the chart.","!category":"enum","!type":"sap.ui.core.CSSSize"},"maxConditions":{"!description":"Sets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextAlign"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.","!category":"enum","!type":"String"},"enablePersonalization":{"!description":"Enables/disables the personalization settings for users and key users.","!category":"enum","!type":"Boolean"},"enum":"sap.ui.mdc.enum","p13n":"sap.ui.mdc.p13n","mixin":"sap.ui.mdc.mixin","FilterBar":"sap.ui.mdc.FilterBar_obj","condition":"sap.ui.mdc.condition","field":"sap.ui.mdc.field","util":"sap.ui.mdc.util","!module":"sap/ui/mdc/library","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enum.EditMode"},"header":{"!description":"Specifies header text that is shown in chart","!category":"enum","!type":"String"},"FilterField":"sap.ui.mdc.FilterField_obj","conditions":{"!description":"Sets the conditions that represent the values of the field.\n\nThis should be bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} using the corresponding fieldPath.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property must be used to bind {@link sap.ui.mdc.FilterField FilterField} to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.<\/br> For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\nFor an Any (see {@link sap.ui.model.FilterOperator}) {@link sap.ui.mdc.FilterField FilterField} control, the binding looks like this:<\/br> <code>conditions='{$filters>/conditions/navPath&#42;/propertyPath}'<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>navPath#42;/<\/code> as the navigation property name<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul> Between <code>navPath<\/code> and <code>propertyPath<\/code>, <b>&#42;/<\/b> is required.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.","!category":"enum","!type":"[Object]"},"showGoButton":{"!description":"Determines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"Link":"sap.ui.mdc.Link_obj","selectionMode":{"!description":"the selection mode of the chart","!category":"enum","!type":"String"},"showAdaptFiltersButton":{"!description":"Determines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Displays possible errors during the search in a message box.","!category":"enum","!type":"Boolean"},"defaultOperator":{"!description":"Default operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: The <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!category":"enum","!type":"String"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"!category":"namespace","delegate":{"!description":"Path to <code>LinkDelegate<\/code> module that provides the required APIs to create content for the <code>Link<\/code> control.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.","!category":"enum","!type":"Object"},"textDirection":{"!description":"Defines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextDirection"},"Field":"sap.ui.mdc.Field_obj","odata":"sap.ui.mdc.odata","liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"operators":{"!description":"Supported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.","!category":"enum","!type":"[String]"},"ignoreToolbarActions":{"!description":"Specifies which actions should not be available in the chart's toolbar.","!category":"enum","!type":"[sap.ui.mdc.ChartToolbarActionType]"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"String"},"LinkDelegate":"sap.ui.mdc.LinkDelegate_obj","value":{"!description":"The value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!category":"enum","!type":"Object"},"Chart":"sap.ui.mdc.Chart_obj","showChartTooltip":{"!description":"Controls the visibility of the chart tooltip. If set to <code>true <\/code>, an instance of sap.viz.ui5.controls.VizTooltip will be created and shown when hovering over a data point.","!category":"enum","!type":"Boolean"},"multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.","!category":"enum","!type":"Boolean"},"vizProperties":{"!description":"The vizProperties","!category":"enum","!type":"Object"},"dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"legendVisible":{"!description":"Set chart's legend properties.","!category":"enum","!type":"Boolean"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in what order.","!category":"enum","!type":"sap.ui.mdc.enum.FieldDisplay"},"_colorings":{"!description":"The coloring","!category":"enum","!type":"Object"},"minWidth":{"!description":"The minimal width","!category":"enum","!type":"sap.ui.core.CSSSize"},"label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"filterbar":"sap.ui.mdc.filterbar","_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"noDataText":{"!description":"Defines the no data text shown in the chart.","!category":"enum","!type":"String"},"sortConditions":{"!description":"Defines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.","!category":"enum","!type":"Object"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.","!category":"enum","!type":"Boolean"},"width":{"!description":"Defines the width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Specifies the type of chart to be created by the SmartChart control.","!category":"enum","!type":"String"},"additionalValue":{"!description":"The additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!category":"enum","!type":"Object"},"_p13nModeValue":{"!description":"Specifies if the personalization mode for filter conditions is supported.","!category":"enum","!type":"Boolean"},"ChartNew":"sap.ui.mdc.ChartNew_obj","chartNew":"sap.ui.mdc.chartNew","_p13nModeItem":{"!description":"Specifies if the personalization mode for filter items is supported.","!category":"enum","!type":"Boolean"},"autoBindOnInit":{"!description":"Binds the chart automatically after the initial creation of the chart","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.field.FieldMultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldMultiInput"},"sap.ui.mdc.enum.ContentMode":{"!description":"Defines in which mode the content of a <code>Field<\/code> or <code>FilterField<\/code> is rendered.","EditOperator":{"!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ContentMode","EditMulti":{"!category":"enum","!type":"String"},"EditMultiLine":{"!category":"enum","!type":"String"},"!category":"static class","Edit":{"!category":"enum","!type":"String"},"Display":{"!category":"enum","!type":"String"}},"sap.ui.mdc.FilterBar":{"!description":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Advanced Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the filter bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sP13nMode: [sap.ui.mdc.FilterBarP13nMode]) -> sap.ui.mdc.FilterBar","parameters":{"sP13nMode":"type: sap.ui.mdc.FilterBarP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowAdaptFiltersButton":{"!description":"Gets current value of property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAdaptFiltersButton showAdaptFiltersButton} : boolean (default: true)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean (default: true)<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.FilterBarP13nMode[]<\/li>\n<li>{@link #get_p13nModeItem _p13nModeItem} : boolean (default: false)<\/li>\n<li>{@link #get_p13nModeValue _p13nModeValue} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","getShowGoButton":{"!description":"Gets current value of property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/FilterBar","!helpDescription":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Advanced Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setShowAdaptFiltersButton":{"!description":"Sets a new value for property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAdaptFiltersButton?: Boolean) -> sap.ui.mdc.FilterBar","parameters":{"bShowAdaptFiltersButton":"type: boolean, description: New value for property <code>showAdaptFiltersButton<\/code>"}},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the filter bar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterBarP13nMode]"},"setShowGoButton":{"!description":"Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGoButton?: Boolean) -> sap.ui.mdc.FilterBar","parameters":{"bShowGoButton":"type: boolean, description: New value for property <code>showGoButton<\/code>"}}},"sap.ui.mdc.FilterField":{"!description":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. The type of this data must be defined in the <code>dataType<\/code> property.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.field.FieldBase","!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.FilterField<\/code> itself.\n\nThis event is fired when the <code>value<\/code> property of the field is changed.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.FilterField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultOperator":{"!description":"Gets current value of property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: The <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!static":false,"!category":"function","!type":"fn() -> String"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.FilterField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getOperators":{"!description":"Gets current value of property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setOperators":{"!description":"Sets a new value for property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sOperators?: [String]) -> sap.ui.mdc.FilterField","parameters":{"sOperators":"type: string[], description: New value for property <code>operators<\/code>"}},"!constructorDescription":"Constructor for a new <code>FilterField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperators operators} : string[] (default: [])<\/li>\n<li>{@link #getDefaultOperator defaultOperator} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","!module":"sap/ui/mdc/FilterField","!helpDescription":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. The type of this data must be defined in the <code>dataType<\/code> property.","setDefaultOperator":{"!description":"Sets a new value for property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: The <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultOperator?: String) -> sap.ui.mdc.FilterField","parameters":{"sDefaultOperator":"type: string, description: New value for property <code>defaultOperator<\/code>"}}},"sap.ui.mdc.condition":{"Condition":"sap.ui.mdc.condition.Condition","Operator":"sap.ui.mdc.condition.Operator_obj","ConditionModelPropertyBinding":"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj","ConditionModel":"sap.ui.mdc.condition.ConditionModel_obj","!module":"sap/ui/mdc/condition/Condition","ConditionConverter":"sap.ui.mdc.condition.ConditionConverter","!category":"namespace","FilterConverter":"sap.ui.mdc.condition.FilterConverter","RangeOperator":"sap.ui.mdc.condition.RangeOperator_obj","FilterOperatorUtil":"sap.ui.mdc.condition.FilterOperatorUtil"},"sap.ui.mdc.field.InParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.InParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.InParameter"},"sap.ui.mdc.condition.FilterOperatorUtil":{"!description":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","getEQOperator":{"!description":"Returns the \"equal to\" (EQ) operator object.\n\nIf an array of operators is given, and an EQ-like operator exists there, this is returned. Otherwise the EQ operator is returned.\n\nThis is required for {@link sap.ui.mdc.Field Field}.","!static":"true","!category":"function","!type":"fn(aOperators?: [String]) -> sap.ui.mdc.condition.Operator"},"compareConditionsArray":{"!description":"Compares two arrays of conditions\n\nFor EQ conditions only the key part of the values is compared as the text part might be different (translation missing...)","!static":"true","!category":"function","!type":"fn(aConditions1: [sap.ui.mdc.condition.ConditionObject], aConditions2: [sap.ui.mdc.condition.ConditionObject]) -> Boolean"},"getMatchingOperators":{"!description":"Returns the possible operators for the given value from the given array of operators.\n\n<b>Note<\/b> The value must be valid for the current type as this function only checks the operator against values. No type check is performed.","!static":"true","!category":"function","!type":"fn(aOperators: [String], sValue?: String) -> [sap.ui.mdc.condition.Operator]"},"!category":"namespace","compareConditions":{"!description":"Compares two conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":"true","!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean"},"getDefaultOperator":{"!description":"Returns the default operator for the given basic type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType) -> sap.ui.mdc.condition.Operator"},"checkConditionValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> property.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"updateConditionValues":{"!description":"Updates the value range to have the right number of entries for one condition.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"getOperatorsForType":{"!description":"Returns all available default operators for the given type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType) -> [String]"},"addOperator":{"!description":"Adds an operator to the list of known operators.","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator)"},"checkConditionsEmpty":{"!description":"Checks if conditions are empty.\n\nModifies the <code>isEmpty<\/code> parameter of the conditions.","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"},"onlyEQ":{"!description":"Checks if only EQ is supported. ({@link sap.ui.mdc.Field Field} case)","!static":"true","!category":"function","!type":"fn(aOperators: [String]) -> Boolean"},"!module":"sap/ui/mdc/condition/FilterOperatorUtil","setOperatorsForType":{"!description":"Adds an operator to the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, aOperators: [sap.ui.mdc.condition.Operator], oDefaultOperator: sap.ui.mdc.condition.Operator)"},"!helpDescription":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","indexOfCondition":{"!description":"Returns the index of a condition in an array of conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).\n\n<b>Note:<\/b> If two or more identical conditions are in the array, the index is the first one is used.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Number"},"getOperator":{"!description":"Returns the operator object for the given operator name.","!static":"true","!category":"function","!type":"fn(sOperator: String) -> sap.ui.mdc.condition.Operator"},"updateConditionsValues":{"!description":"Updates the value range to have the correct number of entries for an array of conditions","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"}},"sap.ui.mdc.condition.Operator":{"!description":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.Operator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"checkValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> flag.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"getModelFilter":{"!description":"Creates a filter object for a condition.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, sFieldPath: String, oType: sap.ui.model.Type) -> sap.ui.model.Filter","parameters":{"sFieldPath":"type: string, description: Path of filter","oType":"type: sap.ui.model.Type, description: Data type of the used filter field","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"getValues":{"!description":"Returns the real values without operator symbol.\n\nIn this function no type validation takes place.","!static":false,"!category":"function","!type":"fn(sText: String, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean) -> [String]","parameters":{"sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"test":{"!description":"Checks if a text is suitable for an operator.","!static":false,"!category":"function","!type":"fn(sText: String) -> Boolean","parameters":{"sText":"type: string, description: Text"}},"!proto":"sap.ui.base.Object","format":{"!description":"Formats a condition.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType: sap.ui.model.Type, sDisplay: String) -> String","parameters":{"sDisplay":"type: string, description: Display mode","oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"isEmpty":{"!description":"Checks if a condition is empty.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType: sap.ui.model.Type) -> Boolean","parameters":{"oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"!category":"class","isSingleValue":{"!description":"Checks if an <code>Operator<\/code> contains only one value or not.\n\nFor example, an equal Operator has only one value, a between operator two.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"compareConditions":{"!description":"Compares two conditions\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":false,"!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean","parameters":{"oCondition2":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check","oCondition1":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"parse":{"!description":"Parses a text.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean) -> [Object]","parameters":{"sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCondition":{"!description":"Creates a condition for a given text.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"!module":"sap/ui/mdc/condition/Operator","!helpDescription":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","getTypeText":{"!description":"Gets the text for an operator name.","!static":false,"!category":"function","!type":"fn(sKey: String, sType: String) -> String","parameters":{"sType":"type: string, description: Name of type","sKey":"type: string, description: Text key"}},"_createLocalType":{"!description":"Creates a local type.","!static":false,"!category":"function","!type":"fn(vType: String | Object, oType: sap.ui.model.Type) -> sap.ui.model.SimpleType","parameters":{"vType":"type: string|object, description: Type name or object with type information","oType":"type: sap.ui.model.Type, description: original data type"}},"_parseValue":{"!description":"Parses a text based on the data type.","!static":false,"!category":"function","!type":"fn(sValue: String, oType: sap.ui.model.Type) -> String","parameters":{"sValue":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type"}},"validate":{"!description":"Validates a value.","!static":false,"!category":"function","!type":"fn(aValues: Object, oType: sap.ui.model.Type)","parameters":{"aValues":"type: any, description: Values","oType":"type: sap.ui.model.Type, description: Data type"}}},"sap.ui.mdc.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterBar"},"sap.ui.mdc.field.BoolFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.BoolFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.BoolFieldHelp"},"sap.ui.mdc.condition.RangeOperator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.RangeOperator"},"sap.ui.mdc.field.ListFieldHelpItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ListFieldHelpItem"},"sap.ui.mdc.chartNew":{"ChartSelectionDetailsNew":"sap.ui.mdc.chartNew.ChartSelectionDetailsNew_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"ariaHasPopup":{"!description":"Defines the aria-haspopup attribute of the <code>Toolbar<\/code>. if the active <code>design<\/code> is true.\n\n<b>Guidance for choosing appropriate value:<\/b> <ul> <li> We recommend that you use the {@link sap.ui.core.aria.HasPopup} enumeration.<\/li> <li> If you use controls based on <code>sap.m.Popover<\/code> or <code>sap.m.Dialog<\/code>, then you must use <code>AriaHasPopup.Dialog<\/code> (both <code>sap.m.Popover<\/code> and <code>sap.m.Dialog<\/code> have role \"dialog\" assigned internally).<\/li> <li> If you use other controls, or directly <code>sap.ui.core.Popup<\/code>, you need to check the container role/type and map the value of <code>ariaHasPopup<\/code> accordingly.<\/li> <\/ul>","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true. Note: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!category":"enum","!type":"Boolean"},"!category":"namespace","asyncMode":{"!description":"Defines whether the <code>OverflowToolbar<\/code> works in async mode.\n\n<b>Note:<\/b> When this property is set to <code>true<\/code>, the <code>OverflowToolbar<\/code> makes its layout recalculations asynchronously. This way it is not blocking the thread immediately after re-rendering or resizing. However, it may lead to flickering, when there is a change in the width of the content of the <code>OverflowToolbar<\/code>.","!category":"enum","!type":"Boolean"},"enabled":{"!description":"Sets the enabled property of all controls defined in the content aggregation. Note: This property does not apply to the toolbar itself, but rather to its items.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the toolbar design.\n\n<b>Note:<\/b> Design settings are theme-dependent. They also determine the default height of the toolbar.","!category":"enum","!type":"sap.m.ToolbarDesign"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"width":{"!description":"Defines the width of the control. By default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"style":{"!description":"Defines the visual style of the <code>Toolbar<\/code>.\n\n<b>Note:<\/b> The visual styles are theme-dependent.","!category":"enum","!type":"sap.m.ToolbarStyle"},"ChartToolbarNew":"sap.ui.mdc.chartNew.ChartToolbarNew_obj","height":{"!description":"Defines the height of the control. By default, the <code>height<\/code> property depends on the used theme and the <code>design<\/code> property.\n\n<b>Note:<\/b> It is not recommended to use this property if the <code>sapMTBHeader-CTX<\/code> class is used","!category":"enum","!type":"sap.ui.core.CSSSize"}},"sap.ui.mdc.p13n.StateUtil":{"!description":"Utility class for state handling of MDC Controls. The StateUtil is offering a generic way to retrieve and apply a desired state to a given MDC Control. The StateUtil class is tightly coupled to the flex integration of MDC Controls, to use Stateutil API's the given MDC Control instance needs to fully enable all available p13nMode options in order for the StateUtil to create the required changes and retrieve the according state of the control.","!module":"sap/ui/mdc/p13n/StateUtil","!helpDescription":"Utility class for state handling of MDC Controls. The StateUtil is offering a generic way to retrieve and apply a desired state to a given MDC Control. The StateUtil class is tightly coupled to the flex integration of MDC Controls, to use Stateutil API's the given MDC Control instance needs to fully enable all available p13nMode options in order for the StateUtil to create the required changes and retrieve the according state of the control.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.condition.Operator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.Operator"},"sap.ui.mdc.field.ListFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ListFieldHelp"},"sap.ui.mdc.enum.FieldDisplay":{"!description":"Defines the output of a <code>Field<\/code> or <code>FilterField<\/code> control.\n\nFor the <code>Field<\/code> control it defines how the <code>value<\/code> and <code>additionalValue<\/code> properties are formatted.\n\nFor the <code>FilterField<\/code> control it defines how key and description of equal conditions are formatted.","DescriptionValue":{"!description":"The description and the value (key) are displayed in the field. The value (key) is displayed after the description in brackets.","!category":"enum","!type":"String"},"Description":{"!description":"Only the description is displayed","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/FieldDisplay","ValueDescription":{"!description":"The value (key) and the description are displayed in the field. The description is displayed after the value (key) in brackets.","!category":"enum","!type":"String"},"Value":{"!description":"Only the value (key) is displayed","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.chartNew.ChartToolbarNew":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chartNew.ChartToolbarNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"init":{"!description":"Initialises the MDC Chart Selection Details","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chartNew.ChartToolbarNew.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"/**\nConstructor for a new ChartToolbarNew.","!module":"sap/ui/mdc/chartNew/ChartToolbarNew","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.m.OverflowToolbar","!category":"class"},"sap.ui.mdc.p13n.subcontroller":{"BaseController":"sap.ui.mdc.p13n.subcontroller.BaseController_obj","!category":"namespace"},"sap.ui.mdc.util.FilterUtil":{"!description":"Utility class used by mdc controls to create the filter statement","!module":"sap/ui/mdc/util/FilterUtil","!helpDescription":"Utility class used by mdc controls to create the filter statement","getFilterInfo":{"!description":"Creates the filter statements based on the externalize conditions.<br>","!static":"true","!category":"function","!type":"fn(oMDCControl: sap.ui.mdc.Control, mConditions: map, aPropertiesMetadata: Array, aIgnoreProperties: Array) -> Object"},"!category":"namespace","getPropertyByKey":{"!description":"Returns a specific PropertyInfo object by a given name<br>","!static":"true","!category":"function","!type":"fn(aPropertiesMetadata: Array, sKey: String) -> Object"}},"sap.ui.mdc.chartNew.ChartToolbarNew_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chartNew.ChartToolbarNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chartNew.ChartToolbarNew"},"sap.ui.mdc.field.FieldValueHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelp"},"sap.ui.mdc.enum.PersistenceMode":{"!description":"Enumeration of the preferred persistence mode for personalization changes.","Auto":{"!description":"Personalization changes are created and implicitly persisted only in case no additional <code>VariantManagement<\/code> control reference could be found. If a <code>sap.ui.fl.variants.VariantManagement<\/code> has been found, it will be used instead.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/PersistenceMode","!category":"static class","Transient":{"!description":"Personalization changes are not persisted","!category":"enum","!type":"String"},"Global":{"!description":"Personalization changes are created in the flexibility layer using <code>ignoreVariantManagement: true<\/code>","!category":"enum","!type":"String"}},"sap.ui.mdc.field.ListFieldHelpItem":{"!description":"An item that is used in the {@link sap.ui.mdc.field.ListFieldHelp ListFieldHelp} element if grouping is needed.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ListFieldHelpItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setGroupKey":{"!description":"Sets a new value for property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oGroupKey?: Object) -> sap.ui.mdc.field.ListFieldHelpItem","parameters":{"oGroupKey":"type: any, description: New value for property <code>groupKey<\/code>"}},"!constructorDescription":"Constructor for a new ListFieldHelpItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupKey groupKey} : any<\/li>\n<li>{@link #getGroupText groupText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.ListItem#constructor sap.ui.core.ListItem}\ncan be used as well.","!module":"sap/ui/mdc/field/ListFieldHelpItem","!helpDescription":"An item that is used in the {@link sap.ui.mdc.field.ListFieldHelp ListFieldHelp} element if grouping is needed.","setGroupText":{"!description":"Sets a new value for property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupText?: String) -> sap.ui.mdc.field.ListFieldHelpItem","parameters":{"sGroupText":"type: string, description: New value for property <code>groupText<\/code>"}},"!proto":"sap.ui.core.ListItem","!category":"class","getGroupKey":{"!description":"Gets current value of property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> Object"},"getGroupText":{"!description":"Gets current value of property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.mdc.field.DefineConditionPanel":{"!description":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelpPanel<\/code> control to enter different types of conditions.","getInputOK":{"!description":"Gets current value of property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.DefineConditionPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setFormatOptions":{"!description":"Sets a new value for property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFormatOptions?: Object) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"oFormatOptions":"type: object, description: New value for property <code>formatOptions<\/code>"}},"setInputOK":{"!description":"Sets a new value for property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInputOK?: Boolean) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"bInputOK":"type: boolean, description: New value for property <code>inputOK<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DefineConditionPanel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFormatOptions formatOptions} : object (default: {})<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getInputOK inputOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"!module":"sap/ui/mdc/field/DefineConditionPanel","!helpDescription":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelpPanel<\/code> control to enter different types of conditions.","setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getFormatOptions":{"!description":"Gets current value of property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.enum.OutParameterMode":{"!description":"Defines the mode of the <code>OutParameter<\/code> element.","!module":"sap/ui/mdc/enum/OutParameterMode","WhenEmpty":{"!description":"The value in the<code>OutParameter<\/code> element is only set if it was empty before","!category":"enum","!type":"String"},"!category":"static class","Always":{"!description":"The value in the <code>OutParameter<\/code> element is always set","!category":"enum","!type":"String"}},"sap.ui.mdc.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Link"},"sap.ui.mdc.field.FieldHelpBase":{"getKeyForText":{"!description":"Determines the key for a given description.\n\nAs the description might change (uppercase), an object with key and description can be returned.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> As this must not be unique, the result key may be just one for one of the matching texts.","!static":false,"!category":"function","!type":"fn(sText: String, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> Object | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. (Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","sText":"type: string, description: Description","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>"}},"_setContent":{"!description":"Sets the content of the <code>FieldHelp<\/code> element.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oContent: String) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oContent":"type: string, description: Content control to be placed at the <code>Popover<\/code>"}},"openByClick":{"!description":"Determines if the field help should be opened when the user clicks into the connected field.\n\nOpening the field help must be triggered by the control the <code>FieldHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterClose afterClose} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired after the field help has been closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when a value is selected in the field help.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getControlForSuggestion":{"!description":"Returns the control for which the suggestion is opened.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterClose afterClose} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"toggleOpen":{"!description":"Toggles the open state of the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}},"openByTyping":{"!description":"Determines if the field help should be opened when something is typed into the field.\n\nOpening the field help must be triggered by the control the <code>FieldHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean | Promise"},"fireDisconnect":{"!description":"Fires event {@link #event:disconnect disconnect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getContentId":{"!description":"Returns the ID of the content that displays the values (list or table).\n\nThis is used to enrich the field with the corresponding ARIA attributes.","!static":false,"!category":"function","!type":"fn() -> String"},"_handleAfterOpen":{"!description":"Executed after the <code>Popover<\/code> control has been opened.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event object"}},"onFieldChange":{"!description":"Triggers some logic that must be executed in <code>FieldHelp<\/code> element if a <code>Change<\/code> event on the connected field is fired.\n\nThis is done if the corresponding field value is changed (not during navigation).\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"!description":"Base type for the <code>FieldHelp<\/code> association in the <code>FieldBase<\/code> controls.","navigate":{"!description":"Triggers navigation in the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"attachDisconnect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the <code>FieldHelp<\/code> element is disconnected from a control.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldHelpBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"_getPopover":{"!description":"Returns the internal <code>Popover<\/code> control. If the <code>Popover<\/code> control doesn't exist, it will be created.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"skipOpening":{"!description":"Skips the opening of the field help if it is pending because of loading content.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"_getTextOrKey":{"!description":"Determines the description for a given key or the key for a given description.\n\nAs the key might also change (uppercase), an object with key and description can be returned.\n\nWhen using <code>getKeyForText<\/code>, <code>oInParamer<\/code> and <\/code>oOutParameter<\/code> are not supported.","!static":false,"!category":"function","!type":"fn(vValue: Object, bKey: Boolean, oBindingContext: sap.ui.model.Context, oInParameters: Object, oOutParameters: Object, bNoRequest: Boolean, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"bKey":"type: boolean, description: If <code>true<\/code> <code>vValue<\/code> is handled as key, otherwise as description","oBindingContext":"type: sap.ui.model.Context, description: BindingContext of the checked field. (Inside a table FieldHelp might be connected to a different row.)","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","bNoRequest":"type: boolean, description: If <code>true<\/code> the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","vValue":"type: any, description: Key or description"}},"_getOperator":{"!description":"Returns the currently used operator for chosen values.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.condition.Operator"},"_callContentRequest":{"!description":"Calls the <code>contentRequest<\/code> function of the delegate.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean, fnCallback: fn()) -> Boolean","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp","fnCallback":"type: function, description: Callback function executed after asynchronous execution"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldHelpBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValueHelpEnabled":{"!description":"Checks if a \"valueHelp enabled\" text should be rendered for screenreader.\n\nIf a complex value help exists on a field a corresponding text needs to be read out by screen readers. For simple \"combobox\" cases this is not needed. So this depends on the specific value help.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the data of the <code>FieldHelp<\/code> element has been changed.\n\nThis might be needed to trigger an update for formatting a key with it's description.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"isOpen":{"!description":"Determines if the field help is open.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bCheckClosing: Boolean) -> Boolean","parameters":{"bCheckClosing":"type: boolean, description: If set a closing field help is handled as closed"}},"!module":"sap/ui/mdc/field/FieldHelpBase","detachDisconnect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe field help checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(vValue: Object, vParsedValue: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, bCheckKeyFirst: Boolean, bCheckKey: Boolean, bCheckDescription: Boolean, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.","bCheckDescription":"type: boolean, description: If set, the field help checks only if there is an item with the given description. This is set to <code>false<\/code> if only the key is used in the field.","vParsedValue":"type: any, description: Value parsed by type to fit the data type of the key","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","bCheckKeyFirst":"type: boolean, description: If set, the field help checks first if the value fits a key","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","vValue":"type: any, description: Value as entered by user","bCheckKey":"type: boolean, description: If set, the field help checks only if there is an item with the given key. This is set to <code>false<\/code> if the value cannot be a valid key because of type validation."}},"!helpDescription":"Base type for the <code>FieldHelp<\/code> association in the <code>FieldBase<\/code> controls.","_createCondition":{"!description":"Creates a condition based on the used operator.","!static":false,"!category":"function","!type":"fn(sKey: String, sDescription: String, oInParameters: Object, oOutParameters: Object) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: Description of the operator","oInParameters":"type: object, description: In parameters of the condition","sKey":"type: string, description: Operator for the condition","oOutParameters":"type: object, description: Out parameters of the condition"}},"_fireOpen":{"!description":"Fires the <code>open<\/code> event and calls <code>contentRequest<\/code> function of the delegate.\n\nIf the delegate returns a promise, the callback function is called (for example, to open the field help) after the Promise has been resolved.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean, fnCallback: fn()) -> Boolean","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp","fnCallback":"type: function, description: Callback function executed after asynchronous execution"}},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when a value help entry is navigated using arrow keys.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"isUsableForValidation":{"!description":"Defines if the field help is used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"_createPopover":{"!description":"Creates the internal <code>Popover<\/code> control.\n\nTo be used by an inherited FieldHelp, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"_isTextOrKeyRequestSupported":{"!description":"Defines if the field help supports backend requests to determine key or description","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:open open} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getValidateInput":{"!description":"Gets current value of property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"fireOpen":{"!description":"Fires event {@link #event:open open} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:open open} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the field help is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.Element","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isValidationSupported":{"!description":"Defines if the field help supports input validation to determine key or description","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRoleDescription":{"!description":"Returns the description of the ARIA role added to the assigned field.\n\nNormally the role is set to <code>combobox<\/code>. This works for most cases, so per default no description is needed. But in some cases, such as the multi-select mode, an additional description is needed.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> String | null","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as FieldHelp might not be connected to a field)"}},"_getContenRequestProperties":{"!description":"Gets the field help specific properties for <code>contentRequest<\/code> function of the delegate.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> Object","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp"}},"!constructorDescription":"Constructor for a new <code>FieldHelpBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\") (default)<\/li>\n<li>{@link #getValidateInput validateInput} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:disconnect disconnect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"close":{"!description":"closes the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"getFieldPath":{"!description":"Returns the currently used FieldPath.\n\nThis is taken from the connected field.","!static":false,"!category":"function","!type":"fn() -> String"},"connect":{"!description":"Connects the <code>FieldHelp<\/code> element to a control.\n\nIf the <code>FieldHelp<\/code> element is used as an association to multiple controls, it has to know the currently active control to open and interact.\n\nIf the <code>FieldHelp<\/code> element is connected to a control, the <code>disconnected<\/code> event is fired to inform the previously connected control.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oField: sap.ui.core.Control) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oField":"type: sap.ui.core.Control, description: Control to which the <code>FieldHelp<\/code> element is connected to"}},"detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"initBeforeOpen":{"!description":"Calls initialization of the FieldHelp before the FieldHelp is really opened. This is called in typeahead on first letter before the FieldHelp is opened with a delay. So the content can be determined in the delegate coding early.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setValidateInput":{"!description":"Sets a new value for property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidateInput?: Boolean) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"bValidateInput":"type: boolean, description: New value for property <code>validateInput<\/code>"}},"_handleAfterClose":{"!description":"Executed after the <code>Popover<\/code> control has been closed,\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event object"}},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getIcon":{"!description":"Determines the icon for the value help.","!static":false,"!category":"function","!type":"fn() -> String"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"_getField":{"!description":"Returns the currently active control to which the <code>FieldHelp<\/code> element is assigned.\n\nThis is the control set by the <code>connect<\/code> function or the parent.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getTextForKey":{"!description":"Determines the description for a given key.\n\nAs the key might change (uppercase), an object with key and description can be returned.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(vKey: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. (Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.)","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","vKey":"type: any, description: Key"}},"fireAfterClose":{"!description":"Fires event {@link #event:afterClose afterClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the field help for the <code>Field<\/code> control to which the <code>FieldHelp<\/code> element is connected.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}}},"sap.ui.mdc.field.InParameter":{"!description":"The <code>InParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.InParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getDataType":{"!description":"Returns the used data type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Type"},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.InParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new <code>InParameter<\/code>.\n\nThe {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element supports in parameters. The binding to the data is defined in this element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any (default)<\/li>\n<li>{@link #getHelpPath helpPath} : string<\/li>\n<li>{@link #getInitialValueFilterEmpty initialValueFilterEmpty} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/field/InParameter","!helpDescription":"The <code>InParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","setHelpPath":{"!description":"Sets a new value for property {@link #getHelpPath helpPath}.\n\nName of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHelpPath: String) -> sap.ui.mdc.field.InParameter","parameters":{"sHelpPath":"type: string, description: New value for property <code>helpPath<\/code>"}},"getUseConditions":{"!description":"Returns an indicator if conditions are used as values.\n\nIf the <code>value<\/code> property is bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} model it must handle conditions. Only in this case multiple values are supported. Otherwise the value is just updated.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.mdc.field.InParameter","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}},"getHelpPath":{"!description":"Gets current value of property {@link #getHelpPath helpPath}.\n\nName of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.","!static":false,"!category":"function","!type":"fn() -> String"},"setInitialValueFilterEmpty":{"!description":"Sets a new value for property {@link #getInitialValueFilterEmpty initialValueFilterEmpty}.\n\nIf set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInitialValueFilterEmpty?: Boolean) -> sap.ui.mdc.field.InParameter","parameters":{"bInitialValueFilterEmpty":"type: boolean, description: New value for property <code>initialValueFilterEmpty<\/code>"}},"getFieldPath":{"!description":"Returns the path of the <code>InParameter<\/code> element.\n\nIf the <code>value<\/code> property is bound to a model, the binding path is used. If no binding path is found, the value of the <code>helpPath<\/code> property is used.","!static":false,"!category":"function","!type":"fn() -> String"},"getInitialValueFilterEmpty":{"!description":"Gets current value of property {@link #getInitialValueFilterEmpty initialValueFilterEmpty}.\n\nIf set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.filterbar.FilterBarBase":{"attachFiltersChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired after either a filter value or the visibility of a filter item has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowMessages":{"!description":"Sets a new value for property {@link #getShowMessages showMessages}.\n\nDisplays possible errors during the search in a message box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMessages?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowMessages":"type: boolean, description: New value for property <code>showMessages<\/code>"}},"getVariantBackreference":{"!description":"ID of the element which is the current target of the association {@link #getVariantBackreference variantBackreference}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getSearch":{"!description":"Returns the value of the basic search condition.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowGoButton":{"!description":"Gets current value of property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"triggerSearch":{"!description":"Triggers the search.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getAssignedFiltersText":{"!description":"Returns a summary string that contains information about the filters currently assigned. The method returns the text summary for the expanded and collapsed states of the filter bar.<br> <br> <b>Example for collapsed filter bar<\/b>:<br> <i>3 filters active: Company Code, Fiscal Year, Customer<\/i>\n\n<b>Example for expanded filter bar<\/b>:<br> <i>3 filters active (1 hidden)<\/i>","!static":false,"!category":"function","!type":"fn() -> map"},"!description":"The <code>FilterBarBase<\/code> control is used as a faceless base class for common functionality of any MDC FilterBar derivation.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.FilterBarBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField, iIndex: Number) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the filterItem should be inserted at; for a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value greater than the current size of the aggregation, the filterItem is inserted at the last position","oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem to insert; if empty, nothing is inserted"}},"fireFiltersChanged":{"!description":"Fires event {@link #event:filtersChanged filtersChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/mdc/filterbar/FilterBarBase","!helpDescription":"The <code>FilterBarBase<\/code> control is used as a faceless base class for common functionality of any MDC FilterBar derivation.","addFilterItem":{"!description":"Adds some filterItem to the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem to add; if empty, nothing is inserted"}},"getAssignedFilterNames":{"!description":"Returns the labels of all filters with a value assignment.\n\nNote: filters annotated with hiddenFilters will not be considered","!static":false,"!category":"function","!type":"fn() -> Array"},"setIgnoreQueuing":{"!description":"Determines whether the default behavior of the <code>suspendSelection<\/code> property is overruled. This can only happen during the suspension of the selection. If this property is set to <code>true<\/code>, a possible queue of search requests is ignored during the final <code>suspendSelection<\/code> operation. Once the suspension of the selection is over, this value will be set to <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean)","parameters":{"bValue":"type: boolean, description: Indicates if set to <code>true<\/code> that the default behavior is to be ignored"}},"setLiveMode":{"!description":"Sets a new value for property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLiveMode?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bLiveMode":"type: boolean, description: New value for property <code>liveMode<\/code>"}},"getShowMessages":{"!description":"Gets current value of property {@link #getShowMessages showMessages}.\n\nDisplays possible errors during the search in a message box.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInternalConditions":{"!description":"Returns the conditions of the inner condition model.<br> <b>Note:<\/b>This method must only be used for value help scenarios.","!static":false,"!category":"function","!type":"fn() -> map"},"!proto":"sap.ui.mdc.Control","!category":"class","setVariantBackreference":{"!description":"Sets the associated {@link #getVariantBackreference variantBackreference}.","!static":false,"!category":"function","!type":"fn(oVariantBackreference: sap.ui.core.ID | sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oVariantBackreference":"type: sap.ui.core.ID|sap.ui.fl.variants.VariantManagement, description: ID of an element which becomes the new target of this variantBackreference association; alternatively, an element instance may be given"}},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"valid":{"!description":"Used for IFilter interface consuming controls","!static":false,"!category":"function","!type":"fn(bFireSearch: Boolean) -> Promise","parameters":{"bFireSearch":"type: boolean, description: Determines whether a search should be fired once the Promise has been resolved"}},"!constructorDescription":"Constructor for a new FilterBarBase.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getLiveMode liveMode} : boolean (default: false)<\/li>\n<li>{@link #getShowMessages showMessages} : boolean (default: true)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean (default: true)<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getSuspendSelection suspendSelection} : boolean (default: false)<\/li>\n<li>{@link #get_filterCount _filterCount} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.mdc.FilterField[] (default)<\/li>\n<li>{@link #getBasicSearchField basicSearchField} : sap.ui.mdc.FilterField<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getVariantBackreference variantBackreference} : (sap.ui.core.ID | sap.ui.fl.variants.VariantManagement)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersChanged filtersChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","removeFilterItem":{"!description":"Removes a filterItem from the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.ui.mdc.FilterField) -> sap.ui.mdc.FilterField","parameters":{"vFilterItem":"type: int|string|sap.ui.mdc.FilterField, description: The filterItem to remove or its index or id"}},"getCurrentState":{"!description":"Returns the externalized conditions of the inner condition model. This method may only be called, once the <code>initialzed<\/code> is resolved. <b>Note:<\/b> This API may return attributes corresponding to the <code>p13nMode<\/code> property configuration.","!static":false,"!category":"function","!type":"fn() -> Object"},"getBasicSearchField":{"!description":"Gets content of aggregation {@link #getBasicSearchField basicSearchField}.\n\nContains the optional basic search field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.FilterField"},"setInternalConditions":{"!description":"Assigns conditions to the inner condition model. This method is only called for filling the in parameters for value help scenarios.","!static":false,"!category":"function","!type":"fn(mConditions: map)","parameters":{"mConditions":"type: map, description: A map containing the conditions"}},"getFilterItems":{"!description":"Gets content of aggregation {@link #getFilterItems filterItems}.\n\nContains all the displayed {@link sap.ui.mdc.FilterField filter fields} of the <code>FilterBarBase<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"},"removeAllFilterItems":{"!description":"Removes all the controls from the aggregation {@link #getFilterItems filterItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"},"setBasicSearchField":{"!description":"Sets the aggregated {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn(oBasicSearchField: sap.ui.mdc.FilterField) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oBasicSearchField":"type: sap.ui.mdc.FilterField, description: The basicSearchField to set"}},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"getConditions":{"!description":"Returns the external conditions.","!static":false,"!category":"function","!type":"fn() -> map"},"detachFiltersChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired when the Go button is pressed or after a condition change, when <code>liveMode<\/code> is active. <b>Note<\/b>: this event should never be executed programmatically. It is triggered internally by the filter bar after a <code>triggerSearch<\/code> is executed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterConditions":{"!description":"Gets current value of property {@link #getFilterConditions filterConditions}.\n\nSpecifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getIgnoreQueuing":{"!description":"Determines whether the default behavior of the <code>suspendSelection<\/code> property is overruled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getLiveMode":{"!description":"Gets current value of property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.mdc.FilterField<\/code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField) -> Number","parameters":{"oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem whose index is looked for"}},"getSuspendSelection":{"!description":"Gets current value of property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyBasicSearchField":{"!description":"Destroys the basicSearchField in the aggregation {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"setFilterConditions":{"!description":"Sets a new value for property {@link #getFilterConditions filterConditions}.\n\nSpecifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterConditions?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oFilterConditions":"type: object, description: New value for property <code>filterConditions<\/code>"}},"setShowGoButton":{"!description":"Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGoButton?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowGoButton":"type: boolean, description: New value for property <code>showGoButton<\/code>"}},"setSuspendSelection":{"!description":"Sets a new value for property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSuspendSelection?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bSuspendSelection":"type: boolean, description: New value for property <code>suspendSelection<\/code>"}}},"sap.ui.mdc.field.FieldInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldInput"},"sap.ui.mdc.field.FieldValueHelpDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.FieldValueHelpDelegate"},"sap.ui.mdc.field.CustomFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that allows you to add custom content.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.CustomFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.mdc.field.CustomFieldHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.CustomFieldHelp<\/code> itself.\n\nThis event is fired before the field help opens.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.CustomFieldHelp<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.field.FieldHelpBase","!category":"class","fireSelectEvent":{"!description":"Closes the field help and fires the <code>select<\/code> event of the field help.","!static":false,"!category":"function","!type":"fn(aConditions: [Object])","parameters":{"aConditions":"type: object[], description: Selected conditions"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new CustomFieldHelp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","!module":"sap/ui/mdc/field/CustomFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that allows you to add custom content.","fireBeforeOpen":{"!description":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.CustomFieldHelp"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.mdc.field.CustomFieldHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.condition.ConditionConverter":{"!description":"Utilities for condition conversion","toType":{"!description":"converts a stringified condition into a type based condition\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oTypeConfig: sap.ui.mdc.TypeConfig, oTypeUtil: sap.ui.mdc.util.TypeUtil) -> sap.ui.mdc.condition.ConditionObject"},"!module":"sap/ui/mdc/condition/ConditionConverter","!helpDescription":"Utilities for condition conversion","!category":"namespace","toString":{"!description":"Converts a condition into a unified String\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oTypeConfig: sap.ui.mdc.TypeConfig, oTypeUtil: sap.ui.mdc.util.TypeUtil) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oModel: sap.ui.mdc.condition.ConditionModel, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.mdc.condition.ConditionModelPropertyBinding"},"sap.ui.mdc.odata":{"!category":"namespace","v4":"sap.ui.mdc.odata.v4"},"sap.ui.mdc.field.CustomFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.CustomFieldHelp"},"sap.ui.mdc.Field_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Field"},"sap.ui.mdc.Field":{"!description":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code>. For example, if a date type is used, a {@link sap.m.DatePicker DatePicker} is rendered.","setAdditionalValue":{"!description":"Sets a new value for property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAdditionalValue?: Object) -> sap.ui.mdc.Field","parameters":{"oAdditionalValue":"type: any, description: New value for property <code>additionalValue<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Field.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAdditionalValue":{"!description":"Gets current value of property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.mdc.field.FieldBase","!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Field<\/code> itself.\n\nThis event is fired when the <code>value<\/code> property of the field is changed by user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Field<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Field","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new <code>Field<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any (default)<\/li>\n<li>{@link #getAdditionalValue additionalValue} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","!module":"sap/ui/mdc/Field","!helpDescription":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code>. For example, if a date type is used, a {@link sap.m.DatePicker DatePicker} is rendered.","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.mdc.Field","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}}},"sap.ui.mdc.condition.ConditionModel":{"!description":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.model.json.JSONModel","!category":"class","createCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createCondition<br>creates a condition instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sOperator: String, aValues: [Object]) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sOperator":"type: string, description: the operator for the condition","aValues":"type: any[], description: the array of values for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getConditions":{"!description":"Returns conditions for a specified <codeFieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> [sap.ui.mdc.condition.ConditionObject]","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}},"addCondition":{"!description":"Adds a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be added even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be added"}},"createItemCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createItemCondition<br>creates a condition instance for the item-condition","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sKey: String, sDescription: String) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: the description of the operator","sKey":"type: string, description: the operator for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getAllConditions":{"!description":"Returns all conditions.","!static":false,"!category":"function","!type":"fn(vFieldPath: [String | String]) -> Object","parameters":{"vFieldPath":"type: string|string[], description: fieldPath for that conditions are requested"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeCondition":{"!description":"Removes a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> Boolean","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}},"setConditions":{"!description":"Sets conditions. All already existing conditions will be removed.","!static":false,"!category":"function","!type":"fn(oConditions: Object) -> sap.ui.mdc.condition.ConditionModel","parameters":{"oConditions":"type: object, description: object of conditions for corresponding fieldPaths"}},"!module":"sap/ui/mdc/condition/ConditionModel","!helpDescription":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","insertCondition":{"!description":"Inserts a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, iIndex: Number, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be inserted even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","iIndex":"type: int, description: index where the condition should be inserted","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be inserted"}},"merge":{"!description":"merge conditions from the source <code>ConditionModel<\/code> into this instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oSourceConditionModel: sap.ui.mdc.condition.ConditionModel, sSourceFieldPath: String)","parameters":{"sSourceFieldPath":"type: string, description: specifies which conditions from the source should be merged.","sFieldPath":"type: string, description: specifies which conditions should be removed and replaced by the conditions from the source <code>ConditionModel<\/code>","oSourceConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: source <code>ConditionModel<\/code>."}},"clone":{"!description":"creates a clone of the <code>ConditionModel<\/code> which contains the conditions for the <code>sFieldPath<\/code> parameter","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: specifies which conditions should be copied into the clone. If not specified all conditions will be copied."}},"indexOf":{"!description":"Determines the index of a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, fnNormalizeCondition?: fn()) -> Number","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition","fnNormalizeCondition":"type: function, description: normalization method for condition comparison","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be searched"}},"removeAllConditions":{"!description":"Removes all conditions for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}}},"sap.ui.mdc.field.FieldValueHelpContentWrapperBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpContentWrapperBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"sap.ui.mdc.p13n.modification.ModificationHandler_obj":{"!type":"fn()","prototype":"sap.ui.mdc.p13n.modification.ModificationHandler"},"sap.ui.mdc.field.FieldValueHelpUITableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpUITableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpUITableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpUITableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n<code>sap.ui.table.Table<\/code> control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.table.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpUITableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpUITableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.table.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.table.Table) -> sap.ui.mdc.field.FieldValueHelpUITableWrapper","parameters":{"oTable":"type: sap.ui.table.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.enum.BaseType":{"!description":"Enumeration of the possible basic data types\n\nIn <code>Field<\/code> and <code>FilterField<\/code> different data types can be used. This data types might be model dependent. To handle them model independent internally basic types are used.","Numeric":{"!description":"Data type represents a number. (This can be integer, float or any other numeric type.)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/BaseType","!category":"static class","Time":{"!description":"Data type represents a time","!category":"enum","!type":"String"},"String":{"!description":"Data type represents a string","!category":"enum","!type":"String"},"Boolean":{"!description":"Data type represents a boolean","!category":"enum","!type":"String"},"Unit":{"!description":"Data type represents a unit. This means a composite type with a number and a unit part is used.","!category":"enum","!type":"String"},"Date":{"!description":"Data type represents a date","!category":"enum","!type":"String"},"DateTime":{"!description":"Data type represents a date with time","!category":"enum","!type":"String"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.mdc.mixin.FilterIntegrationMixin":{"!description":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>checkAndRebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","!module":"sap/ui/mdc/mixin/FilterIntegrationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>checkAndRebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","!category":"namespace"},"sap.ui.mdc.field.FieldBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldBase"},"sap.ui.mdc.p13n.Engine":{"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.Engine.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getModificationHandler":{"!description":"This method can be used to get the modification handling for a control instance.","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control) -> Object","parameters":{"vControl":"type: sap.ui.mdc.Control, description: undefined"}},"!proto":"sap.ui.base.Object","!category":"class","getRTASettingsActionHandler":{"!description":"This method can be used in the control's according designtime metadata for keyuser personalization.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, mPropertyBag: Object, sKey: String) -> Promise","parameters":{"mPropertyBag":"type: object, description: The propertybag provided in the settings action.","sKey":"type: string, description: The string to be used to call the corresponding Controller","oControl":"type: sap.ui.mdc.Control, description: The registered control instance."}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.Engine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"createUI":{"!description":"This method can be used to create a customized P13nUI without using the default implementation of <code>Engine#showUI<\/code> which will use all properties available by default.","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control, sKey: String, aCustomInfo: [Object]) -> Promise","parameters":{"sKey":"type: string, description: The key for the according Controller","vControl":"type: sap.ui.mdc.Control, description: The registered control instance","aCustomInfo":"type: Object[], description: A custom set of propertyinfos as base to create the UI"}},"registerAdaptation":{"!description":"This method should only be called once per instance to register provided classes of <code>sap.ui.mdc.p13n.Controller<\/code> for the control instance","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oConfig: Object)","parameters":{"oConfig":"type: Object, description: The config object providing key value pairs of keys and <code>sap.ui.mdc.p13n.Controller<\/code> classes.","oControl":"type: sap.ui.mdc.Control, description: The control insance to be registered for adaptation"}},"!constructorDescription":"Constructor for a new Engine. The Engine should always be accessed\nvia 'getInstance' and not by creating a new instance of it. The class should only be used\nto create derivations.","!module":"sap/ui/mdc/p13n/Engine","createChanges":{"!description":"<code>Engine#createChanges<\/code> can be used to programmatically trigger the creation of a set of changes based on the current control state and the provided state.","!static":false,"!category":"function","!type":"fn(mDiffParameters: Object) -> Promise","parameters":{"mDiffParameters":"type: object, description: A map defining the configuration to create the changes."}},"retrieveState":{"!description":"Retrieves the externalized state for a given control instance. The retrieved state is equivalent to the \"getCurrentState\" API for the given Control, after all necessary changes have been applied (e.g. variant appliance and P13n/StateUtil changes). After the returned Promise has been resolved, the returned State is in sync with the according state object of the MDC control (for example \"filterConditions\" for the FilterBar).","!static":false,"!category":"function","!type":"fn(oControl: Object) -> Promise","parameters":{"oControl":"type: object, description: The control instance implementing IxState to retrieve the externalized state"}},"reset":{"!description":"This method can be used to trigger a reset on the provided control instance.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, sKey: String) -> Promise","parameters":{"sKey":"type: string, description: The key for the affected config.","oControl":"type: sap.ui.mdc.Control, description: The according control instance."}},"showUI":{"!description":"Opens a personalization Dialog according to the provided Controller in the registration that the Engine can find for the Control and key.","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control, sKey: String, oSource: sap.ui.core.Control) -> Promise","parameters":{"oSource":"type: sap.ui.core.Control, description: The source to be used. This may only be relevant in case the corresponding Controller is configured for liveMode","sKey":"type: string, description: The key for the according Controller","vControl":"type: sap.ui.mdc.Control, description: The registered control instance"}},"getInstance":{"!static":true,"!category":"function","!type":"fn()"}},"sap.ui":{"!category":"namespace","mdc":"sap.ui.mdc"},"sap.ui.mdc.p13n.modification.ModificationHandler":{"!description":"Interface to implement different modification layers (E.g. Flex-explicit, Flex-implicit, transient)","!module":"sap/ui/mdc/p13n/modification/ModificationHandler","!helpDescription":"Interface to implement different modification layers (E.g. Flex-explicit, Flex-implicit, transient)","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.condition.RangeOperator":{"!description":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.RangeOperator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ui/mdc/condition/RangeOperator","!helpDescription":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","!proto":"sap.ui.mdc.condition.Operator","!category":"class","getStaticText":{"!description":"Creates the static text of the operator","!static":false,"!category":"function","!type":"fn(oType: sap.ui.model.Type) -> String","parameters":{"oType":"type: sap.ui.model.Type, description: data type of the used {@link sap.ui.mdc.FilterField FilterField}"}}},"sap.ui.mdc.filterbar":{"delegate":{"!description":"Defines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.","!category":"enum","!type":"Object"},"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"vh":"sap.ui.mdc.filterbar.vh","liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Displays possible errors during the search in a message box.","!category":"enum","!type":"Boolean"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"!category":"namespace","FilterBarBase":"sap.ui.mdc.filterbar.FilterBarBase_obj","showGoButton":{"!description":"Determines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.vh":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"selectedItemKey":{"!description":"The key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"_currentItemText":{"!description":"_currentItemText : String","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"The title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.","!category":"enum","!type":"String"},"CollectiveSearchSelect":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj"},"sap.ui.mdc.chartNew.ChartSelectionDetailsNew_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chartNew.ChartSelectionDetailsNew with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chartNew.ChartSelectionDetailsNew"},"sap.ui.mdc.field.ConditionType":{"!description":"This class represents a type that is used to map a single condition to a single-value control","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a Condition type.","!module":"sap/ui/mdc/field/ConditionType","!helpDescription":"This class represents a type that is used to map a single condition to a single-value control","!proto":"sap.ui.model.SimpleType","!category":"class"},"sap.ui.mdc.odata.v4.FieldBaseDelegate":{"!description":"Delegate class for sap.ui.mdc.base.FieldBase.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/odata/v4/FieldBaseDelegate","!helpDescription":"Delegate class for sap.ui.mdc.base.FieldBase.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.util.DateUtil":{"!description":"Utility class with functions for Date conversion","typeToUniversalDate":{"!description":"Converts a data type specific date to a UniversalDate.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType) -> sap.ui.core.date.UniversalDate"},"!module":"sap/ui/mdc/util/DateUtil","createInternalType":{"!description":"\"Clones\" a given data type to use a given pattern.","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, sPattern: String) -> sap.ui.model.SimpleType"},"stringToType":{"!description":"Converts a string based date to a Type using a given pattern.","!static":"true","!category":"function","!type":"fn(sDate: String, oType: sap.ui.model.SimpleType, sPattern: String) -> Object"},"universalDateToType":{"!description":"Converts a UniversalDate to data type specific date.","!static":"true","!category":"function","!type":"fn(oDate: sap.ui.core.date.UniversalDate, oType: sap.ui.model.SimpleType) -> Object"},"!helpDescription":"Utility class with functions for Date conversion","!category":"namespace","typeToString":{"!description":"Converts a data type specific date to a string using a given pattern.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType, sPattern: String) -> String"}},"sap.ui.mdc.p13n.modification":{"!category":"namespace","ModificationHandler":"sap.ui.mdc.p13n.modification.ModificationHandler_obj"},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"}}}